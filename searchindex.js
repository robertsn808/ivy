Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/extensions", "data_classes/array/extensions/activations", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions", "data_classes/array/extensions/array_methods", "data_classes/array/extensions/array_methods/diagflat", "data_classes/array/extensions/array_methods/dirichlet", "data_classes/array/extensions/array_methods/exp2", "data_classes/array/extensions/array_methods/flatten", "data_classes/array/extensions/array_methods/fliplr", "data_classes/array/extensions/array_methods/flipud", "data_classes/array/extensions/array_methods/float_power", "data_classes/array/extensions/array_methods/fmax", "data_classes/array/extensions/array_methods/fmod", "data_classes/array/extensions/array_methods/gcd", "data_classes/array/extensions/array_methods/heaviside", "data_classes/array/extensions/array_methods/hstack", "data_classes/array/extensions/array_methods/i0", "data_classes/array/extensions/array_methods/isposinf", "data_classes/array/extensions/array_methods/kron", "data_classes/array/extensions/array_methods/lcm", "data_classes/array/extensions/array_methods/max_pool1d", "data_classes/array/extensions/array_methods/max_pool2d", "data_classes/array/extensions/array_methods/median", "data_classes/array/extensions/array_methods/moveaxis", "data_classes/array/extensions/array_methods/msort", "data_classes/array/extensions/array_methods/nansum", "data_classes/array/extensions/array_methods/pad", "data_classes/array/extensions/array_methods/rot90", "data_classes/array/extensions/array_methods/sinc", "data_classes/array/extensions/array_methods/top_k", "data_classes/array/extensions/array_methods/trapz", "data_classes/array/extensions/array_methods/vstack", "data_classes/array/extensions/conversions", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions", "data_classes/array/extensions/creation", "data_classes/array/extensions/creation/ArrayWithCreationExtensions", "data_classes/array/extensions/data_type", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions", "data_classes/array/extensions/device", "data_classes/array/extensions/device/ArrayWithDeviceExtensions", "data_classes/array/extensions/elementwise", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions", "data_classes/array/extensions/general", "data_classes/array/extensions/general/ArrayWithGeneralExtensions", "data_classes/array/extensions/gradients", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions", "data_classes/array/extensions/image", "data_classes/array/extensions/image/ArrayWithImageExtension", "data_classes/array/extensions/layers", "data_classes/array/extensions/layers/ArrayWithLayersExtensions", "data_classes/array/extensions/linear_algebra", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions", "data_classes/array/extensions/losses", "data_classes/array/extensions/losses/ArrayWithLossesExtensions", "data_classes/array/extensions/manipulation", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions", "data_classes/array/extensions/norms", "data_classes/array/extensions/norms/ArrayWithNormsExtensions", "data_classes/array/extensions/random", "data_classes/array/extensions/random/ArrayWithRandomExtensions", "data_classes/array/extensions/searching", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions", "data_classes/array/extensions/set", "data_classes/array/extensions/set/ArrayWithSetExtensions", "data_classes/array/extensions/sorting", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions", "data_classes/array/extensions/statistical", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions", "data_classes/array/extensions/utility", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/extensions", "data_classes/container/extensions/activations", "data_classes/container/extensions/activations/ContainerWithActivationExtensions", "data_classes/container/extensions/container_methods", "data_classes/container/extensions/container_methods/diagflat", "data_classes/container/extensions/container_methods/dirichlet", "data_classes/container/extensions/container_methods/exp2", "data_classes/container/extensions/container_methods/flatten", "data_classes/container/extensions/container_methods/fliplr", "data_classes/container/extensions/container_methods/flipud", "data_classes/container/extensions/container_methods/float_power", "data_classes/container/extensions/container_methods/fmax", "data_classes/container/extensions/container_methods/fmod", "data_classes/container/extensions/container_methods/gcd", "data_classes/container/extensions/container_methods/hamming_window", "data_classes/container/extensions/container_methods/hann_window", "data_classes/container/extensions/container_methods/heaviside", "data_classes/container/extensions/container_methods/hstack", "data_classes/container/extensions/container_methods/i0", "data_classes/container/extensions/container_methods/isposinf", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/kaiser_window", "data_classes/container/extensions/container_methods/kron", "data_classes/container/extensions/container_methods/lcm", "data_classes/container/extensions/container_methods/max_pool1d", "data_classes/container/extensions/container_methods/max_pool2d", "data_classes/container/extensions/container_methods/median", "data_classes/container/extensions/container_methods/moveaxis", "data_classes/container/extensions/container_methods/msort", "data_classes/container/extensions/container_methods/nansum", "data_classes/container/extensions/container_methods/pad", "data_classes/container/extensions/container_methods/rot90", "data_classes/container/extensions/container_methods/sinc", "data_classes/container/extensions/container_methods/static_diagflat", "data_classes/container/extensions/container_methods/static_dirichlet", "data_classes/container/extensions/container_methods/static_exp2", "data_classes/container/extensions/container_methods/static_flatten", "data_classes/container/extensions/container_methods/static_fliplr", "data_classes/container/extensions/container_methods/static_flipud", "data_classes/container/extensions/container_methods/static_float_power", "data_classes/container/extensions/container_methods/static_fmax", "data_classes/container/extensions/container_methods/static_fmod", "data_classes/container/extensions/container_methods/static_gcd", "data_classes/container/extensions/container_methods/static_hamming_window", "data_classes/container/extensions/container_methods/static_hann_window", "data_classes/container/extensions/container_methods/static_heaviside", "data_classes/container/extensions/container_methods/static_hstack", "data_classes/container/extensions/container_methods/static_i0", "data_classes/container/extensions/container_methods/static_isposinf", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/static_kaiser_window", "data_classes/container/extensions/container_methods/static_kron", "data_classes/container/extensions/container_methods/static_lcm", "data_classes/container/extensions/container_methods/static_max_pool1d", "data_classes/container/extensions/container_methods/static_max_pool2d", "data_classes/container/extensions/container_methods/static_median", "data_classes/container/extensions/container_methods/static_moveaxis", "data_classes/container/extensions/container_methods/static_msort", "data_classes/container/extensions/container_methods/static_nansum", "data_classes/container/extensions/container_methods/static_pad", "data_classes/container/extensions/container_methods/static_rot90", "data_classes/container/extensions/container_methods/static_sinc", "data_classes/container/extensions/container_methods/static_top_k", "data_classes/container/extensions/container_methods/static_triu_indices", "data_classes/container/extensions/container_methods/static_vstack", "data_classes/container/extensions/container_methods/top_k", "data_classes/container/extensions/container_methods/triu_indices", "data_classes/container/extensions/container_methods/vstack", "data_classes/container/extensions/conversions", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions", "data_classes/container/extensions/creation", "data_classes/container/extensions/creation/ContainerWithCreationExtensions", "data_classes/container/extensions/data_type", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions", "data_classes/container/extensions/device", "data_classes/container/extensions/device/ContainerWithDeviceExtensions", "data_classes/container/extensions/elementwise", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions", "data_classes/container/extensions/general", "data_classes/container/extensions/general/ContainerWithGeneralExtensions", "data_classes/container/extensions/gradients", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions", "data_classes/container/extensions/image", "data_classes/container/extensions/image/ContainerWithImageExtensions", "data_classes/container/extensions/layers", "data_classes/container/extensions/layers/ContainerWithLayersExtensions", "data_classes/container/extensions/linear_algebra", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions", "data_classes/container/extensions/losses", "data_classes/container/extensions/losses/ContainerWithLossesExtensions", "data_classes/container/extensions/manipulation", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions", "data_classes/container/extensions/norms", "data_classes/container/extensions/norms/ContainerWithNormsExtensions", "data_classes/container/extensions/random", "data_classes/container/extensions/random/ContainerWithRandomExtensions", "data_classes/container/extensions/searching", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions", "data_classes/container/extensions/set", "data_classes/container/extensions/set/ContainerWithSetExtensions", "data_classes/container/extensions/sorting", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions", "data_classes/container/extensions/statistical", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions", "data_classes/container/extensions/utility", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/extensions", "functional/extensions/activations", "functional/extensions/compilation", "functional/extensions/constants", "functional/extensions/creation", "functional/extensions/creation/triu_indices", "functional/extensions/data_type", "functional/extensions/device", "functional/extensions/elementwise", "functional/extensions/elementwise/exp2", "functional/extensions/elementwise/float_power", "functional/extensions/elementwise/fmax", "functional/extensions/elementwise/fmod", "functional/extensions/elementwise/gcd", "functional/extensions/elementwise/isposinf", "functional/extensions/elementwise/lcm", "functional/extensions/elementwise/nansum", "functional/extensions/elementwise/sinc", "functional/extensions/elementwise/trapz", "functional/extensions/general", "functional/extensions/gradients", "functional/extensions/layers", "functional/extensions/layers/hamming_window", "functional/extensions/layers/hann_window", "functional/extensions/layers/kaiser_bessel_derived_window", "functional/extensions/layers/kaiser_window", "functional/extensions/layers/max_pool1d", "functional/extensions/layers/max_pool2d", "functional/extensions/layers/pad", "functional/extensions/layers/vorbis_window", "functional/extensions/linear_algebra", "functional/extensions/linear_algebra/diagflat", "functional/extensions/linear_algebra/kron", "functional/extensions/losses", "functional/extensions/manipulation", "functional/extensions/manipulation/flatten", "functional/extensions/manipulation/fliplr", "functional/extensions/manipulation/flipud", "functional/extensions/manipulation/heaviside", "functional/extensions/manipulation/hstack", "functional/extensions/manipulation/i0", "functional/extensions/manipulation/moveaxis", "functional/extensions/manipulation/ndenumerate", "functional/extensions/manipulation/ndindex", "functional/extensions/manipulation/rot90", "functional/extensions/manipulation/top_k", "functional/extensions/manipulation/vstack", "functional/extensions/meta", "functional/extensions/nest", "functional/extensions/norms", "functional/extensions/random", "functional/extensions/random/dirichlet", "functional/extensions/searching", "functional/extensions/set", "functional/extensions/sorting", "functional/extensions/sorting/msort", "functional/extensions/sparse_array", "functional/extensions/sparse_array/is_ivy_sparse_array", "functional/extensions/sparse_array/is_native_sparse_array", "functional/extensions/sparse_array/native_sparse_array", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/extensions/statistical", "functional/extensions/statistical/median", "functional/extensions/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_frontend_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diag/diag_array", "functional/ivy/linear_algebra/diag/diag_container", "functional/ivy/linear_algebra/diag/diag_functional", "functional/ivy/linear_algebra/diag/static_diag_container", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/activations.rst", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions.rst", "data_classes/array/extensions/array_methods.rst", "data_classes/array/extensions/array_methods/diagflat.rst", "data_classes/array/extensions/array_methods/dirichlet.rst", "data_classes/array/extensions/array_methods/exp2.rst", "data_classes/array/extensions/array_methods/flatten.rst", "data_classes/array/extensions/array_methods/fliplr.rst", "data_classes/array/extensions/array_methods/flipud.rst", "data_classes/array/extensions/array_methods/float_power.rst", "data_classes/array/extensions/array_methods/fmax.rst", "data_classes/array/extensions/array_methods/fmod.rst", "data_classes/array/extensions/array_methods/gcd.rst", "data_classes/array/extensions/array_methods/heaviside.rst", "data_classes/array/extensions/array_methods/hstack.rst", "data_classes/array/extensions/array_methods/i0.rst", "data_classes/array/extensions/array_methods/isposinf.rst", "data_classes/array/extensions/array_methods/kron.rst", "data_classes/array/extensions/array_methods/lcm.rst", "data_classes/array/extensions/array_methods/max_pool1d.rst", "data_classes/array/extensions/array_methods/max_pool2d.rst", "data_classes/array/extensions/array_methods/median.rst", "data_classes/array/extensions/array_methods/moveaxis.rst", "data_classes/array/extensions/array_methods/msort.rst", "data_classes/array/extensions/array_methods/nansum.rst", "data_classes/array/extensions/array_methods/pad.rst", "data_classes/array/extensions/array_methods/rot90.rst", "data_classes/array/extensions/array_methods/sinc.rst", "data_classes/array/extensions/array_methods/top_k.rst", "data_classes/array/extensions/array_methods/trapz.rst", "data_classes/array/extensions/array_methods/vstack.rst", "data_classes/array/extensions/conversions.rst", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions.rst", "data_classes/array/extensions/creation.rst", "data_classes/array/extensions/creation/ArrayWithCreationExtensions.rst", "data_classes/array/extensions/data_type.rst", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions.rst", "data_classes/array/extensions/device.rst", "data_classes/array/extensions/device/ArrayWithDeviceExtensions.rst", "data_classes/array/extensions/elementwise.rst", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions.rst", "data_classes/array/extensions/general.rst", "data_classes/array/extensions/general/ArrayWithGeneralExtensions.rst", "data_classes/array/extensions/gradients.rst", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions.rst", "data_classes/array/extensions/image.rst", "data_classes/array/extensions/image/ArrayWithImageExtension.rst", "data_classes/array/extensions/layers.rst", "data_classes/array/extensions/layers/ArrayWithLayersExtensions.rst", "data_classes/array/extensions/linear_algebra.rst", "data_classes/array/extensions/linear_algebra/ArrayWithLinalgExtensions.rst", "data_classes/array/extensions/losses.rst", "data_classes/array/extensions/losses/ArrayWithLossesExtensions.rst", "data_classes/array/extensions/manipulation.rst", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions.rst", "data_classes/array/extensions/norms.rst", "data_classes/array/extensions/norms/ArrayWithNormsExtensions.rst", "data_classes/array/extensions/random.rst", "data_classes/array/extensions/random/ArrayWithRandomExtensions.rst", "data_classes/array/extensions/searching.rst", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions.rst", "data_classes/array/extensions/set.rst", "data_classes/array/extensions/set/ArrayWithSetExtensions.rst", "data_classes/array/extensions/sorting.rst", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions.rst", "data_classes/array/extensions/statistical.rst", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions.rst", "data_classes/array/extensions/utility.rst", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/activations.rst", "data_classes/container/extensions/activations/ContainerWithActivationExtensions.rst", "data_classes/container/extensions/container_methods.rst", "data_classes/container/extensions/container_methods/diagflat.rst", "data_classes/container/extensions/container_methods/dirichlet.rst", "data_classes/container/extensions/container_methods/exp2.rst", "data_classes/container/extensions/container_methods/flatten.rst", "data_classes/container/extensions/container_methods/fliplr.rst", "data_classes/container/extensions/container_methods/flipud.rst", "data_classes/container/extensions/container_methods/float_power.rst", "data_classes/container/extensions/container_methods/fmax.rst", "data_classes/container/extensions/container_methods/fmod.rst", "data_classes/container/extensions/container_methods/gcd.rst", "data_classes/container/extensions/container_methods/hamming_window.rst", "data_classes/container/extensions/container_methods/hann_window.rst", "data_classes/container/extensions/container_methods/heaviside.rst", "data_classes/container/extensions/container_methods/hstack.rst", "data_classes/container/extensions/container_methods/i0.rst", "data_classes/container/extensions/container_methods/isposinf.rst", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/kaiser_window.rst", "data_classes/container/extensions/container_methods/kron.rst", "data_classes/container/extensions/container_methods/lcm.rst", "data_classes/container/extensions/container_methods/max_pool1d.rst", "data_classes/container/extensions/container_methods/max_pool2d.rst", "data_classes/container/extensions/container_methods/median.rst", "data_classes/container/extensions/container_methods/moveaxis.rst", "data_classes/container/extensions/container_methods/msort.rst", "data_classes/container/extensions/container_methods/nansum.rst", "data_classes/container/extensions/container_methods/pad.rst", "data_classes/container/extensions/container_methods/rot90.rst", "data_classes/container/extensions/container_methods/sinc.rst", "data_classes/container/extensions/container_methods/static_diagflat.rst", "data_classes/container/extensions/container_methods/static_dirichlet.rst", "data_classes/container/extensions/container_methods/static_exp2.rst", "data_classes/container/extensions/container_methods/static_flatten.rst", "data_classes/container/extensions/container_methods/static_fliplr.rst", "data_classes/container/extensions/container_methods/static_flipud.rst", "data_classes/container/extensions/container_methods/static_float_power.rst", "data_classes/container/extensions/container_methods/static_fmax.rst", "data_classes/container/extensions/container_methods/static_fmod.rst", "data_classes/container/extensions/container_methods/static_gcd.rst", "data_classes/container/extensions/container_methods/static_hamming_window.rst", "data_classes/container/extensions/container_methods/static_hann_window.rst", "data_classes/container/extensions/container_methods/static_heaviside.rst", "data_classes/container/extensions/container_methods/static_hstack.rst", "data_classes/container/extensions/container_methods/static_i0.rst", "data_classes/container/extensions/container_methods/static_isposinf.rst", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/static_kaiser_window.rst", "data_classes/container/extensions/container_methods/static_kron.rst", "data_classes/container/extensions/container_methods/static_lcm.rst", "data_classes/container/extensions/container_methods/static_max_pool1d.rst", "data_classes/container/extensions/container_methods/static_max_pool2d.rst", "data_classes/container/extensions/container_methods/static_median.rst", "data_classes/container/extensions/container_methods/static_moveaxis.rst", "data_classes/container/extensions/container_methods/static_msort.rst", "data_classes/container/extensions/container_methods/static_nansum.rst", "data_classes/container/extensions/container_methods/static_pad.rst", "data_classes/container/extensions/container_methods/static_rot90.rst", "data_classes/container/extensions/container_methods/static_sinc.rst", "data_classes/container/extensions/container_methods/static_top_k.rst", "data_classes/container/extensions/container_methods/static_triu_indices.rst", "data_classes/container/extensions/container_methods/static_vstack.rst", "data_classes/container/extensions/container_methods/top_k.rst", "data_classes/container/extensions/container_methods/triu_indices.rst", "data_classes/container/extensions/container_methods/vstack.rst", "data_classes/container/extensions/conversions.rst", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions.rst", "data_classes/container/extensions/creation.rst", "data_classes/container/extensions/creation/ContainerWithCreationExtensions.rst", "data_classes/container/extensions/data_type.rst", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions.rst", "data_classes/container/extensions/device.rst", "data_classes/container/extensions/device/ContainerWithDeviceExtensions.rst", "data_classes/container/extensions/elementwise.rst", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions.rst", "data_classes/container/extensions/general.rst", "data_classes/container/extensions/general/ContainerWithGeneralExtensions.rst", "data_classes/container/extensions/gradients.rst", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions.rst", "data_classes/container/extensions/image.rst", "data_classes/container/extensions/image/ContainerWithImageExtensions.rst", "data_classes/container/extensions/layers.rst", "data_classes/container/extensions/layers/ContainerWithLayersExtensions.rst", "data_classes/container/extensions/linear_algebra.rst", "data_classes/container/extensions/linear_algebra/ContainerWithLinalgExtensions.rst", "data_classes/container/extensions/losses.rst", "data_classes/container/extensions/losses/ContainerWithLossesExtensions.rst", "data_classes/container/extensions/manipulation.rst", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions.rst", "data_classes/container/extensions/norms.rst", "data_classes/container/extensions/norms/ContainerWithNormsExtensions.rst", "data_classes/container/extensions/random.rst", "data_classes/container/extensions/random/ContainerWithRandomExtensions.rst", "data_classes/container/extensions/searching.rst", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions.rst", "data_classes/container/extensions/set.rst", "data_classes/container/extensions/set/ContainerWithSetExtensions.rst", "data_classes/container/extensions/sorting.rst", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions.rst", "data_classes/container/extensions/statistical.rst", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions.rst", "data_classes/container/extensions/utility.rst", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/extensions.rst", "functional/extensions/activations.rst", "functional/extensions/compilation.rst", "functional/extensions/constants.rst", "functional/extensions/creation.rst", "functional/extensions/creation/triu_indices.rst", "functional/extensions/data_type.rst", "functional/extensions/device.rst", "functional/extensions/elementwise.rst", "functional/extensions/elementwise/exp2.rst", "functional/extensions/elementwise/float_power.rst", "functional/extensions/elementwise/fmax.rst", "functional/extensions/elementwise/fmod.rst", "functional/extensions/elementwise/gcd.rst", "functional/extensions/elementwise/isposinf.rst", "functional/extensions/elementwise/lcm.rst", "functional/extensions/elementwise/nansum.rst", "functional/extensions/elementwise/sinc.rst", "functional/extensions/elementwise/trapz.rst", "functional/extensions/general.rst", "functional/extensions/gradients.rst", "functional/extensions/layers.rst", "functional/extensions/layers/hamming_window.rst", "functional/extensions/layers/hann_window.rst", "functional/extensions/layers/kaiser_bessel_derived_window.rst", "functional/extensions/layers/kaiser_window.rst", "functional/extensions/layers/max_pool1d.rst", "functional/extensions/layers/max_pool2d.rst", "functional/extensions/layers/pad.rst", "functional/extensions/layers/vorbis_window.rst", "functional/extensions/linear_algebra.rst", "functional/extensions/linear_algebra/diagflat.rst", "functional/extensions/linear_algebra/kron.rst", "functional/extensions/losses.rst", "functional/extensions/manipulation.rst", "functional/extensions/manipulation/flatten.rst", "functional/extensions/manipulation/fliplr.rst", "functional/extensions/manipulation/flipud.rst", "functional/extensions/manipulation/heaviside.rst", "functional/extensions/manipulation/hstack.rst", "functional/extensions/manipulation/i0.rst", "functional/extensions/manipulation/moveaxis.rst", "functional/extensions/manipulation/ndenumerate.rst", "functional/extensions/manipulation/ndindex.rst", "functional/extensions/manipulation/rot90.rst", "functional/extensions/manipulation/top_k.rst", "functional/extensions/manipulation/vstack.rst", "functional/extensions/meta.rst", "functional/extensions/nest.rst", "functional/extensions/norms.rst", "functional/extensions/random.rst", "functional/extensions/random/dirichlet.rst", "functional/extensions/searching.rst", "functional/extensions/set.rst", "functional/extensions/sorting.rst", "functional/extensions/sorting/msort.rst", "functional/extensions/sparse_array.rst", "functional/extensions/sparse_array/is_ivy_sparse_array.rst", "functional/extensions/sparse_array/is_native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/extensions/statistical.rst", "functional/extensions/statistical/median.rst", "functional/extensions/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_frontend_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diag/diag_array.rst", "functional/ivy/linear_algebra/diag/diag_container.rst", "functional/ivy/linear_algebra/diag/diag_functional.rst", "functional/ivy/linear_algebra/diag/static_diag_container.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Extensions", "Activations", "ArrayWithActivationsExtensions", "Array methods", "diagflat array", "dirichlet array", "exp2 array", "flatten array", "fliplr array", "flipud array", "float_power array", "fmax array", "fmod array", "gcd array", "heaviside array", "hstack array", "i0 array", "isposinf array", "kron array", "lcm array", "max_pool1d array", "max_pool2d array", "median array", "moveaxis array", "msort array", "nansum array", "pad array", "rot90 array", "sinc array", "top_k array", "trapz array", "vstack array", "Conversions", "ArrayWithConversionsExtensions", "Creation", "ArrayWithCreationExtensions", "Data type", "ArrayWithData_typeExtensions", "Device", "ArrayWithDeviceExtensions", "Elementwise", "ArrayWithElementWiseExtensions", "General", "ArrayWithGeneralExtensions", "Gradients", "ArrayWithGradientsExtensions", "Image", "ArrayWithImageExtension", "Layers", "ArrayWithLayersExtensions", "Linear algebra", "ArrayWithLinalgExtensions", "Losses", "ArrayWithLossesExtensions", "Manipulation", "ArrayWithManipulationExtensions", "Norms", "ArrayWithNormsExtensions", "Random", "ArrayWithRandomExtensions", "Searching", "ArrayWithSearchingExtensions", "Set", "ArrayWithSetExtensions", "Sorting", "ArrayWithSortingExtensions", "Statistical", "ArrayWithStatisticalExtensions", "Utility", "ArrayWithUtilityExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Extensions", "Activations", "ContainerWithActivationExtensions", "Container methods", "diagflat container", "dirichlet container", "exp2 container", "flatten container", "fliplr container", "flipud container", "float_power container", "fmax container", "fmod container", "gcd container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "i0 container", "isposinf container", "kaiser_bessel_derived_window container", "kaiser_window container", "kron container", "lcm container", "max_pool1d container", "max_pool2d container", "median container", "moveaxis container", "msort container", "nansum container", "pad container", "rot90 container", "sinc container", "static_diagflat container", "static_dirichlet container", "static_exp2 container", "static_flatten container", "static_fliplr container", "static_flipud container", "static_float_power container", "static_fmax container", "static_fmod container", "static_gcd container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_i0 container", "static_isposinf container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_kron container", "static_lcm container", "static_max_pool1d container", "static_max_pool2d container", "static_median container", "static_moveaxis container", "static_msort container", "static_nansum container", "static_pad container", "static_rot90 container", "static_sinc container", "static_top_k container", "static_triu_indices container", "static_vstack container", "top_k container", "triu_indices container", "vstack container", "Conversions", "ContainerWithConversionExtensions", "Creation", "ContainerWithCreationExtensions", "Data type", "ContainerWithData_typeExtensions", "Device", "ContainerWithDeviceExtensions", "Elementwise", "ContainerWithElementWiseExtensions", "General", "ContainerWithGeneralExtensions", "Gradients", "ContainerWithGradientsExtensions", "Image", "ContainerWithImageExtensions", "Layers", "ContainerWithLayersExtensions", "Linear algebra", "ContainerWithLinalgExtensions", "Losses", "ContainerWithLossesExtensions", "Manipulation", "ContainerWithManipulationExtensions", "Norms", "ContainerWithNormsExtensions", "Random", "ContainerWithRandomExtensions", "Searching", "ContainerWithSearchingExtensions", "Set", "ContainerWithSetExtensions", "Sorting", "ContainerWithSortingExtensions", "Statistical", "ContainerWithStatisticalExtensions", "Utility", "ContainerWithUtilityExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Extensions", "Activations", "Compilation", "Constants", "Creation", "triu_indices", "Data type", "Device", "Elementwise", "exp2", "float_power", "fmax", "fmod", "gcd", "isposinf", "lcm", "nansum", "sinc", "trapz", "General", "Gradients", "Layers", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "max_pool1d", "max_pool2d", "pad", "vorbis_window", "Linear algebra", "diagflat", "kron", "Losses", "Manipulation", "flatten", "fliplr", "flipud", "heaviside", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "rot90", "top_k", "vstack", "Meta", "Nest", "Norms", "Random", "dirichlet", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "Utility", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_frontend_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 19, 23, 26, 33, 34, 35, 41, 42, 128, 129, 281, 282, 321, 324, 332, 337, 355, 427, 428, 999, 1192, 1311, 1337, 1340, 1341, 1343, 1714, 1730, 1731], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 324, 326, 327, 328, 329, 330, 335, 336, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 437, 442, 447, 452, 457, 462, 467, 468, 469, 470, 471, 472, 475, 479, 480, 481, 482, 485, 486, 491, 494, 499, 500, 505, 508, 511, 516, 521, 526, 529, 534, 539, 544, 547, 552, 553, 554, 555, 560, 565, 570, 575, 576, 577, 578, 581, 582, 583, 587, 588, 593, 596, 599, 604, 605, 606, 611, 616, 621, 626, 627, 628, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 673, 674, 675, 676, 677, 678, 683, 688, 693, 698, 703, 708, 713, 718, 723, 728, 733, 738, 743, 748, 753, 758, 763, 768, 773, 778, 783, 788, 793, 798, 803, 808, 813, 818, 823, 828, 833, 838, 843, 848, 853, 858, 863, 868, 873, 878, 883, 888, 893, 898, 903, 908, 913, 918, 923, 928, 933, 938, 943, 948, 953, 958, 963, 968, 973, 978, 983, 988, 993, 999, 1000, 1005, 1006, 1007, 1010, 1015, 1016, 1021, 1026, 1027, 1028, 1031, 1036, 1041, 1046, 1049, 1054, 1055, 1056, 1061, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1078, 1079, 1080, 1081, 1086, 1087, 1092, 1097, 1102, 1103, 1108, 1109, 1114, 1119, 1124, 1125, 1126, 1127, 1128, 1129, 1134, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1154, 1159, 1164, 1165, 1170, 1171, 1176, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1192, 1193, 1194, 1198, 1202, 1203, 1204, 1208, 1213, 1214, 1218, 1222, 1226, 1227, 1232, 1233, 1234, 1239, 1244, 1245, 1246, 1247, 1252, 1257, 1262, 1266, 1271, 1276, 1277, 1278, 1279, 1284, 1289, 1290, 1291, 1296, 1301, 1306, 1311, 1312, 1317, 1322, 1327, 1332, 1337, 1341, 1344, 1349, 1354, 1359, 1364, 1368, 1373, 1378, 1383, 1388, 1393, 1398, 1403, 1408, 1413, 1418, 1423, 1428, 1433, 1438, 1443, 1444, 1449, 1454, 1459, 1460, 1465, 1470, 1475, 1480, 1485, 1490, 1495, 1500, 1505, 1510, 1515, 1520, 1525, 1530, 1535, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1567, 1568, 1573, 1578, 1583, 1588, 1589, 1594, 1595, 1600, 1605, 1610, 1615, 1620, 1621, 1626, 1631, 1636, 1641, 1642, 1647, 1652, 1657, 1658, 1663, 1668, 1672, 1676, 1680, 1684, 1688, 1692, 1697, 1702, 1703, 1708, 1713, 1714, 1720, 1731, 1774, 1775], "check_al": 1, "result": [1, 2, 4, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 323, 324, 327, 329, 330, 331, 332, 333, 334, 337, 340, 354, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 627, 628, 631, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1193, 1202, 1204, 1207, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1544, 1547, 1550, 1557, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1615, 1619, 1620, 1621, 1625, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1725, 1727], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 34, 42, 320, 323, 325, 326, 331, 337, 339, 1774, 1775], "one": [1, 2, 19, 24, 26, 34, 35, 40, 41, 42, 54, 55, 102, 103, 128, 129, 132, 133, 140, 141, 144, 145, 150, 151, 152, 153, 165, 166, 171, 172, 177, 178, 255, 256, 263, 264, 269, 270, 281, 282, 285, 286, 287, 288, 293, 294, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 318, 319, 321, 323, 326, 327, 328, 329, 330, 331, 333, 335, 336, 339, 340, 342, 354, 374, 377, 382, 400, 401, 427, 428, 470, 472, 473, 482, 484, 511, 514, 521, 524, 552, 560, 563, 570, 573, 643, 667, 677, 743, 746, 868, 871, 893, 896, 898, 901, 999, 1000, 1003, 1125, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1204, 1207, 1214, 1217, 1222, 1225, 1227, 1231, 1245, 1257, 1260, 1311, 1344, 1347, 1354, 1357, 1359, 1362, 1378, 1381, 1388, 1391, 1428, 1432, 1433, 1437, 1459, 1475, 1478, 1480, 1483, 1485, 1488, 1500, 1503, 1510, 1513, 1562, 1563, 1566, 1594, 1595, 1598, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1668, 1671, 1714, 1724, 1725, 1727, 1730], "arg": [1, 2, 3, 4, 19, 22, 38, 49, 50, 51, 165, 166, 325, 331, 337, 341, 470, 471, 643, 667, 999, 1181], "i": [1, 2, 19, 22, 23, 24, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 353, 354, 370, 371, 374, 375, 376, 377, 380, 382, 383, 384, 387, 389, 392, 393, 394, 396, 397, 400, 401, 404, 407, 410, 411, 416, 417, 427, 428, 431, 432, 435, 442, 445, 457, 460, 467, 468, 469, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 570, 573, 575, 582, 583, 585, 588, 591, 593, 594, 596, 597, 599, 602, 605, 606, 609, 611, 614, 616, 619, 621, 624, 628, 631, 642, 643, 644, 648, 649, 652, 655, 656, 658, 659, 662, 666, 667, 673, 674, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1000, 1003, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1072, 1073, 1076, 1078, 1081, 1084, 1087, 1090, 1097, 1100, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1125, 1126, 1134, 1137, 1144, 1159, 1163, 1171, 1175, 1176, 1180, 1181, 1187, 1191, 1192, 1193, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1234, 1238, 1239, 1243, 1244, 1245, 1257, 1260, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1551, 1554, 1555, 1556, 1557, 1560, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "fals": [1, 2, 4, 6, 7, 8, 12, 15, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 116, 117, 128, 129, 132, 133, 134, 135, 140, 141, 144, 145, 150, 151, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 321, 323, 325, 330, 331, 332, 333, 337, 340, 341, 342, 374, 380, 382, 387, 388, 389, 390, 391, 400, 411, 422, 427, 428, 470, 499, 511, 514, 552, 555, 558, 570, 573, 575, 581, 583, 585, 604, 605, 606, 609, 616, 619, 621, 624, 626, 627, 643, 648, 649, 652, 658, 659, 662, 663, 667, 674, 676, 677, 723, 726, 778, 781, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 913, 916, 999, 1000, 1003, 1007, 1009, 1028, 1030, 1046, 1048, 1049, 1052, 1067, 1068, 1069, 1072, 1073, 1076, 1081, 1084, 1097, 1100, 1103, 1106, 1109, 1112, 1119, 1122, 1125, 1139, 1140, 1143, 1145, 1147, 1148, 1159, 1163, 1182, 1183, 1184, 1186, 1187, 1191, 1193, 1202, 1208, 1211, 1222, 1225, 1226, 1227, 1231, 1232, 1244, 1245, 1246, 1311, 1312, 1315, 1349, 1352, 1354, 1357, 1359, 1362, 1403, 1407, 1423, 1427, 1433, 1437, 1459, 1495, 1498, 1505, 1508, 1530, 1534, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1550, 1554, 1555, 1556, 1557, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 319, 320, 331, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1079, 1080, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1239, 1243, 1244, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282, 1284, 1287, 1289, 1290, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1723, 1724, 1725, 1726, 1727, 1774, 1775], "check_all_or_any_fn": 1, "fn": [1, 3, 173, 174, 325, 331, 337, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 470, 479, 480, 481, 552, 593, 594, 596, 597, 643, 655, 656, 999, 1005, 1054, 1055, 1181, 1544, 1545, 1550, 1551, 1552, 1554, 1555, 1556], "type": [1, 3, 19, 25, 31, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 322, 323, 324, 326, 327, 329, 330, 332, 333, 334, 335, 337, 339, 340, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 635, 637, 642, 643, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1234, 1238, 1239, 1243, 1244, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1551, 1554, 1555, 1556, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1724, 1725, 1728], "all": [1, 3, 4, 33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 132, 133, 140, 141, 144, 145, 148, 149, 158, 159, 160, 161, 165, 166, 169, 170, 177, 178, 285, 286, 293, 294, 297, 298, 301, 302, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 353, 354, 355, 365, 370, 371, 374, 375, 387, 394, 467, 468, 470, 472, 473, 521, 524, 534, 538, 539, 543, 643, 657, 663, 999, 1000, 1003, 1007, 1009, 1066, 1128, 1171, 1175, 1192, 1193, 1202, 1245, 1296, 1299, 1311, 1368, 1371, 1398, 1401, 1413, 1417, 1433, 1437, 1459, 1480, 1483, 1500, 1503, 1510, 1513, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1555, 1556, 1557, 1567, 1568, 1571, 1583, 1586, 1594, 1605, 1608, 1702, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1730, 1731], "limit": [1, 3, 42, 162, 165, 166, 167, 168, 323, 325, 326, 331, 333, 335, 340, 354, 552, 588, 591, 599, 602, 999, 1016, 1019, 1021, 1024, 1459, 1460, 1463, 1723, 1724, 1725], "0": [1, 3, 19, 22, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 323, 324, 325, 331, 332, 333, 334, 337, 339, 340, 341, 342, 354, 370, 371, 374, 377, 378, 382, 383, 384, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 416, 417, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 482, 484, 491, 492, 499, 500, 503, 505, 506, 508, 509, 521, 524, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 599, 602, 604, 616, 619, 643, 645, 648, 654, 657, 661, 662, 663, 664, 665, 666, 667, 673, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1036, 1039, 1046, 1048, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1078, 1079, 1081, 1084, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1125, 1134, 1137, 1144, 1147, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1185, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1247, 1250, 1257, 1260, 1266, 1269, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1383, 1386, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "must": [1, 3, 8, 18, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 321, 322, 323, 324, 325, 327, 328, 331, 334, 335, 337, 341, 342, 374, 376, 383, 387, 389, 394, 396, 397, 398, 400, 402, 407, 410, 411, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 643, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1192, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1725, 1731], "exist": [1, 3, 33, 34, 38, 40, 41, 132, 133, 144, 145, 165, 166, 297, 298, 316, 318, 323, 324, 328, 329, 330, 331, 333, 335, 337, 354, 999, 1028, 1030, 1459, 1465, 1468, 1495, 1498, 1713, 1722, 1724, 1727, 1730], "accord": [1, 3, 38, 40, 41, 56, 57, 132, 133, 156, 157, 173, 174, 309, 310, 316, 321, 328, 331, 333, 387, 394, 552, 570, 573, 582, 588, 591, 677, 693, 696, 743, 746, 903, 906, 999, 1056, 1059, 1069, 1129, 1132, 1134, 1137, 1311, 1428, 1432, 1459, 1470, 1473, 1535, 1539, 1657, 1688, 1691, 1697, 1701], "given": [1, 3, 34, 35, 38, 40, 41, 42, 44, 120, 121, 132, 133, 142, 143, 144, 145, 148, 149, 162, 165, 166, 285, 286, 287, 288, 295, 296, 297, 298, 301, 302, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 339, 341, 353, 374, 382, 384, 387, 392, 393, 400, 405, 411, 412, 416, 417, 431, 467, 469, 470, 472, 473, 485, 505, 506, 508, 509, 552, 582, 627, 643, 654, 662, 664, 665, 666, 667, 673, 676, 677, 998, 999, 1061, 1064, 1129, 1132, 1134, 1137, 1145, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1475, 1478, 1480, 1483, 1490, 1493, 1500, 1503, 1505, 1508, 1525, 1529, 1530, 1534, 1540, 1544, 1551, 1552, 1562, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1641, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1702, 1721, 1726, 1727, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "check_ani": 1, "ar": [1, 4, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 60, 61, 102, 103, 116, 117, 120, 121, 128, 129, 132, 133, 140, 141, 144, 145, 148, 149, 150, 151, 162, 165, 166, 167, 168, 171, 172, 177, 178, 255, 256, 281, 282, 285, 286, 293, 294, 297, 298, 301, 302, 303, 304, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 355, 365, 370, 371, 374, 376, 382, 384, 387, 394, 400, 401, 402, 403, 404, 416, 417, 427, 428, 470, 472, 473, 643, 657, 661, 663, 667, 677, 758, 761, 768, 771, 878, 881, 883, 886, 928, 931, 943, 946, 953, 956, 978, 982, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1015, 1066, 1072, 1086, 1102, 1127, 1128, 1143, 1159, 1163, 1184, 1193, 1202, 1226, 1232, 1244, 1245, 1291, 1294, 1311, 1317, 1320, 1337, 1340, 1341, 1343, 1354, 1357, 1359, 1362, 1368, 1371, 1383, 1386, 1403, 1407, 1408, 1412, 1423, 1427, 1428, 1432, 1459, 1460, 1463, 1465, 1468, 1480, 1483, 1500, 1503, 1510, 1513, 1544, 1546, 1550, 1555, 1556, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1620, 1621, 1625, 1631, 1635, 1713, 1714, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "check_elem_in_list": [1, 331], "elem": [1, 5], "list": [1, 5, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 102, 103, 110, 111, 132, 133, 138, 139, 144, 145, 146, 147, 160, 161, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 279, 280, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 319, 321, 322, 323, 326, 327, 331, 332, 333, 334, 337, 340, 341, 342, 354, 374, 375, 376, 379, 380, 387, 392, 393, 420, 421, 470, 472, 473, 475, 477, 511, 514, 516, 519, 552, 560, 563, 643, 648, 667, 999, 1006, 1125, 1165, 1169, 1181, 1192, 1193, 1226, 1232, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1393, 1396, 1413, 1417, 1459, 1465, 1468, 1505, 1508, 1515, 1518, 1530, 1534, 1544, 1545, 1546, 1547, 1550, 1551, 1552, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1594, 1610, 1613, 1620, 1626, 1630, 1631, 1635, 1714, 1724, 1725, 1730], "check_equ": [1, 331], "x1": [1, 6, 12, 15, 16, 17, 44, 47, 48, 56, 57, 60, 61, 102, 103, 116, 117, 140, 141, 150, 151, 173, 174, 177, 178, 255, 256, 269, 270, 285, 286, 293, 294, 303, 304, 307, 308, 316, 321, 323, 325, 327, 331, 374, 376, 377, 378, 379, 381, 400, 404, 470, 547, 551, 552, 560, 563, 583, 585, 627, 637, 643, 661, 677, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977, 993, 997, 999, 1000, 1003, 1007, 1009, 1245, 1266, 1269, 1311, 1317, 1320, 1344, 1347, 1354, 1357, 1378, 1381, 1398, 1401, 1413, 1417, 1428, 1432, 1594, 1615, 1619, 1641, 1647, 1650], "x2": [1, 6, 12, 15, 16, 17, 56, 57, 60, 61, 102, 103, 116, 117, 132, 133, 140, 141, 150, 151, 173, 174, 177, 178, 255, 256, 269, 270, 285, 286, 293, 294, 303, 304, 316, 321, 323, 325, 327, 331, 374, 376, 377, 378, 379, 381, 400, 404, 470, 547, 551, 552, 560, 563, 627, 637, 643, 661, 677, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977, 993, 997, 999, 1000, 1003, 1245, 1266, 1269, 1311, 1317, 1320, 1344, 1347, 1354, 1357, 1378, 1381, 1398, 1401, 1413, 1417, 1428, 1432, 1594, 1615, 1619], "invers": [1, 6, 7, 60, 61, 177, 178, 293, 294, 321, 353, 677, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 1311, 1349, 1352, 1364, 1366, 1383, 1386], "check_exist": 1, "x": [1, 7, 14, 19, 22, 31, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 370, 371, 374, 375, 380, 382, 383, 384, 387, 392, 393, 394, 396, 397, 400, 401, 405, 406, 407, 408, 411, 412, 422, 423, 424, 426, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 475, 477, 482, 484, 486, 489, 494, 497, 499, 500, 503, 511, 514, 516, 519, 521, 524, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 570, 573, 575, 581, 582, 583, 585, 587, 588, 591, 599, 602, 604, 611, 614, 616, 619, 628, 631, 643, 648, 649, 652, 657, 661, 662, 663, 666, 668, 672, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 738, 741, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 783, 786, 788, 791, 793, 796, 798, 801, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 908, 911, 918, 921, 928, 931, 933, 936, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1000, 1003, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1070, 1071, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1141, 1142, 1144, 1146, 1147, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1187, 1191, 1192, 1193, 1202, 1203, 1208, 1211, 1213, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1290, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1544, 1545, 1547, 1550, 1551, 1552, 1554, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "check_fals": 1, "express": [1, 8, 18, 60, 61, 102, 103, 177, 178, 255, 256, 324, 326, 331, 337, 342, 374, 383, 677, 683, 686, 698, 701, 708, 711, 713, 716, 758, 761, 768, 771, 928, 931, 953, 956, 978, 982, 1724, 1725], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 54, 55, 150, 151, 171, 172, 303, 304, 321, 332, 334, 470, 499, 500, 503, 677, 813, 816, 843, 846, 1594, 1610, 1613], "dtype": [1, 9, 44, 47, 48, 54, 55, 56, 57, 102, 103, 120, 121, 138, 139, 140, 141, 148, 149, 150, 151, 156, 157, 171, 172, 173, 174, 255, 256, 263, 264, 273, 274, 285, 286, 291, 292, 293, 294, 301, 302, 303, 304, 309, 310, 316, 318, 321, 322, 323, 326, 328, 329, 331, 332, 333, 334, 337, 339, 374, 382, 387, 388, 389, 390, 391, 395, 416, 417, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 570, 573, 576, 577, 578, 579, 581, 582, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 634, 635, 636, 638, 641, 642, 643, 663, 677, 858, 861, 999, 1054, 1055, 1061, 1064, 1171, 1175, 1245, 1257, 1260, 1284, 1287, 1311, 1359, 1362, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1641, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1702, 1703, 1706, 1708, 1711, 1714], "check_gather_input_valid": 1, "param": [1, 10, 11, 162, 165, 166, 167, 168, 285, 286, 342, 999, 1005, 1056, 1059, 1061, 1064], "indic": [1, 10, 11, 38, 54, 55, 110, 111, 116, 117, 132, 133, 138, 139, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 165, 166, 171, 172, 173, 174, 263, 264, 269, 270, 285, 286, 291, 292, 293, 294, 297, 298, 299, 300, 303, 304, 305, 306, 307, 308, 320, 326, 327, 342, 370, 371, 387, 392, 393, 400, 411, 431, 442, 445, 457, 460, 470, 475, 477, 521, 524, 677, 948, 951, 999, 1056, 1059, 1061, 1064, 1069, 1129, 1132, 1134, 1137, 1192, 1193, 1202, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1433, 1437, 1459, 1495, 1498, 1500, 1503, 1544, 1545, 1547, 1549, 1551, 1552, 1553, 1555, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1620, 1621, 1625, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1714], "axi": [1, 10, 45, 46, 54, 55, 102, 103, 116, 117, 128, 129, 132, 133, 140, 141, 142, 143, 144, 145, 150, 151, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 171, 172, 177, 178, 255, 256, 269, 270, 281, 282, 285, 286, 293, 294, 295, 296, 297, 298, 303, 304, 307, 308, 309, 310, 311, 312, 319, 321, 323, 325, 327, 328, 330, 331, 333, 335, 337, 339, 342, 353, 374, 382, 384, 387, 394, 400, 402, 403, 410, 411, 420, 421, 427, 428, 431, 442, 445, 457, 460, 470, 505, 506, 508, 509, 521, 524, 643, 667, 999, 1056, 1059, 1192, 1245, 1279, 1282, 1311, 1317, 1320, 1332, 1335, 1359, 1362, 1428, 1432, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1490, 1493, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1567, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "batch_dim": [1, 10, 11, 132, 133, 285, 286, 999, 1056, 1059, 1061, 1064], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 15, 325], "check_inplace_sizes_valid": 1, "var": [1, 13, 156, 157, 309, 310, 313, 314, 323, 337, 1540, 1541, 1542, 1657], "data": [1, 13, 32, 34, 41, 44, 47, 48, 54, 55, 57, 60, 61, 102, 103, 120, 121, 132, 133, 134, 135, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 165, 166, 167, 168, 171, 172, 174, 177, 178, 255, 256, 263, 264, 273, 274, 285, 286, 287, 288, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 319, 322, 324, 327, 328, 329, 330, 332, 334, 335, 337, 339, 374, 383, 387, 388, 389, 390, 391, 395, 396, 397, 400, 401, 416, 417, 422, 425, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 553, 554, 555, 558, 565, 568, 570, 573, 576, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 633, 635, 637, 642, 643, 644, 645, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1103, 1106, 1109, 1112, 1119, 1122, 1159, 1163, 1193, 1208, 1211, 1239, 1243, 1245, 1291, 1294, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1641, 1642, 1645, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1724, 1725, 1726, 1728, 1729, 1730], "check_isinst": 1, "allowed_typ": [1, 14], "check_less": [1, 325], "check_one_way_broadcast": 1, "check_shap": [1, 165, 166], "check_tru": 1, "true": [1, 18, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 102, 103, 116, 117, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 335, 337, 340, 341, 342, 374, 380, 382, 387, 388, 389, 390, 391, 400, 411, 427, 428, 431, 432, 435, 467, 468, 470, 499, 505, 506, 511, 514, 552, 555, 558, 570, 573, 575, 593, 594, 596, 597, 606, 609, 611, 614, 616, 619, 621, 624, 642, 643, 648, 649, 652, 655, 656, 659, 662, 663, 664, 676, 677, 723, 726, 778, 781, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 873, 876, 878, 881, 883, 886, 888, 891, 913, 916, 938, 941, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1028, 1030, 1046, 1048, 1049, 1052, 1054, 1055, 1067, 1068, 1069, 1072, 1073, 1076, 1081, 1084, 1109, 1112, 1119, 1122, 1139, 1140, 1143, 1145, 1147, 1148, 1171, 1175, 1182, 1183, 1184, 1186, 1187, 1191, 1193, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1244, 1245, 1284, 1287, 1311, 1312, 1315, 1359, 1362, 1403, 1407, 1423, 1427, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1495, 1498, 1505, 1508, 1530, 1534, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1550, 1554, 1555, 1557, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 165, 166, 315, 316, 326, 331, 333, 334, 339, 340, 999, 1010, 1013], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 132, 133, 134, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 164, 166, 168, 170, 172, 174, 175, 176, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 285, 286, 287, 288, 290, 292, 293, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 316, 317, 319, 322, 323, 324, 327, 328, 329, 330, 332, 333, 335, 336, 337, 339, 340, 342, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 421, 423, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1718, 1719, 1721, 1723, 1724, 1727, 1729, 1730, 1731, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1775], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 132, 133, 134, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 164, 166, 168, 170, 172, 174, 176, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 252, 254, 256, 258, 260, 262, 264, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 287, 288, 290, 292, 294, 296, 298, 300, 302, 304, 306, 308, 310, 312, 314, 315, 316, 317, 318, 321, 322, 323, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 342, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 421, 423, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1563, 1564, 1565, 1566, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1728, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1762, 1764, 1766, 1767, 1768, 1769, 1770, 1772, 1773, 1775], "class": [19, 25, 31, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 321, 322, 323, 324, 327, 332, 333, 335, 337, 338, 340, 341, 342, 352, 353, 354, 422, 470, 471, 547, 551, 552, 599, 602, 635, 643, 644, 999, 1006, 1097, 1100, 1125, 1159, 1163, 1193, 1239, 1243, 1311, 1359, 1362, 1393, 1396, 1544, 1546, 1556, 1594, 1610, 1613, 1620, 1631, 1635, 1713, 1714, 1722, 1724, 1725, 1731], "backend_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 318, 337, 1714], "contextmanag": 19, "modul": [19, 22, 24, 26, 35, 38, 41, 160, 161, 162, 165, 166, 167, 168, 313, 314, 317, 318, 326, 328, 330, 331, 333, 337, 338, 340, 342, 353, 354, 999, 1126, 1714, 1724, 1725, 1727], "base": [19, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 320, 321, 325, 327, 329, 332, 333, 334, 337, 353, 370, 371, 374, 376, 422, 470, 471, 508, 509, 552, 627, 643, 644, 677, 788, 791, 848, 851, 853, 856, 858, 861, 863, 866, 923, 926, 999, 1070, 1141, 1146, 1154, 1157, 1193, 1459, 1475, 1478, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1668, 1671, 1724, 1729, 1731], "object": [19, 148, 149, 162, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 285, 286, 301, 302, 319, 329, 331, 333, 339, 342, 422, 470, 494, 497, 552, 575, 588, 591, 627, 643, 668, 672, 1193, 1544, 1547, 1549, 1551, 1552, 1553, 1558, 1559, 1560, 1561, 1567, 1589, 1592, 1724, 1730], "__init__": [19, 22, 24, 40, 44, 47, 48, 162, 165, 166, 167, 168, 318, 321, 325, 331, 334, 337, 339, 340, 341, 342, 422, 470, 471, 552, 643, 644, 1193, 1714], "choose_random_backend": 19, "exclud": [19, 20, 156, 157, 309, 310, 323, 337, 370, 371, 470, 472, 473, 1567, 1583, 1586], "none": [19, 20, 24, 31, 37, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 422, 425, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 469, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 577, 578, 579, 581, 582, 588, 591, 599, 602, 605, 642, 643, 647, 648, 663, 664, 665, 666, 667, 668, 672, 675, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1005, 1016, 1019, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1079, 1086, 1102, 1126, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1149, 1152, 1154, 1157, 1181, 1182, 1183, 1184, 1185, 1186, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1244, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1550, 1551, 1555, 1556, 1557, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "clear_backend_stack": 19, "current_backend": [19, 325, 328, 331, 334, 337], "kwarg": [19, 22, 49, 50, 51, 110, 111, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 325, 331, 337, 341, 387, 394, 470, 471, 999, 1125, 1181], "return": [19, 22, 23, 24, 26, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 637, 642, 643, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1080, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1239, 1243, 1244, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1551, 1554, 1555, 1556, 1557, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1725], "current": [19, 22, 23, 24, 31, 35, 38, 40, 41, 42, 132, 133, 162, 165, 166, 167, 168, 316, 318, 319, 321, 322, 325, 328, 329, 331, 332, 335, 337, 342, 353, 354, 387, 394, 552, 582, 593, 594, 596, 597, 605, 638, 641, 642, 643, 654, 655, 656, 657, 661, 663, 676, 999, 1054, 1055, 1066, 1067, 1068, 1072, 1086, 1102, 1127, 1128, 1148, 1159, 1163, 1193, 1226, 1244, 1544, 1545, 1554, 1555, 1714, 1724, 1730, 1731], "prioriti": [19, 22, 42, 165, 166, 330], "global_backend": [19, 22], "argument": [19, 22, 24, 33, 40, 49, 50, 51, 52, 53, 60, 61, 132, 133, 162, 165, 166, 167, 168, 169, 170, 177, 178, 285, 286, 315, 316, 317, 318, 319, 323, 324, 326, 328, 329, 332, 333, 334, 335, 337, 339, 340, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 467, 468, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1005, 1006, 1015, 1028, 1030, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1125, 1134, 1137, 1159, 1163, 1176, 1180, 1181, 1192, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1544, 1550, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1724], "": [19, 22, 24, 25, 31, 34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 132, 133, 134, 135, 140, 141, 156, 157, 269, 270, 285, 286, 287, 288, 293, 294, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 353, 354, 387, 394, 469, 470, 511, 514, 534, 538, 539, 543, 552, 593, 594, 596, 597, 643, 648, 655, 656, 666, 677, 938, 941, 999, 1054, 1055, 1159, 1163, 1193, 1198, 1201, 1203, 1204, 1207, 1213, 1214, 1217, 1222, 1225, 1311, 1327, 1330, 1368, 1371, 1403, 1407, 1408, 1412, 1544, 1556, 1657, 1688, 1691, 1697, 1701, 1713, 1714, 1720, 1723, 1724, 1725, 1727, 1728, 1729, 1730], "paramet": [19, 22, 23, 24, 26, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 324, 325, 327, 329, 333, 334, 337, 339, 340, 353, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 628, 631, 633, 634, 635, 636, 637, 642, 643, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1079, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1125, 1126, 1129, 1132, 1134, 1137, 1141, 1142, 1144, 1146, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1725], "from": [19, 22, 24, 25, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 150, 151, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 370, 371, 374, 376, 377, 387, 394, 400, 410, 416, 417, 470, 472, 473, 486, 489, 494, 497, 499, 500, 503, 511, 514, 516, 519, 529, 532, 547, 551, 552, 570, 573, 627, 628, 631, 643, 648, 657, 661, 666, 667, 677, 768, 771, 928, 931, 963, 966, 999, 1015, 1028, 1030, 1056, 1059, 1061, 1064, 1069, 1128, 1144, 1165, 1169, 1192, 1193, 1198, 1201, 1214, 1217, 1232, 1245, 1279, 1282, 1284, 1287, 1301, 1304, 1311, 1332, 1335, 1403, 1407, 1423, 1427, 1428, 1432, 1459, 1465, 1468, 1480, 1483, 1495, 1498, 1510, 1513, 1540, 1541, 1542, 1543, 1544, 1546, 1556, 1557, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1600, 1603, 1615, 1619, 1620, 1621, 1625, 1631, 1635, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731], "which": [19, 22, 23, 24, 26, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 102, 103, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 353, 354, 370, 371, 374, 376, 382, 384, 396, 397, 400, 411, 416, 417, 427, 428, 431, 442, 445, 457, 460, 467, 468, 469, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 576, 583, 585, 588, 591, 599, 602, 605, 642, 643, 649, 652, 657, 661, 663, 665, 666, 667, 677, 938, 941, 999, 1005, 1028, 1030, 1056, 1059, 1061, 1064, 1066, 1069, 1097, 1100, 1127, 1128, 1134, 1137, 1192, 1193, 1198, 1201, 1202, 1203, 1204, 1207, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1245, 1301, 1304, 1311, 1317, 1320, 1327, 1330, 1332, 1335, 1359, 1362, 1398, 1401, 1403, 1407, 1428, 1432, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1490, 1493, 1500, 1503, 1505, 1508, 1515, 1518, 1530, 1534, 1544, 1549, 1550, 1551, 1552, 1557, 1558, 1559, 1560, 1561, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1730, 1731], "try": [19, 22, 32, 34, 35, 38, 40, 41, 42, 165, 166, 317, 319, 321, 325, 326, 337, 339, 354, 999, 1181, 1714], "infer": [19, 22, 23, 54, 55, 132, 133, 144, 145, 171, 172, 285, 286, 297, 298, 315, 318, 321, 322, 329, 337, 342, 416, 417, 467, 468, 470, 472, 473, 486, 489, 499, 500, 503, 516, 519, 529, 532, 547, 551, 552, 581, 582, 999, 1073, 1076, 1147, 1459, 1495, 1498, 1722, 1723, 1726, 1728], "when": [19, 22, 33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 102, 103, 140, 141, 142, 143, 148, 149, 150, 151, 156, 157, 162, 165, 166, 167, 168, 171, 172, 173, 174, 177, 178, 293, 294, 295, 296, 301, 302, 303, 304, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 342, 354, 374, 384, 470, 521, 524, 552, 555, 558, 677, 693, 696, 793, 796, 858, 861, 923, 926, 999, 1097, 1100, 1144, 1154, 1157, 1311, 1368, 1371, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1544, 1555, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1657, 1672, 1675, 1680, 1683, 1688, 1691, 1697, 1701, 1722, 1724, 1727, 1728, 1729, 1730], "global": [19, 22, 24, 25, 27, 28, 29, 30, 31, 132, 133, 146, 147, 162, 165, 166, 167, 168, 285, 286, 299, 300, 318, 321, 322, 325, 328, 331, 337, 552, 577, 578, 579, 581, 582, 643, 665, 666, 667, 999, 1070, 1071, 1078, 1141, 1142, 1144, 1149, 1152, 1154, 1157, 1185, 1193, 1226, 1232, 1244, 1562, 1563, 1566, 1724], "set": [19, 22, 24, 25, 27, 28, 29, 30, 31, 33, 36, 38, 42, 49, 52, 53, 102, 103, 110, 111, 116, 117, 125, 128, 129, 132, 133, 134, 135, 140, 141, 150, 151, 153, 154, 155, 156, 157, 165, 166, 255, 256, 263, 264, 269, 270, 278, 281, 282, 285, 286, 287, 288, 293, 294, 303, 304, 306, 307, 308, 309, 310, 315, 316, 317, 319, 321, 322, 323, 328, 329, 330, 331, 332, 333, 334, 337, 339, 340, 370, 371, 374, 382, 387, 394, 396, 397, 400, 401, 411, 427, 428, 552, 582, 633, 635, 636, 643, 648, 664, 665, 666, 667, 677, 713, 716, 999, 1000, 1003, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1159, 1163, 1193, 1208, 1211, 1311, 1317, 1320, 1359, 1362, 1368, 1371, 1383, 1386, 1398, 1401, 1403, 1407, 1544, 1545, 1554, 1555, 1556, 1560, 1561, 1567, 1588, 1594, 1595, 1598, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1688, 1691, 1697, 1701, 1722, 1723, 1724, 1725, 1726, 1728, 1731], "ret": [19, 22, 24, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 330, 331, 332, 334, 337, 342, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 628, 631, 642, 643, 645, 646, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 666, 667, 668, 672, 673, 674, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1069, 1070, 1071, 1073, 1076, 1078, 1080, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1125, 1126, 1129, 1132, 1134, 1137, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1239, 1243, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1550, 1554, 1555, 1556, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "exampl": [19, 22, 24, 25, 31, 35, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 328, 329, 330, 331, 333, 334, 337, 339, 340, 341, 342, 353, 354, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 482, 484, 499, 500, 503, 511, 514, 526, 527, 529, 532, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 576, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 611, 614, 616, 619, 621, 624, 628, 631, 633, 635, 636, 638, 641, 642, 643, 647, 648, 649, 652, 654, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 672, 673, 674, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1006, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1081, 1084, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1125, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1244, 1245, 1247, 1250, 1257, 1260, 1266, 1269, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1721, 1722, 1725, 1727, 1730, 1731], "If": [19, 22, 24, 25, 33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 128, 129, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 342, 354, 370, 371, 374, 376, 382, 383, 384, 387, 388, 389, 390, 391, 400, 401, 411, 416, 417, 427, 428, 431, 467, 469, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 582, 628, 631, 643, 648, 666, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 833, 836, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 883, 886, 893, 896, 898, 901, 903, 906, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 998, 999, 1097, 1100, 1159, 1163, 1192, 1193, 1202, 1226, 1244, 1245, 1311, 1312, 1315, 1317, 1320, 1327, 1330, 1359, 1362, 1364, 1366, 1368, 1371, 1383, 1386, 1388, 1391, 1398, 1401, 1403, 1407, 1423, 1427, 1428, 1432, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1540, 1541, 1542, 1544, 1556, 1557, 1562, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "import": [19, 22, 23, 34, 37, 39, 40, 41, 42, 160, 161, 313, 314, 316, 317, 318, 319, 321, 322, 323, 324, 326, 330, 331, 332, 334, 337, 339, 340, 342, 354, 643, 647, 664, 665, 1714, 1720, 1722, 1724, 1727, 1728, 1730], "numpi": [19, 22, 24, 25, 28, 33, 34, 39, 40, 41, 42, 132, 133, 285, 286, 316, 318, 320, 321, 322, 325, 327, 330, 332, 333, 334, 335, 337, 339, 342, 370, 371, 999, 1159, 1163, 1171, 1175, 1657, 1668, 1671, 1713, 1714, 1726, 1731], "np": [19, 22, 40, 177, 178, 285, 286, 317, 321, 322, 327, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 400, 401, 677, 833, 836, 999, 1149, 1152, 1544, 1550, 1713, 1714], "arrai": [19, 22, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 354, 355, 365, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 469, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 581, 582, 583, 585, 588, 591, 599, 602, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 637, 643, 648, 649, 652, 657, 661, 663, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1016, 1019, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1056, 1059, 1061, 1064, 1066, 1069, 1073, 1076, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1103, 1106, 1109, 1112, 1119, 1122, 1125, 1127, 1128, 1129, 1132, 1134, 1137, 1139, 1140, 1145, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1182, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1550, 1551, 1552, 1556, 1557, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1722, 1723, 1724, 1726, 1730, 1731], "2": [19, 22, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 323, 325, 327, 330, 331, 332, 333, 336, 337, 339, 340, 341, 342, 354, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 469, 470, 499, 500, 503, 511, 514, 526, 527, 529, 532, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 611, 614, 616, 619, 643, 648, 649, 652, 654, 657, 659, 661, 663, 665, 668, 672, 677, 678, 681, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 823, 826, 828, 831, 838, 841, 843, 846, 848, 851, 858, 861, 863, 866, 868, 871, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1125, 1134, 1137, 1147, 1149, 1152, 1159, 1163, 1165, 1169, 1181, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1246, 1247, 1250, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1289, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1433, 1437, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1730, 1731], "print": [19, 22, 24, 25, 31, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 323, 333, 337, 339, 340, 341, 370, 371, 374, 383, 387, 392, 393, 394, 400, 405, 408, 409, 411, 412, 431, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 482, 484, 499, 500, 503, 511, 514, 526, 527, 529, 532, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 576, 583, 585, 587, 593, 594, 596, 597, 605, 611, 614, 616, 619, 628, 631, 642, 643, 649, 652, 657, 658, 659, 660, 661, 662, 663, 666, 673, 674, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1006, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1069, 1070, 1071, 1073, 1076, 1078, 1081, 1084, 1087, 1090, 1092, 1095, 1125, 1128, 1134, 1137, 1141, 1142, 1144, 1146, 1147, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1185, 1187, 1191, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1244, 1245, 1247, 1250, 1257, 1260, 1266, 1269, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "function": [19, 22, 23, 24, 25, 26, 33, 38, 41, 42, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 326, 330, 335, 336, 338, 339, 340, 341, 352, 353, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 469, 470, 471, 472, 473, 475, 477, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1079, 1080, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1239, 1243, 1244, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282, 1284, 1287, 1289, 1290, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1730, 1731], "py": [19, 22, 24, 40, 41, 42, 316, 318, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 337, 339, 341, 342], "noqa": [19, 22, 24, 60, 61, 177, 178, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1192, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "The": [19, 22, 24, 26, 32, 33, 35, 36, 37, 38, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 340, 341, 342, 353, 370, 371, 374, 376, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 400, 401, 402, 403, 405, 407, 409, 410, 411, 412, 416, 417, 427, 428, 431, 432, 435, 437, 440, 442, 445, 457, 460, 462, 465, 467, 468, 470, 472, 473, 494, 497, 508, 509, 521, 524, 534, 538, 539, 543, 552, 553, 554, 555, 558, 576, 587, 593, 594, 596, 597, 605, 611, 614, 621, 624, 626, 635, 636, 637, 642, 643, 644, 645, 646, 647, 648, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666, 667, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 948, 951, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1005, 1007, 1009, 1015, 1016, 1019, 1027, 1028, 1030, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1078, 1080, 1087, 1090, 1092, 1095, 1097, 1100, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1126, 1129, 1132, 1134, 1137, 1141, 1142, 1144, 1146, 1149, 1152, 1154, 1157, 1164, 1170, 1187, 1191, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1239, 1243, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1470, 1473, 1480, 1483, 1485, 1488, 1490, 1493, 1505, 1508, 1525, 1529, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1578, 1581, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "set_backend": [19, 22, 24, 27, 28, 29, 30, 31, 316, 318, 321, 328, 329, 337, 339, 342, 552, 596, 597, 643, 647, 664, 665, 1714], "ha": [19, 22, 24, 33, 34, 35, 40, 42, 140, 141, 144, 145, 152, 153, 156, 157, 165, 166, 173, 174, 285, 286, 293, 294, 297, 298, 305, 306, 309, 310, 316, 318, 319, 321, 322, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 353, 354, 470, 511, 514, 643, 648, 677, 678, 681, 833, 836, 903, 906, 923, 926, 943, 946, 1193, 1226, 1244, 1311, 1354, 1357, 1398, 1401, 1403, 1407, 1418, 1422, 1459, 1475, 1478, 1510, 1513, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1676, 1679, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1720, 1723, 1724, 1726, 1727, 1730], "over": [19, 22, 33, 35, 41, 42, 110, 111, 140, 141, 156, 157, 158, 159, 160, 161, 173, 174, 263, 264, 293, 294, 309, 310, 311, 312, 313, 314, 318, 323, 324, 330, 333, 337, 339, 354, 374, 382, 400, 401, 408, 409, 999, 1192, 1311, 1359, 1362, 1413, 1417, 1428, 1432, 1433, 1437, 1562, 1563, 1566, 1567, 1583, 1586, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1722, 1724], "ani": [19, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 132, 133, 158, 159, 160, 161, 162, 175, 176, 177, 178, 285, 286, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 431, 467, 468, 469, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 575, 606, 609, 616, 619, 627, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 998, 999, 1000, 1003, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1103, 1106, 1114, 1117, 1154, 1157, 1176, 1180, 1181, 1192, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1550, 1551, 1554, 1560, 1561, 1562, 1563, 1566, 1567, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "pass": [19, 22, 40, 42, 160, 161, 162, 165, 166, 167, 168, 313, 314, 316, 317, 318, 319, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 354, 400, 401, 552, 576, 627, 643, 667, 677, 713, 716, 999, 1097, 1100, 1193, 1239, 1243, 1540, 1541, 1542, 1722], "jax": [19, 22, 24, 25, 27, 34, 35, 39, 40, 41, 42, 134, 135, 287, 288, 316, 318, 320, 321, 322, 327, 330, 331, 332, 333, 334, 335, 337, 339, 342, 354, 999, 1192, 1193, 1208, 1211, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1725, 1727, 1730, 1731], "fn_name_from_version_specific_fn_nam": 19, "name": [19, 23, 26, 38, 40, 41, 42, 116, 117, 152, 153, 305, 306, 318, 319, 323, 324, 326, 327, 331, 332, 333, 334, 335, 337, 340, 342, 400, 411, 467, 468, 999, 1005, 1006, 1311, 1337, 1340, 1388, 1391, 1403, 1407, 1423, 1427, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1724], "specif": [19, 23, 26, 33, 40, 41, 42, 132, 133, 175, 176, 285, 286, 316, 317, 318, 319, 320, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 341, 342, 353, 354, 552, 628, 631, 643, 665, 668, 672, 677, 878, 881, 883, 886, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1126, 1311, 1337, 1340, 1341, 1343, 1413, 1417, 1459, 1515, 1518, 1540, 1541, 1542, 1543, 1567, 1568, 1571, 1641, 1647, 1650, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1713, 1720, 1722, 1723, 1725, 1726, 1727, 1731], "provid": [19, 23, 26, 33, 41, 42, 54, 55, 132, 133, 134, 135, 144, 145, 150, 151, 156, 157, 158, 159, 165, 166, 171, 172, 285, 286, 297, 298, 303, 304, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 335, 339, 341, 353, 354, 374, 384, 467, 468, 470, 511, 514, 521, 524, 552, 577, 578, 579, 581, 582, 605, 628, 631, 642, 643, 648, 999, 1015, 1028, 1030, 1134, 1137, 1311, 1364, 1366, 1428, 1432, 1459, 1475, 1478, 1480, 1483, 1515, 1518, 1594, 1595, 1598, 1657, 1688, 1691, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731], "origin": [19, 23, 26, 35, 40, 42, 44, 47, 48, 116, 117, 140, 141, 144, 145, 156, 157, 162, 165, 166, 167, 168, 269, 270, 293, 294, 297, 298, 309, 310, 318, 321, 329, 330, 331, 332, 337, 400, 407, 677, 713, 716, 1311, 1359, 1362, 1459, 1495, 1498, 1500, 1503, 1657, 1663, 1666, 1724, 1725], "point": [19, 23, 26, 35, 40, 41, 42, 56, 57, 60, 61, 102, 103, 120, 121, 140, 141, 148, 149, 156, 157, 173, 174, 177, 178, 255, 256, 263, 264, 273, 274, 293, 294, 301, 302, 309, 310, 316, 317, 320, 323, 324, 327, 330, 331, 333, 334, 335, 337, 339, 340, 353, 374, 383, 384, 387, 389, 416, 417, 469, 470, 472, 473, 475, 477, 485, 491, 492, 499, 526, 527, 544, 546, 552, 555, 558, 588, 591, 604, 611, 614, 628, 631, 677, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 788, 791, 793, 796, 798, 801, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 903, 906, 923, 926, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 993, 997, 1311, 1312, 1315, 1322, 1325, 1337, 1340, 1341, 1343, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1433, 1437, 1567, 1578, 1581, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1730], "get_backend": [19, 318, 328], "specifi": [19, 24, 42, 54, 55, 56, 57, 102, 103, 110, 111, 132, 133, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 156, 157, 158, 159, 163, 164, 165, 166, 173, 174, 255, 256, 285, 286, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 309, 310, 311, 312, 315, 321, 322, 327, 328, 330, 331, 332, 333, 335, 337, 340, 341, 374, 382, 400, 401, 410, 427, 428, 470, 472, 473, 485, 499, 505, 506, 508, 509, 526, 527, 534, 538, 539, 543, 544, 546, 552, 555, 558, 565, 568, 643, 657, 661, 663, 666, 667, 668, 672, 677, 938, 941, 999, 1005, 1056, 1059, 1061, 1064, 1069, 1081, 1084, 1192, 1311, 1327, 1330, 1332, 1335, 1359, 1362, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1500, 1503, 1510, 1513, 1515, 1518, 1530, 1534, 1535, 1539, 1544, 1549, 1551, 1552, 1558, 1559, 1560, 1561, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1684, 1687, 1692, 1696, 1702, 1703, 1706, 1708, 1711, 1730], "isn": [19, 24, 42, 285, 286, 329, 340, 354, 999, 1159, 1163, 1726], "t": [19, 24, 26, 34, 35, 37, 38, 40, 41, 42, 44, 47, 48, 160, 161, 285, 286, 313, 314, 315, 318, 319, 320, 321, 323, 329, 330, 333, 335, 337, 339, 340, 341, 342, 354, 999, 1159, 1163, 1193, 1202, 1245, 1291, 1294, 1296, 1299, 1544, 1552, 1722, 1724, 1726], "associ": [19, 24, 42, 140, 141, 293, 294, 321, 328, 329, 331, 332, 333, 354, 677, 693, 696, 903, 906, 1311, 1368, 1371, 1383, 1386, 1438, 1442], "option": [19, 24, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 342, 354, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 576, 577, 578, 579, 581, 582, 605, 642, 643, 648, 663, 665, 666, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1005, 1016, 1019, 1021, 1024, 1027, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1109, 1112, 1126, 1129, 1132, 1134, 1137, 1149, 1152, 1154, 1157, 1181, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1550, 1555, 1556, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1730], "str": [19, 24, 49, 50, 51, 110, 111, 132, 133, 138, 139, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 325, 326, 331, 334, 337, 342, 387, 392, 393, 467, 468, 470, 511, 514, 552, 553, 576, 577, 578, 579, 587, 588, 591, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 633, 634, 635, 636, 642, 643, 644, 645, 667, 999, 1005, 1027, 1031, 1034, 1036, 1039, 1041, 1044, 1126, 1129, 1132, 1134, 1137, 1146, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1388, 1391, 1540, 1541, 1542, 1543, 1544, 1550, 1551, 1560, 1657, 1668, 1671], "we": [19, 24, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 116, 117, 160, 161, 269, 270, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 400, 411, 999, 1159, 1163, 1193, 1202, 1203, 1213, 1233, 1713, 1714, 1720, 1724, 1725, 1729, 1730], "want": [19, 24, 34, 36, 40, 41, 42, 160, 161, 313, 314, 320, 329, 330, 333, 335, 340, 341, 342, 354], "retriev": [19, 24, 42, 331, 999, 1005], "e": [19, 24, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 120, 121, 134, 135, 140, 141, 148, 149, 154, 155, 156, 157, 263, 264, 293, 294, 301, 302, 307, 308, 309, 310, 315, 316, 319, 325, 333, 337, 340, 354, 370, 371, 387, 392, 393, 416, 417, 469, 470, 511, 514, 552, 554, 628, 631, 643, 645, 677, 678, 681, 713, 716, 733, 736, 743, 746, 753, 756, 788, 791, 798, 801, 803, 806, 818, 821, 848, 851, 858, 861, 893, 896, 898, 901, 908, 911, 923, 926, 938, 941, 1311, 1317, 1320, 1354, 1357, 1359, 1362, 1368, 1371, 1383, 1386, 1398, 1401, 1403, 1407, 1433, 1437, 1459, 1475, 1478, 1515, 1518, 1544, 1547, 1551, 1552, 1560, 1561, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1713, 1720], "default": [19, 24, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 318, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 337, 341, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 577, 578, 579, 581, 582, 583, 585, 593, 594, 596, 597, 604, 626, 633, 635, 636, 638, 641, 643, 648, 649, 652, 655, 656, 659, 662, 663, 664, 665, 666, 667, 668, 672, 675, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1015, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1072, 1073, 1076, 1078, 1079, 1081, 1084, 1086, 1097, 1100, 1102, 1103, 1106, 1109, 1112, 1119, 1122, 1125, 1126, 1129, 1132, 1134, 1137, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1171, 1175, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1550, 1554, 1555, 1556, 1557, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1724], "torch": [19, 24, 30, 31, 41, 42, 316, 317, 318, 320, 321, 322, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 354, 467, 468, 552, 596, 597, 643, 647, 664, 665, 677, 943, 946, 999, 1159, 1163, 1311, 1403, 1407, 1713, 1714, 1730], "tensorflow": [19, 24, 29, 31, 34, 35, 39, 40, 41, 42, 132, 133, 285, 286, 316, 320, 321, 322, 327, 330, 331, 332, 333, 334, 335, 337, 342, 354, 370, 371, 1713, 1714, 1722, 1725, 1727, 1728, 1730, 1731], "either": [19, 24, 31, 38, 40, 41, 42, 60, 61, 132, 133, 165, 166, 177, 178, 285, 286, 318, 319, 321, 322, 323, 324, 328, 330, 331, 332, 333, 335, 337, 340, 354, 374, 383, 470, 494, 497, 677, 693, 696, 713, 716, 823, 826, 848, 851, 853, 856, 863, 866, 868, 871, 903, 906, 938, 941, 948, 951, 953, 956, 978, 982, 999, 1028, 1030, 1103, 1106, 1125, 1126, 1181, 1311, 1354, 1357, 1540, 1541, 1542, 1543, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1724], "doesn": [19, 24, 26, 38, 41, 318, 319, 320, 321, 323, 333, 335, 337, 354, 1722], "matter": [19, 24, 33, 323], "been": [19, 24, 40, 42, 132, 133, 148, 149, 285, 286, 301, 302, 316, 318, 319, 320, 321, 322, 324, 326, 327, 328, 333, 337, 339, 353, 354, 643, 648, 677, 943, 946, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1567, 1568, 1571, 1713, 1724, 1731], "ivy_np": [19, 24, 333], "us": [19, 24, 31, 35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 102, 103, 116, 117, 120, 121, 132, 133, 134, 135, 144, 145, 146, 147, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 285, 286, 287, 288, 297, 298, 299, 300, 301, 302, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 353, 354, 374, 382, 384, 387, 388, 389, 390, 391, 394, 400, 404, 416, 417, 431, 452, 455, 457, 460, 462, 465, 469, 470, 508, 509, 552, 555, 558, 587, 588, 591, 593, 594, 596, 597, 626, 627, 643, 644, 655, 656, 658, 662, 665, 666, 667, 668, 672, 674, 676, 677, 698, 701, 763, 766, 813, 816, 883, 886, 893, 896, 898, 901, 908, 911, 913, 916, 963, 966, 999, 1015, 1054, 1055, 1070, 1071, 1125, 1141, 1142, 1149, 1152, 1154, 1157, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1218, 1221, 1245, 1271, 1274, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1332, 1335, 1349, 1352, 1408, 1412, 1443, 1444, 1447, 1459, 1490, 1493, 1500, 1503, 1520, 1524, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1553, 1554, 1555, 1557, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1631, 1635, 1657, 1668, 1671, 1713, 1714, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "ivy_jax": [19, 24], "subsequ": [19, 25, 41, 317, 321, 323, 327, 328, 330, 333, 335, 341, 1725], "call": [19, 25, 31, 34, 38, 42, 162, 167, 168, 173, 174, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340, 341, 342, 354, 643, 644, 667, 999, 1078, 1144, 1181, 1193, 1202, 1203, 1213, 1544, 1545, 1550, 1554, 1555, 1724, 1725, 1728], "nativ": [19, 25, 44, 47, 48, 49, 51, 52, 53, 54, 55, 132, 133, 169, 170, 285, 286, 321, 325, 329, 330, 331, 332, 333, 337, 339, 340, 422, 470, 516, 519, 552, 553, 554, 576, 581, 582, 627, 643, 645, 646, 647, 648, 649, 652, 662, 673, 676, 999, 1097, 1100, 1103, 1106, 1119, 1122, 1128, 1170, 1713, 1722, 1731], "native_arrai": [19, 25, 31, 54, 55, 56, 57, 60, 61, 144, 145, 171, 172, 175, 176, 177, 178, 285, 286, 307, 308, 329, 332, 333, 387, 394, 400, 410, 411, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 500, 503, 511, 514, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 599, 602, 616, 619, 628, 631, 643, 649, 652, 661, 677, 678, 681, 698, 701, 703, 706, 713, 716, 723, 726, 743, 746, 748, 751, 753, 756, 768, 771, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 873, 876, 878, 881, 883, 886, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 983, 987, 999, 1109, 1112, 1119, 1122, 1245, 1247, 1250, 1271, 1274, 1279, 1282, 1306, 1309, 1311, 1322, 1325, 1332, 1335, 1354, 1357, 1368, 1371, 1373, 1376, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1480, 1483, 1490, 1493, 1495, 1498, 1505, 1508, 1515, 1518, 1520, 1524, 1525, 1529, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1652, 1655, 1657, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "1": [19, 25, 31, 34, 35, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 321, 323, 325, 326, 327, 328, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 354, 370, 371, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 482, 484, 499, 500, 503, 505, 506, 508, 509, 511, 514, 521, 524, 526, 527, 529, 532, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 587, 588, 591, 611, 614, 616, 619, 643, 648, 649, 652, 657, 660, 661, 663, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1007, 1009, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1081, 1084, 1087, 1090, 1109, 1112, 1119, 1122, 1125, 1134, 1137, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282, 1284, 1287, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "ndarrai": [19, 25, 40, 54, 55, 132, 133, 317, 321, 322, 327, 330, 331, 332, 334, 335, 337, 339, 342, 470, 475, 477, 516, 519, 999, 1171, 1175, 1713], "Or": [19, 25, 340], "jaxlib": [19, 25, 41, 317, 321, 322, 327, 334, 337, 339], "xla_extens": [19, 25, 317, 321, 322, 327, 334, 337, 339], "devicearrai": [19, 25, 317, 332, 337, 339], "set_backend_to_specific_vers": 19, "anyth": [19, 26, 333, 334, 1724, 1725], "updat": [19, 26, 38, 40, 41, 42, 49, 51, 53, 132, 133, 134, 135, 165, 166, 285, 286, 287, 288, 315, 316, 317, 319, 320, 321, 323, 327, 329, 332, 335, 337, 339, 340, 342, 354, 999, 1097, 1100, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1296, 1299, 1540, 1541, 1542, 1544, 1551, 1552, 1560, 1561], "__dict__": [19, 26, 318, 337], "make": [19, 26, 34, 35, 40, 41, 42, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 1722, 1724, 1725, 1726, 1727, 1730, 1731], "set_jax_backend": 19, "equival": [19, 27, 28, 29, 30, 140, 141, 293, 294, 330, 331, 335, 340, 342, 470, 472, 473, 677, 743, 746, 878, 881, 883, 886, 938, 941, 1311, 1368, 1371, 1383, 1386, 1398, 1401, 1433, 1437], "set_numpy_backend": 19, "set_tensorflow_backend": 19, "set_torch_backend": 19, "unset_backend": [19, 318], "unset": [19, 31, 318, 337], "adjust": [19, 31, 156, 157, 309, 310, 1657, 1688, 1691, 1697, 1701], "dict": [19, 31, 49, 50, 51, 52, 53, 132, 133, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 326, 340, 341, 387, 394, 643, 648, 999, 1005, 1031, 1034, 1036, 1039, 1041, 1044, 1054, 1055, 1125, 1544, 1546, 1547, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1560, 1561, 1713], "previous": [19, 31, 38, 41, 328, 333, 337], "otherwis": [19, 31, 49, 50, 51, 52, 53, 56, 57, 60, 61, 132, 133, 134, 135, 140, 141, 144, 145, 150, 151, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 319, 320, 321, 322, 323, 333, 337, 470, 472, 473, 505, 506, 552, 555, 558, 570, 573, 575, 577, 578, 579, 581, 582, 606, 609, 616, 619, 627, 643, 648, 677, 818, 821, 823, 826, 828, 831, 833, 836, 999, 1010, 1013, 1181, 1193, 1208, 1211, 1311, 1312, 1315, 1322, 1325, 1403, 1407, 1428, 1432, 1433, 1437, 1459, 1495, 1498, 1540, 1541, 1542, 1544, 1557, 1594, 1595, 1598, 1600, 1603, 1615, 1619, 1641, 1647, 1650, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "implement": [19, 31, 40, 56, 57, 154, 155, 173, 174, 175, 176, 307, 308, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 353, 354, 374, 383, 552, 555, 558, 628, 631, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 903, 906, 923, 926, 938, 941, 953, 956, 958, 961, 978, 982, 983, 987, 1311, 1337, 1340, 1341, 1343, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1713, 1714, 1721, 1722, 1723, 1724, 1727, 1730, 1731], "wa": [19, 31, 34, 42, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 323, 331, 337, 339, 999, 1181, 1544, 1557, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1723, 1724, 1726], "last": [19, 31, 35, 42, 44, 47, 48, 54, 55, 110, 111, 140, 141, 142, 143, 144, 145, 154, 155, 156, 157, 158, 159, 165, 166, 263, 264, 293, 294, 295, 296, 297, 298, 307, 308, 309, 310, 311, 312, 316, 318, 321, 323, 326, 330, 332, 333, 335, 337, 354, 387, 394, 400, 401, 431, 442, 445, 457, 460, 470, 505, 506, 643, 648, 1193, 1226, 1232, 1244, 1245, 1296, 1299, 1311, 1317, 1320, 1332, 1335, 1418, 1422, 1428, 1432, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1480, 1483, 1500, 1503, 1505, 1508, 1515, 1518, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1702, 1703, 1706, 1708, 1711, 1724], "henc": [19, 31, 41, 319, 333, 1459, 1475, 1478, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "here": [19, 31, 39, 40, 41, 42, 316, 319, 320, 323, 327, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 353, 354, 677, 943, 946, 1724, 1725], "tensor": [19, 31, 33, 54, 55, 60, 61, 110, 111, 132, 133, 144, 145, 148, 149, 165, 166, 171, 172, 177, 178, 285, 286, 297, 298, 301, 302, 317, 318, 321, 322, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 354, 370, 371, 400, 401, 470, 505, 506, 508, 509, 521, 524, 552, 583, 585, 627, 677, 893, 896, 898, 901, 999, 1134, 1137, 1245, 1284, 1287, 1296, 1299, 1311, 1413, 1417, 1459, 1505, 1508, 1567, 1568, 1571, 1713, 1714, 1721, 1722, 1725, 1727, 1728, 1731], "howev": [19, 31, 34, 40, 41, 42, 316, 317, 318, 319, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 354, 1311, 1403, 1407, 1723, 1724, 1730], "befor": [19, 31, 40, 41, 42, 144, 145, 165, 166, 316, 317, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 337, 340, 354, 387, 394, 400, 402, 403, 643, 644, 667, 677, 988, 992, 1245, 1301, 1304, 1306, 1309, 1459, 1465, 1468, 1540, 1541, 1542, 1544, 1556, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1724], "becom": [19, 31, 33, 35, 42, 102, 103, 319, 323, 331, 354, 374, 376, 1459, 1460, 1463], "swap": [19, 31, 1459, 1520, 1524], "python": [19, 31, 32, 33, 34, 38, 39, 41, 42, 120, 121, 148, 149, 273, 274, 301, 302, 316, 319, 325, 326, 331, 333, 335, 337, 339, 340, 354, 416, 417, 470, 472, 473, 643, 662, 676, 677, 938, 941, 999, 1192, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1589, 1592, 1713, 1714, 1721, 1724, 1725, 1726, 1730, 1731], "op": [19, 31, 334, 337, 354], "eagertensor": [19, 31], "backend": [22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 49, 51, 53, 132, 133, 134, 135, 165, 166, 285, 286, 315, 316, 317, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 342, 552, 593, 594, 596, 597, 605, 642, 643, 655, 656, 658, 660, 674, 999, 1054, 1055, 1086, 1097, 1100, 1102, 1126, 1159, 1163, 1170, 1193, 1239, 1243, 1311, 1403, 1407, 1713, 1714, 1724, 1727, 1730, 1731], "ml": [32, 34, 35, 36, 39, 331, 336, 337, 338, 340, 341, 342, 353, 1714, 1720, 1721, 1722, 1723, 1724, 1727, 1729, 1731], "explos": [32, 34, 1714], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 102, 103, 116, 117, 120, 121, 132, 133, 144, 145, 148, 149, 158, 159, 162, 165, 166, 167, 168, 173, 174, 255, 256, 273, 274, 285, 286, 287, 288, 297, 298, 301, 302, 311, 312, 315, 319, 321, 322, 327, 328, 331, 333, 337, 340, 354, 370, 371, 374, 382, 400, 410, 411, 416, 417, 470, 491, 492, 516, 519, 552, 560, 563, 643, 667, 677, 918, 921, 933, 936, 999, 1071, 1165, 1169, 1193, 1233, 1311, 1378, 1381, 1398, 1401, 1403, 1407, 1459, 1505, 1508, 1515, 1518, 1544, 1545, 1547, 1549, 1551, 1552, 1553, 1554, 1555, 1558, 1559, 1560, 1561, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1589, 1592, 1657, 1668, 1671, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1724, 1725], "huge": [32, 34, 340, 1714, 1724, 1730], "number": [32, 33, 41, 42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 116, 117, 132, 133, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 165, 166, 167, 168, 171, 172, 173, 174, 177, 178, 269, 270, 285, 286, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 319, 321, 322, 323, 330, 332, 333, 335, 337, 340, 370, 371, 374, 382, 387, 394, 400, 410, 411, 467, 468, 469, 470, 472, 473, 491, 492, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 552, 560, 563, 581, 582, 587, 588, 591, 599, 602, 606, 609, 611, 614, 616, 619, 621, 624, 628, 631, 643, 659, 660, 661, 677, 693, 696, 713, 716, 753, 756, 798, 801, 803, 806, 833, 836, 893, 896, 903, 906, 923, 926, 938, 941, 943, 946, 948, 951, 988, 992, 999, 1049, 1052, 1070, 1071, 1073, 1076, 1127, 1149, 1152, 1154, 1157, 1176, 1180, 1187, 1191, 1192, 1245, 1301, 1304, 1311, 1332, 1335, 1337, 1340, 1341, 1343, 1368, 1371, 1393, 1396, 1403, 1407, 1423, 1427, 1428, 1432, 1459, 1460, 1463, 1470, 1473, 1475, 1478, 1485, 1488, 1490, 1493, 1500, 1503, 1505, 1508, 1515, 1518, 1525, 1529, 1535, 1539, 1540, 1541, 1542, 1543, 1567, 1568, 1571, 1588, 1594, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "tool": [32, 35, 42, 323, 338, 342, 353, 354, 1714, 1722, 1723, 1724, 1725, 1727, 1730, 1731], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 374, 383, 387, 394, 396, 397, 398, 400, 410, 411, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 469, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 588, 591, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 998, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1239, 1243, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1540, 1544, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "explod": [32, 33, 1714], "onto": [32, 33, 1544, 1550, 1556, 1714, 1724], "scene": [32, 33, 134, 135, 315, 336, 338, 1714, 1724], "b": [32, 35, 36, 44, 47, 48, 60, 61, 112, 113, 132, 133, 138, 139, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 315, 318, 319, 320, 323, 328, 336, 337, 338, 340, 341, 342, 352, 374, 383, 387, 394, 396, 398, 400, 411, 431, 432, 435, 442, 445, 470, 482, 484, 499, 500, 503, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 616, 619, 677, 678, 681, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 978, 982, 983, 987, 999, 1000, 1003, 1007, 1009, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1134, 1137, 1149, 1152, 1159, 1163, 1171, 1175, 1176, 1180, 1193, 1194, 1197, 1204, 1207, 1208, 1211, 1214, 1217, 1222, 1225, 1227, 1231, 1234, 1238, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1393, 1396, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1459, 1460, 1463, 1475, 1478, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1589, 1592, 1594, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1720], "why": [32, 34, 42, 330, 339, 1714], "unifi": [32, 34, 165, 166, 315, 316, 317, 321, 325, 331, 335, 337, 354, 643, 667, 1714, 1720, 1721, 1722, 1724, 1728, 1731], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 60, 61, 102, 103, 116, 117, 132, 133, 134, 135, 140, 141, 144, 145, 148, 149, 150, 151, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 177, 178, 255, 256, 269, 270, 287, 288, 293, 294, 297, 298, 301, 302, 303, 304, 307, 308, 309, 310, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 374, 383, 384, 387, 394, 400, 407, 431, 467, 468, 469, 470, 511, 514, 521, 524, 534, 538, 539, 543, 552, 565, 568, 627, 643, 644, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 788, 791, 793, 796, 798, 801, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 998, 999, 1015, 1097, 1100, 1192, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1443, 1459, 1540, 1544, 1562, 1567, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1714, 1720, 1721, 1724, 1726, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "them": [32, 33, 34, 35, 38, 40, 42, 316, 317, 318, 319, 325, 329, 330, 331, 332, 333, 337, 339, 340, 341, 354, 999, 1015, 1128, 1713, 1714, 1721, 1722, 1724, 1726, 1730], "c": [32, 34, 35, 36, 41, 132, 133, 134, 135, 138, 139, 156, 157, 173, 174, 177, 178, 269, 270, 285, 286, 287, 288, 297, 298, 309, 310, 315, 319, 323, 328, 335, 336, 337, 338, 340, 354, 552, 588, 591, 599, 602, 677, 743, 746, 848, 851, 853, 856, 913, 916, 948, 951, 999, 1007, 1009, 1041, 1044, 1176, 1180, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1257, 1260, 1271, 1274, 1311, 1349, 1352, 1459, 1515, 1518, 1544, 1547, 1551, 1552, 1555, 1560, 1561, 1594, 1610, 1613, 1657, 1663, 1666, 1668, 1671, 1688, 1691, 1697, 1701, 1713, 1714, 1720, 1724, 1728, 1729, 1731], "standard": [32, 60, 61, 146, 147, 148, 149, 156, 157, 177, 178, 299, 300, 301, 302, 309, 310, 315, 316, 317, 319, 321, 324, 327, 330, 333, 334, 354, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1192, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1562, 1563, 1566, 1567, 1578, 1581, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1720, 1722, 1723, 1726, 1727, 1729], "re": [32, 33, 34, 36, 40, 41, 42, 132, 133, 315, 321, 334, 335, 339, 342, 354, 643, 667, 999, 1015, 1031, 1034, 1311, 1413, 1417, 1459, 1500, 1503, 1594, 1615, 1619, 1714, 1724], "collabor": [32, 33, 34, 1714], "consortium": [32, 34, 1714], "api": [32, 33, 41, 42, 60, 61, 177, 178, 315, 317, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 340, 354, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 626, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1722, 1724, 1726, 1729, 1731], "open": [33, 34, 35, 36, 38, 41, 42, 148, 149, 301, 302, 320, 321, 324, 331, 332, 335, 353, 470, 472, 473, 1567, 1573, 1576, 1583, 1586, 1714, 1722, 1723, 1724, 1726, 1727], "project": [33, 34, 35, 38, 41, 42, 318, 333, 341, 353, 354, 1720, 1722, 1724, 1727, 1731], "grown": 33, "consider": [33, 323, 327, 335, 1721, 1722], "recent": [33, 34, 41, 42, 333], "year": [33, 35, 316, 354, 1714, 1724], "especi": [33, 41, 316, 335, 1724], "deep": [33, 36, 39, 40, 42, 165, 166, 319, 321, 332, 336, 339, 340, 1714, 1722, 1724, 1727, 1728, 1730, 1731], "learn": [33, 34, 36, 39, 40, 41, 134, 135, 287, 288, 315, 316, 328, 336, 353, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1540, 1541, 1542, 1543, 1713, 1714, 1722, 1726, 1727, 1728, 1729, 1730, 1731], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 140, 141, 144, 145, 148, 149, 173, 174, 293, 294, 297, 298, 301, 302, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 416, 417, 470, 475, 477, 516, 519, 552, 570, 573, 643, 665, 666, 667, 999, 1192, 1311, 1349, 1352, 1403, 1407, 1459, 1495, 1498, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1730, 1731], "seen": [33, 34, 320, 323, 325, 331, 333, 337, 339, 340, 416, 417, 1730], "rapidli": 33, "increas": [33, 140, 141, 293, 294, 321, 325, 334, 335, 387, 394, 1311, 1423, 1427, 1459, 1470, 1473, 1535, 1539, 1544, 1556, 1724], "github": [33, 37, 39, 40, 42, 316, 321, 323, 324, 333], "repo": [33, 37, 38, 39, 41, 42, 316, 321, 331, 334], "contain": [33, 37, 38, 40, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 132, 133, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 323, 324, 327, 328, 329, 330, 333, 336, 337, 338, 341, 354, 370, 371, 374, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 410, 411, 431, 432, 435, 442, 445, 447, 450, 452, 455, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 599, 602, 606, 609, 616, 619, 628, 631, 643, 657, 661, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1006, 1016, 1019, 1021, 1024, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1072, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1114, 1117, 1134, 1137, 1143, 1144, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1184, 1192, 1193, 1194, 1197, 1204, 1207, 1208, 1211, 1214, 1217, 1222, 1225, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1551, 1557, 1560, 1562, 1563, 1566, 1567, 1568, 1571, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1724, 1725, 1730], "term": [33, 42, 319, 337, 1245, 1296, 1299, 1713, 1724], "time": [33, 34, 35, 40, 41, 42, 116, 117, 134, 135, 152, 153, 269, 270, 287, 288, 305, 306, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 333, 334, 337, 340, 342, 354, 387, 394, 400, 410, 1193, 1198, 1201, 1214, 1217, 1245, 1296, 1299, 1459, 1525, 1529, 1540, 1541, 1542, 1543, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1722, 1724, 1725, 1728, 1729, 1730], "These": [33, 34, 35, 37, 39, 40, 41, 42, 116, 117, 269, 270, 316, 319, 320, 321, 323, 324, 326, 327, 328, 330, 332, 333, 334, 337, 338, 340, 341, 342, 354, 400, 407, 1311, 1337, 1340, 1713, 1724, 1728, 1730, 1731], "written": [33, 41, 317, 324, 327, 330, 331, 333, 334, 337, 339, 342, 354, 1722, 1724, 1728, 1730, 1731], "mani": [33, 34, 35, 40, 41, 42, 144, 145, 165, 166, 297, 298, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 354, 370, 371, 1459, 1505, 1508, 1720, 1724, 1727, 1730, 1731], "differ": [33, 34, 35, 39, 41, 42, 44, 47, 48, 60, 61, 116, 117, 132, 133, 162, 165, 166, 167, 168, 269, 270, 285, 286, 309, 310, 315, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 354, 374, 376, 377, 400, 402, 403, 410, 552, 588, 591, 677, 693, 696, 903, 906, 973, 977, 999, 1056, 1059, 1245, 1291, 1294, 1459, 1465, 1468, 1515, 1518, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1714, 1721, 1722, 1723, 1724, 1727, 1730, 1731], "while": [33, 34, 40, 41, 42, 162, 165, 166, 167, 168, 318, 321, 323, 326, 327, 330, 331, 333, 335, 339, 341, 342, 354, 374, 377, 470, 521, 524, 552, 627, 677, 878, 881, 883, 886, 1620, 1621, 1625, 1657, 1676, 1679, 1688, 1691, 1724, 1730, 1731], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 370, 371, 374, 375, 376, 382, 387, 392, 393, 394, 396, 397, 400, 401, 404, 407, 427, 428, 431, 462, 465, 467, 469, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 606, 609, 616, 619, 627, 628, 631, 643, 644, 662, 667, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 998, 999, 1049, 1052, 1056, 1059, 1073, 1076, 1078, 1081, 1084, 1087, 1090, 1097, 1100, 1144, 1159, 1163, 1176, 1180, 1192, 1193, 1208, 1211, 1226, 1227, 1231, 1232, 1234, 1238, 1239, 1243, 1244, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1544, 1550, 1556, 1557, 1562, 1563, 1566, 1567, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "wonder": [33, 35, 339], "thing": [33, 34, 35, 39, 40, 41, 42, 318, 326, 331, 333, 335, 339, 340, 1724], "research": [33, 353, 1724, 1731], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 316, 320, 334, 353, 354, 1713, 1714, 1722, 1723, 1724, 1725, 1726, 1729, 1730, 1731], "also": [33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 353, 354, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 407, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1097, 1100, 1159, 1163, 1176, 1180, 1193, 1198, 1201, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1554, 1555, 1556, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1730, 1731], "consid": [33, 34, 140, 141, 293, 294, 328, 334, 338, 339, 340, 370, 371, 677, 878, 881, 883, 886, 1311, 1327, 1330, 1368, 1371, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1721, 1725, 1729, 1731], "speed": [33, 333, 1727], "evolv": [33, 1724], "sharabl": 33, "code": [33, 34, 35, 37, 38, 39, 40, 41, 42, 60, 61, 162, 165, 166, 167, 168, 175, 176, 177, 178, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 352, 354, 643, 644, 668, 672, 999, 1159, 1163, 1193, 1226, 1232, 1244, 1245, 1279, 1282, 1311, 1368, 1371, 1373, 1376, 1459, 1515, 1518, 1713, 1714, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731], "significantli": [33, 1311, 1403, 1407, 1722], "hinder": [33, 327], "librari": [33, 34, 35, 36, 40, 175, 176, 316, 335, 342, 352, 354, 643, 668, 672, 677, 793, 796, 858, 861, 878, 881, 883, 886, 1311, 1337, 1340, 1341, 1343, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1713, 1714, 1720, 1721, 1722, 1724, 1728, 1731], "outdat": 33, "month": [33, 41], "rigor": [33, 333], "maintain": [33, 42, 154, 155, 307, 308, 316, 320, 1641, 1642, 1645, 1652, 1655, 1723], "against": [33, 56, 57, 140, 141, 150, 151, 173, 174, 177, 178, 293, 294, 303, 304, 333, 337, 354, 552, 560, 563, 1311, 1354, 1357, 1359, 1362, 1368, 1371, 1383, 1386, 1594, 1595, 1598, 1724], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 134, 135, 140, 141, 287, 288, 293, 294, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 353, 354, 374, 383, 387, 394, 470, 472, 473, 511, 514, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 903, 906, 923, 926, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 1193, 1208, 1211, 1239, 1243, 1311, 1403, 1407, 1418, 1422, 1459, 1460, 1463, 1515, 1518, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1680, 1683, 1692, 1696, 1721, 1722, 1725, 1730, 1731], "softwar": [33, 34, 41, 42, 1722, 1727, 1728, 1729], "pipelin": [33, 317, 342, 1713, 1724, 1725, 1730], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 102, 103, 116, 117, 132, 133, 140, 141, 144, 145, 148, 149, 150, 151, 156, 157, 158, 159, 165, 166, 171, 172, 177, 178, 255, 256, 269, 270, 293, 294, 297, 298, 301, 302, 303, 304, 309, 310, 311, 312, 317, 318, 319, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 354, 370, 371, 374, 377, 380, 387, 394, 400, 404, 470, 499, 500, 503, 511, 514, 521, 524, 677, 713, 716, 788, 791, 833, 836, 858, 861, 893, 896, 898, 901, 903, 906, 923, 926, 999, 1097, 1100, 1192, 1193, 1226, 1232, 1244, 1311, 1337, 1340, 1359, 1362, 1368, 1371, 1383, 1386, 1388, 1391, 1403, 1407, 1408, 1412, 1418, 1422, 1428, 1432, 1459, 1460, 1463, 1470, 1473, 1485, 1488, 1515, 1518, 1535, 1539, 1544, 1545, 1555, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1610, 1613, 1657, 1688, 1691, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1722, 1731], "rapid": [33, 34, 41, 1724], "prototyp": [33, 1724], "vital": [33, 342], "signific": [33, 34, 354, 1724], "bottleneck": 33, "As": [33, 42, 160, 161, 313, 314, 317, 319, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 354, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1724, 1729], "new": [33, 34, 35, 36, 38, 40, 41, 42, 102, 103, 132, 133, 134, 135, 144, 145, 146, 147, 165, 166, 171, 172, 255, 256, 285, 286, 287, 288, 297, 298, 299, 300, 315, 318, 319, 320, 321, 323, 324, 326, 329, 330, 331, 332, 333, 334, 335, 336, 339, 342, 353, 374, 382, 400, 407, 470, 485, 494, 497, 499, 500, 503, 521, 524, 526, 527, 529, 532, 544, 546, 547, 551, 552, 637, 677, 718, 721, 918, 921, 933, 936, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1129, 1132, 1134, 1137, 1141, 1146, 1149, 1152, 1154, 1157, 1171, 1175, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1459, 1475, 1478, 1495, 1498, 1515, 1518, 1544, 1549, 1560, 1561, 1562, 1563, 1566, 1713, 1714, 1722, 1726, 1730, 1731], "futur": [33, 35, 41, 42, 321, 331, 334, 335, 339, 354, 1311, 1337, 1340, 1341, 1343, 1730], "avail": [33, 41, 42, 132, 133, 285, 286, 319, 320, 322, 324, 331, 354, 643, 648, 658, 659, 660, 674, 999, 1036, 1039, 1729, 1730], "quickli": [33, 35, 41, 42, 340, 341, 1724, 1731], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 315, 318, 319, 321, 329, 330, 331, 333, 335, 336, 337, 354, 387, 394, 1722, 1724, 1730, 1731], "constantli": [33, 334, 335], "invent": 33, "wheel": 33, "our": [33, 34, 36, 39, 40, 41, 42, 44, 160, 161, 162, 313, 314, 316, 319, 320, 321, 323, 325, 326, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 354, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1714, 1729, 1730, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "desir": [33, 42, 56, 57, 150, 151, 165, 166, 173, 174, 175, 176, 303, 304, 318, 321, 331, 337, 552, 555, 558, 570, 573, 643, 668, 672, 1594, 1605, 1608, 1724], "simultan": [33, 35], "modern": [33, 34, 1729], "simpl": [33, 40, 41, 42, 317, 319, 321, 322, 323, 324, 328, 330, 331, 333, 334, 335, 339, 341, 342, 354, 999, 1046, 1048, 1713, 1723, 1724, 1725, 1726], "scalabl": [33, 337, 1729, 1730], "manner": [33, 41, 49, 52, 53, 169, 170, 322, 324, 331, 334, 340, 353, 354, 1544, 1556, 1720, 1722, 1730, 1731], "determin": [33, 44, 47, 48, 60, 61, 102, 103, 140, 141, 144, 145, 158, 159, 162, 165, 166, 167, 168, 177, 178, 255, 256, 285, 286, 293, 294, 307, 308, 311, 312, 319, 321, 322, 324, 328, 331, 332, 335, 374, 383, 552, 570, 573, 576, 587, 605, 606, 609, 611, 614, 616, 619, 621, 624, 642, 643, 658, 659, 660, 674, 677, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 758, 761, 763, 766, 773, 776, 788, 791, 793, 796, 818, 821, 823, 826, 828, 831, 833, 836, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 888, 891, 903, 906, 923, 926, 938, 941, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1007, 1009, 1081, 1084, 1086, 1102, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1159, 1163, 1187, 1191, 1193, 1208, 1211, 1245, 1301, 1304, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1344, 1347, 1349, 1352, 1354, 1357, 1364, 1366, 1368, 1371, 1378, 1381, 1383, 1386, 1393, 1396, 1398, 1401, 1418, 1422, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1540, 1541, 1542, 1543, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1702, 1703, 1706, 1708, 1711], "exactli": [33, 35, 319, 321, 322, 323, 335], "common": [33, 40, 60, 61, 102, 103, 165, 166, 255, 256, 319, 321, 322, 323, 326, 328, 329, 331, 334, 335, 354, 374, 376, 379, 381, 552, 627, 677, 903, 906, 1721, 1724, 1731], "ground": [33, 331, 333], "li": 33, "between": [33, 102, 103, 142, 143, 144, 145, 162, 165, 166, 167, 168, 177, 178, 295, 296, 297, 298, 317, 318, 319, 323, 327, 328, 331, 332, 333, 335, 336, 338, 339, 340, 342, 353, 374, 384, 387, 394, 470, 472, 473, 552, 588, 591, 677, 713, 716, 923, 926, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1515, 1518, 1544, 1550, 1567, 1573, 1576, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1720, 1721, 1723, 1724, 1725, 1730], "find": [33, 36, 38, 39, 40, 41, 42, 165, 166, 316, 320, 333, 335, 337, 340, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1713, 1714], "essenti": [33, 34, 40, 319, 322, 323, 328, 334, 1730], "order": [33, 38, 40, 41, 42, 44, 47, 48, 116, 117, 134, 135, 140, 141, 154, 155, 162, 165, 166, 167, 168, 269, 270, 293, 294, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 335, 340, 342, 354, 370, 371, 400, 401, 402, 403, 470, 511, 514, 677, 713, 716, 1311, 1337, 1340, 1359, 1362, 1403, 1407, 1408, 1412, 1423, 1427, 1433, 1437, 1459, 1480, 1483, 1540, 1541, 1542, 1594, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1720, 1723, 1724, 1725, 1727, 1730], "design": [33, 34, 263, 264, 315, 321, 330, 331, 332, 335, 337, 339, 354, 387, 390, 391, 1720, 1722, 1724, 1727, 1728, 1729], "univers": 33, "abstract": [33, 319, 321, 331, 333, 335, 341, 354, 643, 644, 1722, 1724, 1726, 1727, 1731], "In": [33, 35, 37, 40, 41, 42, 132, 133, 144, 145, 175, 176, 297, 298, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 353, 354, 643, 662, 668, 672, 673, 676, 677, 693, 696, 903, 906, 938, 941, 999, 1005, 1097, 1100, 1459, 1495, 1498, 1567, 1583, 1586, 1714, 1720, 1722, 1724, 1725, 1727, 1730], "search": [33, 39, 41, 49, 52, 53, 123, 151, 169, 170, 276, 304, 319, 323, 333, 334, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619], "languag": [33, 35, 331, 335, 337, 1713, 1722, 1725, 1727, 1728, 1729, 1730], "first": [33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 61, 102, 103, 110, 111, 116, 117, 140, 141, 148, 149, 150, 151, 152, 153, 156, 157, 162, 167, 168, 177, 178, 255, 256, 263, 264, 265, 266, 293, 294, 301, 302, 305, 306, 309, 310, 316, 317, 319, 323, 327, 328, 329, 330, 331, 333, 335, 337, 339, 340, 342, 370, 371, 374, 377, 378, 379, 381, 387, 394, 396, 398, 400, 401, 410, 420, 421, 467, 468, 470, 505, 506, 508, 509, 552, 626, 637, 643, 648, 677, 693, 696, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 778, 781, 803, 806, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 973, 977, 999, 1007, 1009, 1311, 1317, 1320, 1332, 1335, 1337, 1340, 1344, 1347, 1354, 1357, 1378, 1381, 1388, 1391, 1403, 1407, 1413, 1417, 1428, 1432, 1459, 1500, 1503, 1515, 1518, 1520, 1524, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1554, 1555, 1567, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1722, 1724, 1725, 1729], "see": [33, 36, 38, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 140, 141, 150, 151, 156, 157, 158, 159, 162, 167, 168, 177, 178, 293, 294, 303, 304, 309, 310, 311, 312, 316, 319, 320, 322, 323, 327, 328, 331, 332, 333, 334, 335, 337, 339, 340, 353, 354, 370, 371, 470, 472, 473, 494, 497, 505, 506, 508, 509, 552, 565, 568, 628, 631, 677, 693, 696, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 793, 796, 838, 841, 858, 861, 868, 871, 883, 886, 888, 891, 913, 916, 923, 926, 938, 941, 973, 977, 993, 997, 1311, 1368, 1371, 1383, 1386, 1398, 1401, 1428, 1432, 1433, 1437, 1594, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1720], "clear": [33, 34, 35, 40, 42, 321, 322, 323, 331, 335, 337, 339, 643, 647, 1724], "front": [33, 336, 337, 340, 1714, 1722, 1724], "runner": 33, "look": [33, 37, 38, 41, 42, 318, 319, 321, 322, 323, 325, 327, 328, 331, 332, 333, 334, 335, 337, 339, 341, 342, 1714, 1720, 1724], "littl": [33, 332, 339, 1726], "deeper": [33, 42, 315, 333, 336, 1544, 1555, 1556], "follow": [33, 34, 38, 40, 41, 42, 132, 133, 134, 135, 165, 166, 285, 286, 287, 288, 293, 294, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 354, 387, 394, 552, 599, 602, 643, 667, 677, 938, 941, 999, 1087, 1090, 1092, 1095, 1097, 1100, 1149, 1152, 1154, 1157, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1301, 1304, 1306, 1309, 1311, 1359, 1362, 1388, 1391, 1433, 1437, 1544, 1550, 1556, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1721, 1724, 1727], "same": [33, 35, 37, 38, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 110, 111, 126, 127, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 152, 153, 154, 155, 156, 157, 165, 166, 171, 172, 173, 174, 177, 178, 263, 264, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 301, 302, 305, 306, 309, 310, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 354, 370, 371, 374, 376, 387, 392, 393, 394, 420, 421, 470, 472, 473, 486, 489, 500, 503, 511, 514, 521, 524, 529, 532, 534, 538, 539, 543, 547, 551, 552, 555, 558, 560, 563, 565, 568, 643, 667, 677, 678, 681, 693, 696, 728, 731, 753, 756, 798, 801, 903, 906, 938, 941, 943, 946, 948, 951, 988, 992, 1193, 1208, 1211, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1364, 1366, 1373, 1376, 1383, 1386, 1388, 1391, 1398, 1401, 1403, 1407, 1418, 1422, 1428, 1432, 1459, 1465, 1468, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1540, 1541, 1542, 1544, 1557, 1567, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1714, 1721, 1723, 1730, 1731], "core": [33, 40, 41, 322, 333, 342, 643, 659, 1714, 1722, 1723, 1724, 1725, 1729, 1731], "principl": [33, 1722, 1724, 1727], "oper": [33, 40, 41, 56, 57, 110, 111, 132, 133, 134, 135, 138, 139, 162, 165, 166, 167, 168, 173, 174, 263, 264, 285, 286, 291, 292, 316, 317, 319, 321, 322, 323, 324, 328, 330, 331, 333, 335, 337, 340, 341, 387, 392, 393, 470, 505, 506, 508, 509, 552, 628, 631, 677, 693, 696, 743, 746, 748, 751, 813, 816, 908, 911, 913, 916, 938, 941, 968, 971, 999, 1010, 1013, 1031, 1034, 1036, 1039, 1041, 1044, 1159, 1163, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1291, 1294, 1713, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731], "expos": [33, 337, 341, 999, 1026], "almost": [33, 39, 319, 332, 338, 340], "ident": [33, 35, 165, 166, 319, 328, 329, 331, 332, 334, 335, 339, 340, 354, 643, 657, 999, 1069, 1311, 1364, 1366, 1544, 1557, 1713, 1714], "uniqu": [33, 116, 117, 152, 153, 269, 270, 305, 306, 319, 328, 331, 332, 333, 335, 354, 387, 394, 400, 407, 1540, 1541, 1542, 1543, 1544, 1550, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1727], "syntax": [33, 34, 321, 326, 1724], "There": [33, 40, 41, 42, 316, 317, 319, 321, 323, 325, 326, 328, 331, 332, 337, 340, 354, 1725, 1726, 1730, 1731], "onli": [33, 36, 40, 41, 42, 44, 47, 48, 144, 145, 148, 149, 165, 166, 297, 298, 301, 302, 316, 317, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 352, 354, 400, 401, 552, 626, 627, 643, 663, 676, 677, 878, 881, 883, 886, 999, 1015, 1311, 1354, 1357, 1388, 1391, 1403, 1407, 1459, 1480, 1483, 1544, 1545, 1546, 1554, 1555, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1641, 1647, 1650, 1657, 1676, 1679, 1688, 1691, 1714, 1723, 1724, 1725, 1730, 1731], "so": [33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 354, 355, 365, 374, 376, 1544, 1545, 1555, 1714, 1724, 1725, 1726, 1728], "wai": [33, 34, 39, 40, 41, 316, 318, 321, 330, 332, 333, 335, 339, 340, 341, 342, 354, 1726, 1730, 1731], "manipul": [33, 117, 145, 270, 298, 334, 337, 342, 353, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1724], "unsurprisingli": [33, 323], "fundament": [33, 331, 335, 337, 1724], "consist": [33, 165, 166, 316, 317, 321, 325, 330, 337, 1311, 1337, 1340, 1657, 1668, 1671, 1725], "each": [33, 34, 35, 37, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 150, 151, 152, 153, 156, 157, 162, 165, 166, 167, 168, 173, 174, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 303, 304, 305, 306, 309, 310, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 353, 354, 374, 376, 383, 387, 392, 393, 394, 400, 402, 403, 404, 406, 407, 431, 447, 450, 452, 455, 462, 465, 470, 511, 514, 552, 560, 563, 643, 667, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1000, 1003, 1056, 1059, 1192, 1193, 1198, 1201, 1202, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1337, 1340, 1341, 1343, 1354, 1357, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1393, 1396, 1398, 1401, 1403, 1407, 1423, 1427, 1459, 1470, 1473, 1490, 1493, 1500, 1503, 1505, 1508, 1515, 1518, 1525, 1529, 1535, 1539, 1544, 1550, 1557, 1567, 1568, 1571, 1594, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1657, 1663, 1666, 1668, 1671, 1714, 1720, 1721, 1725, 1727, 1730], "veri": [33, 34, 39, 40, 41, 42, 319, 321, 322, 323, 327, 328, 330, 331, 332, 333, 334, 335, 338, 340, 341, 342, 354, 1714, 1720, 1721, 1722, 1724, 1725, 1726, 1729, 1730, 1731], "similar": [33, 40, 41, 319, 320, 321, 322, 325, 329, 331, 332, 333, 334, 340, 354, 677, 938, 941, 1245, 1301, 1304, 1720, 1721, 1722, 1723, 1730], "convent": [33, 318, 327, 334, 353, 1311, 1354, 1357, 1657, 1668, 1671, 1730], "those": [33, 40, 41, 42, 144, 145, 165, 166, 297, 298, 319, 321, 329, 331, 333, 335, 470, 472, 473, 552, 627, 999, 1192, 1193, 1239, 1243, 1311, 1388, 1391, 1403, 1407, 1459, 1460, 1463, 1721], "introduc": [33, 319, 320, 321, 332, 340, 1459, 1500, 1503, 1620, 1621, 1625], "2006": 33, "layer": [33, 111, 139, 146, 147, 264, 292, 299, 300, 324, 331, 334, 335, 337, 338, 341, 388, 389, 390, 391, 392, 393, 394, 395, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282, 1284, 1287, 1289, 1290, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1562, 1563, 1566, 1714, 1722, 1724, 1728, 1731], "therefor": [33, 37, 40, 42, 60, 61, 177, 178, 316, 317, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 341, 354, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 627, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1159, 1163, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1721, 1724, 1730], "present": [33, 40, 42, 165, 166, 319, 321, 322, 327, 330, 337, 1721, 1722, 1731], "itself": [33, 41, 42, 316, 319, 330, 331, 341, 353, 354, 999, 1005, 1181, 1544, 1556, 1723, 1724, 1725, 1730], "cut": [33, 1730], "cloth": 33, "adher": [33, 34, 316, 321, 324, 327, 335, 337, 342, 1720, 1721, 1730], "semant": [33, 337, 342, 677, 938, 941, 1725], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 177, 178, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 677, 693, 696, 753, 756, 798, 801, 803, 806, 903, 906, 963, 966, 988, 992, 993, 997, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "up": [33, 34, 35, 36, 37, 38, 40, 42, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 400, 403, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 162, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "paint": [33, 337], "pictur": [33, 40, 337], "how": [33, 35, 36, 38, 39, 40, 41, 42, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 338, 339, 340, 341, 342, 353, 354, 1714, 1720, 1724], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1556, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 469, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 998, 999, 1006, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1125, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1232, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1540, 1544, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1615, 1619, 1620, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 132, 133, 162, 285, 286, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 354, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1056, 1059, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1713, 1714, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 353, 354, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "With": [34, 35, 41, 44, 47, 48, 54, 55, 56, 57, 60, 61, 116, 117, 132, 133, 134, 135, 140, 141, 150, 151, 156, 157, 162, 167, 168, 171, 172, 173, 174, 177, 178, 255, 256, 263, 264, 269, 270, 279, 280, 281, 282, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 323, 329, 331, 333, 335, 337, 374, 381, 383, 387, 394, 396, 397, 400, 401, 404, 407, 410, 411, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 482, 484, 499, 500, 503, 511, 514, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 576, 583, 585, 587, 588, 591, 599, 602, 616, 619, 628, 631, 633, 635, 643, 649, 652, 661, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1134, 1137, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1192, 1193, 1194, 1197, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1393, 1396, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1727], "central": [34, 40, 335, 1730], "goal": [34, 40, 1724, 1730], "being": [34, 35, 41, 42, 44, 47, 48, 165, 166, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 332, 333, 335, 337, 340, 353, 354, 387, 394, 470, 472, 473, 999, 1015, 1078, 1144, 1714, 1720, 1722, 1723, 1724, 1725, 1730, 1731], "would": [34, 36, 38, 40, 41, 42, 144, 145, 175, 176, 297, 298, 315, 316, 317, 318, 319, 321, 323, 324, 326, 327, 329, 330, 331, 332, 333, 335, 336, 337, 339, 341, 342, 354, 431, 442, 445, 457, 460, 643, 668, 672, 1459, 1495, 1498, 1714, 1724, 1730], "entir": [34, 35, 40, 41, 42, 156, 157, 158, 159, 165, 166, 285, 286, 309, 310, 311, 312, 316, 317, 319, 321, 323, 330, 331, 333, 335, 337, 340, 341, 342, 354, 387, 394, 643, 667, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1730, 1731], "forgiven": 34, "rais": [34, 42, 102, 103, 132, 133, 144, 145, 148, 149, 158, 159, 165, 166, 255, 256, 285, 286, 297, 298, 301, 302, 311, 312, 316, 318, 325, 326, 330, 331, 337, 339, 374, 376, 552, 565, 568, 677, 788, 791, 923, 926, 999, 1010, 1013, 1070, 1097, 1100, 1141, 1154, 1157, 1159, 1163, 1181, 1193, 1226, 1232, 1244, 1311, 1354, 1357, 1364, 1366, 1428, 1432, 1459, 1475, 1478, 1495, 1498, 1515, 1518, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1610, 1613, 1657, 1672, 1675, 1680, 1683, 1702, 1703, 1706, 1708, 1711], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 132, 133, 134, 135, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 285, 286, 287, 288, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 353, 354, 370, 371, 374, 381, 383, 384, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 407, 408, 409, 410, 420, 421, 431, 447, 450, 452, 455, 462, 465, 467, 469, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 588, 591, 599, 602, 606, 609, 616, 619, 627, 628, 631, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 998, 999, 1016, 1019, 1021, 1024, 1049, 1052, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1097, 1100, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1134, 1137, 1159, 1163, 1171, 1175, 1176, 1180, 1181, 1192, 1193, 1208, 1211, 1226, 1227, 1231, 1234, 1238, 1239, 1243, 1244, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1544, 1550, 1562, 1563, 1566, 1567, 1573, 1576, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1720, 1722, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "eyebrow": 34, "somehow": 34, "pytorch": [34, 35, 39, 40, 134, 135, 320, 321, 322, 325, 327, 328, 330, 331, 332, 334, 335, 337, 342, 354, 677, 943, 946, 1713, 1714, 1725, 1727, 1728, 1730, 1731], "other": [34, 37, 40, 41, 42, 44, 47, 48, 56, 57, 132, 133, 156, 157, 162, 165, 166, 167, 168, 173, 174, 177, 178, 285, 286, 309, 310, 316, 317, 319, 320, 323, 324, 326, 328, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 352, 353, 354, 467, 468, 470, 472, 473, 521, 524, 552, 627, 677, 793, 796, 858, 861, 999, 1000, 1003, 1005, 1567, 1583, 1586, 1657, 1688, 1691, 1697, 1701, 1713, 1714, 1720, 1722, 1723, 1724, 1730, 1731], "strong": [34, 354, 1724], "industri": [34, 1724, 1726], "back": [34, 41, 42, 317, 321, 329, 336, 354, 999, 1139, 1182, 1722, 1726], "momentum": 34, "won": [34, 35, 41, 42, 319, 333, 342], "ad": [34, 39, 40, 41, 42, 144, 145, 297, 298, 313, 314, 317, 319, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 354, 999, 1149, 1152, 1154, 1157, 1311, 1337, 1340, 1341, 1343, 1459, 1475, 1478, 1723, 1724], "just": [34, 35, 41, 42, 316, 318, 321, 323, 324, 328, 329, 330, 331, 332, 333, 337, 339, 340, 354, 370, 371, 1657, 1668, 1671, 1724, 1725, 1730], "problem": [34, 42, 317, 331, 339, 1720, 1726, 1730], "even": [34, 35, 41, 42, 110, 111, 263, 264, 316, 321, 322, 324, 327, 328, 331, 335, 339, 340, 341, 342, 354, 387, 394, 677, 923, 926, 943, 946, 1730], "wors": 34, "rather": [34, 42, 132, 133, 134, 135, 165, 166, 285, 286, 287, 288, 316, 319, 321, 324, 330, 331, 332, 333, 334, 342, 354, 470, 472, 473, 643, 667, 999, 1103, 1106, 1109, 1112, 1119, 1122, 1193, 1208, 1211, 1720, 1723, 1724], "funni": 34, "comic": 34, "strip": 34, "easi": [34, 41, 42, 319, 328, 332, 335, 1722, 1724, 1730, 1731], "feasibl": [34, 40], "space": [34, 102, 103, 132, 133, 177, 178, 285, 286, 333, 335, 374, 384, 470, 472, 473, 505, 506, 508, 509, 999, 1049, 1052, 1193, 1226, 1232, 1244], "case": [34, 40, 41, 42, 49, 52, 53, 120, 121, 132, 133, 144, 145, 156, 157, 162, 165, 166, 167, 168, 285, 286, 297, 298, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 354, 374, 377, 383, 416, 417, 470, 511, 514, 643, 662, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 748, 751, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 903, 906, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 999, 1097, 1100, 1134, 1137, 1459, 1495, 1498, 1544, 1547, 1553, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701, 1723, 1727], "unlik": [34, 319, 323, 330, 1729, 1731], "charger": 34, "charact": [34, 326], "encod": [34, 132, 133, 285, 286, 340, 999, 1049, 1052], "instant": [34, 1714], "much": [34, 40, 41, 42, 317, 319, 321, 330, 331, 332, 334, 337, 339, 340, 1722, 1724, 1730, 1731], "doe": [34, 38, 40, 42, 144, 145, 165, 166, 297, 298, 315, 318, 321, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 354, 370, 371, 677, 748, 751, 999, 1097, 1100, 1459, 1505, 1508, 1713, 1720, 1724, 1725, 1731], "mandat": [34, 321, 330, 333, 334], "adopt": [34, 42, 317, 327, 335, 1723, 1724, 1729], "continu": [34, 35, 39, 40, 41, 315, 316, 326, 333, 354, 1724], "own": [34, 35, 41, 316, 321, 324, 325, 331, 333, 334, 337, 354, 1713, 1720, 1723, 1724, 1729, 1730], "signatur": [34, 60, 61, 177, 178, 321, 322, 323, 324, 327, 330, 333, 334, 335, 387, 394, 400, 401, 552, 570, 573, 677, 818, 821, 1657, 1688, 1691, 1721, 1730], "replac": [34, 38, 42, 60, 61, 132, 133, 144, 145, 148, 149, 165, 166, 285, 286, 297, 298, 301, 302, 319, 321, 322, 323, 329, 331, 333, 339, 342, 354, 999, 1129, 1132, 1134, 1137, 1459, 1460, 1463, 1567, 1568, 1571, 1731], "your": [34, 35, 36, 37, 38, 39, 40, 41, 316, 324, 334, 335, 340, 341, 354, 1714, 1724], "10": [34, 38, 41, 60, 61, 102, 103, 110, 111, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 148, 149, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 319, 321, 323, 332, 333, 337, 339, 340, 374, 379, 381, 382, 387, 392, 393, 400, 401, 420, 421, 427, 428, 470, 508, 509, 677, 688, 691, 723, 726, 728, 731, 743, 746, 763, 766, 793, 796, 813, 816, 843, 846, 853, 856, 858, 861, 928, 931, 958, 961, 963, 966, 999, 1015, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1069, 1078, 1087, 1090, 1092, 1095, 1134, 1137, 1144, 1149, 1152, 1185, 1193, 1214, 1217, 1245, 1247, 1250, 1311, 1322, 1325, 1332, 1335, 1349, 1352, 1359, 1362, 1378, 1381, 1408, 1412, 1413, 1417, 1459, 1480, 1483, 1505, 1508, 1515, 1518, 1530, 1534, 1544, 1550, 1552, 1555, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1594, 1610, 1613, 1620, 1621, 1625, 1641, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1680, 1683, 1692, 1696, 1697, 1701, 1729], "100": [34, 35, 285, 286, 333, 340, 341, 342, 354, 370, 371, 677, 743, 746, 963, 966, 999, 1061, 1064, 1092, 1095, 1134, 1137, 1311, 1349, 1352, 1544, 1550, 1714], "despit": [34, 319, 321, 322, 335, 337, 1721, 1724], "distinct": [34, 41, 319, 324, 330, 331, 336, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1724], "still": [34, 40, 42, 165, 166, 321, 324, 330, 331, 333, 335, 341, 354, 1311, 1403, 1407, 1714, 1721, 1724, 1730], "believ": [34, 42], "share": [34, 165, 166, 318, 319, 323, 328, 332, 333, 335, 337, 552, 637, 1722, 1723, 1730], "bring": [34, 316, 333, 337, 338, 1713], "benefit": [34, 35, 41, 317, 319, 330, 335, 339, 340, 354, 1722, 1726, 1729], "unrel": [34, 42], "what": [34, 35, 37, 42, 315, 319, 323, 324, 327, 329, 331, 333, 336, 337, 339, 340, 341, 342, 353, 354, 1714, 1720, 1725, 1726, 1729], "again": [34, 35, 42, 318, 319, 323, 330, 331, 333, 334, 335, 340, 342, 354, 1729, 1730], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 340], "most": [34, 39, 40, 41, 165, 166, 171, 172, 317, 319, 321, 322, 326, 327, 328, 330, 331, 333, 334, 335, 337, 339, 340, 341, 354, 470, 521, 524, 1311, 1337, 1340, 1724, 1725, 1727, 1728, 1730, 1731], "technologi": [34, 1722, 1726], "sector": [34, 60, 61, 177, 178, 677, 688, 691, 703, 706, 718, 721], "full": [34, 35, 42, 140, 141, 321, 324, 327, 331, 333, 335, 337, 354, 470, 552, 588, 591, 677, 813, 816, 843, 846, 999, 1140, 1183, 1245, 1271, 1274, 1311, 1368, 1371, 1388, 1391, 1398, 1401, 1403, 1407, 1722, 1724, 1730], "success": 34, "reason": [34, 40, 42, 316, 317, 319, 321, 323, 328, 330, 331, 334, 335, 337, 339, 677, 938, 941, 1730], "build": [34, 36, 37, 41, 320, 321, 328, 336, 338, 341, 342, 354, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1713, 1714, 1722, 1724, 1726, 1729, 1730, 1731], "custom": [34, 320, 325, 332, 333, 341, 1724, 1728, 1729, 1730], "comput": [34, 35, 41, 45, 46, 60, 61, 102, 103, 116, 117, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 156, 157, 163, 164, 165, 166, 177, 178, 255, 256, 265, 266, 269, 270, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 309, 310, 319, 321, 328, 331, 333, 335, 337, 340, 354, 374, 377, 378, 381, 382, 387, 388, 390, 391, 392, 393, 396, 398, 400, 404, 406, 411, 427, 428, 643, 667, 677, 693, 696, 723, 726, 738, 741, 748, 751, 778, 781, 783, 786, 808, 811, 813, 816, 838, 841, 843, 846, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 938, 941, 999, 1015, 1016, 1019, 1021, 1024, 1193, 1194, 1197, 1202, 1203, 1213, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1291, 1294, 1301, 1304, 1311, 1312, 1315, 1317, 1320, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1428, 1432, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1475, 1478, 1544, 1550, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1713, 1720, 1722, 1724, 1725, 1727, 1728, 1730], "thank": [34, 340], "interoper": [34, 1721, 1722, 1724, 1727], "compon": [34, 337, 1193, 1226, 1232, 1244, 1720, 1725, 1727], "bio": [34, 41], "hardwar": [34, 41, 44, 47, 48, 335, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730], "initi": [34, 42, 162, 165, 166, 167, 168, 318, 321, 322, 333, 337, 1245, 1296, 1299, 1724, 1730, 1731], "pcie": 34, "interfac": [34, 339, 342, 354, 1713, 1720, 1721, 1722, 1723, 1724, 1728, 1731], "motherboard": 34, "raid": 34, "storag": [34, 340], "virtual": [34, 37, 38, 42, 1727, 1728], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1720, 1722], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 134, 135, 140, 141, 165, 166, 293, 294, 328, 333, 335, 341, 342, 387, 389, 394, 400, 405, 412, 470, 475, 477, 516, 519, 534, 538, 539, 543, 999, 1005, 1164, 1170, 1245, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1544, 1546, 1556, 1724, 1725, 1730], "factor": [34, 134, 135, 138, 139, 140, 141, 263, 264, 287, 288, 291, 292, 293, 294, 325, 643, 665, 666, 667, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1218, 1221, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1312, 1315], "sata": 34, "connect": [34, 41, 341, 342, 1722], "host": [34, 354, 1729], "bu": 34, "adapt": [34, 287, 288, 1193, 1218, 1221], "devic": [34, 42, 44, 47, 48, 54, 55, 59, 101, 148, 149, 165, 166, 171, 172, 176, 249, 250, 254, 285, 286, 301, 302, 315, 318, 321, 325, 328, 329, 332, 334, 335, 337, 342, 354, 370, 371, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 644, 645, 646, 647, 648, 649, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 674, 675, 676, 999, 1006, 1054, 1055, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1713, 1723, 1724, 1726, 1727, 1728, 1729], "html": [34, 38, 60, 61, 177, 178, 324, 370, 371, 400, 401, 552, 570, 573, 677, 818, 821, 1657, 1688, 1691], "enabl": [34, 41, 42, 162, 165, 166, 167, 168, 317, 319, 328, 329, 330, 331, 333, 335, 336, 338, 340, 342, 354, 1193, 1226, 1244, 1713, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731], "anyon": [34, 36, 42, 354, 1730], "websit": [34, 316], "tcp": 34, "ip": 34, "node": [34, 165, 166, 285, 286, 319, 331, 1544, 1545, 1554, 1555, 1725], "commun": [34, 36, 40, 41, 42, 354, 1714, 1723, 1724, 1726], "network": [34, 319, 328, 337, 341, 353, 1245, 1291, 1294, 1714, 1720, 1722, 1723, 1724, 1728, 1730, 1731], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 144, 145, 297, 298, 319, 320, 321, 323, 324, 330, 331, 332, 333, 335, 337, 340, 353, 354, 999, 1125, 1459, 1495, 1498, 1657, 1672, 1675, 1680, 1683, 1722, 1724, 1730], "send": [34, 1729], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 140, 141, 293, 294, 319, 329, 330, 331, 332, 333, 334, 335, 341, 354, 1311, 1312, 1315, 1403, 1407, 1544, 1552], "email": 34, "ieee": [34, 469, 552, 588, 591, 677, 693, 696, 793, 796, 858, 861, 903, 906, 938, 941, 963, 966], "754": [34, 469, 552, 588, 591, 677, 693, 696, 793, 796, 858, 861, 903, 906, 938, 941, 963, 966], "allow": [34, 37, 40, 42, 320, 325, 326, 329, 331, 332, 333, 337, 339, 354, 470, 505, 506, 508, 509, 999, 1125, 1641, 1647, 1650, 1713, 1722, 1724, 1728, 1729], "calcul": [34, 40, 60, 61, 142, 143, 156, 157, 162, 165, 166, 167, 168, 177, 178, 295, 296, 309, 310, 324, 332, 337, 374, 375, 383, 387, 394, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 773, 776, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 893, 896, 898, 901, 903, 906, 923, 926, 953, 956, 958, 961, 963, 966, 973, 977, 978, 982, 983, 987, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701], "live": [34, 35, 321, 1720, 1722], "depend": [34, 37, 40, 41, 42, 56, 57, 132, 133, 154, 155, 173, 174, 307, 308, 309, 310, 321, 324, 329, 330, 331, 333, 335, 337, 354, 374, 383, 552, 555, 558, 677, 678, 681, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 923, 926, 953, 956, 958, 961, 978, 982, 983, 987, 999, 1159, 1163, 1311, 1337, 1340, 1388, 1391, 1398, 1401, 1403, 1407, 1594, 1615, 1619, 1641, 1642, 1645, 1652, 1655, 1722, 1724, 1725], "did": [34, 40, 342, 1730], "aris": [34, 321, 354], "until": [34, 42, 326, 334, 337, 354, 1714, 1731], "substanti": [34, 42, 317, 321, 333, 1724], "innov": 34, "growth": [34, 1727], "usag": [34, 321, 337, 354, 643, 667, 1727], "relev": [34, 40, 41, 42, 319, 320, 321, 323, 332, 340, 1722, 1729, 1730], "area": [34, 60, 61, 177, 178, 330, 352, 677, 688, 691, 703, 706, 718, 721, 1714, 1720], "necess": 34, "parti": [34, 354, 1723, 1724, 1730], "could": [34, 35, 40, 41, 42, 316, 321, 323, 329, 330, 331, 332, 333, 337, 339, 340, 341, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1724, 1729, 1730], "easili": [34, 41, 320, 331, 335, 340, 341, 342, 354, 1714, 1724, 1730, 1731], "engag": [34, 36, 42], "regard": [34, 39, 319, 331, 332, 335], "effect": [34, 40, 134, 135, 156, 157, 287, 288, 309, 310, 317, 319, 324, 327, 330, 354, 470, 511, 514, 1193, 1194, 1197, 1222, 1225, 1657, 1688, 1691, 1697, 1701], "2015": [34, 1724], "sinc": [34, 41, 42, 102, 103, 255, 256, 316, 319, 330, 331, 333, 354, 374, 1724, 1730], "alongsid": 34, "machin": [34, 41, 140, 141, 293, 294, 316, 328, 353, 552, 588, 591, 599, 602, 1311, 1368, 1371, 1383, 1386, 1713, 1722, 1724, 1726, 1727, 1728, 1729, 1730], "frame": [34, 353, 1724], "less": [34, 42, 44, 47, 48, 60, 61, 140, 141, 148, 149, 156, 157, 177, 178, 293, 294, 301, 302, 319, 321, 323, 325, 327, 330, 331, 335, 336, 337, 677, 683, 686, 688, 691, 698, 701, 713, 716, 753, 756, 848, 851, 853, 856, 858, 861, 863, 866, 923, 926, 938, 941, 948, 951, 963, 966, 1311, 1364, 1366, 1368, 1371, 1383, 1386, 1433, 1437, 1567, 1583, 1586, 1657, 1688, 1691, 1697, 1701, 1724, 1726], "matur": [34, 354, 1724], "state": [34, 41, 321, 324, 325, 327, 331, 333, 336, 337, 338, 340, 353, 552, 638, 641, 677, 903, 906, 999, 1067, 1068, 1148, 1182, 1184, 1185, 1186, 1245, 1296, 1299, 1714, 1730, 1731], "than": [34, 37, 42, 44, 47, 48, 60, 61, 102, 103, 132, 133, 134, 135, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 162, 165, 166, 167, 168, 177, 178, 285, 286, 287, 288, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 309, 310, 316, 319, 320, 321, 323, 325, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 354, 374, 384, 400, 402, 403, 470, 472, 473, 552, 588, 591, 643, 667, 677, 683, 686, 688, 691, 698, 701, 713, 716, 733, 736, 743, 746, 753, 756, 798, 801, 803, 806, 848, 851, 853, 856, 858, 861, 863, 866, 893, 896, 923, 926, 938, 941, 948, 951, 963, 966, 988, 992, 999, 1103, 1106, 1109, 1112, 1119, 1122, 1193, 1208, 1211, 1311, 1317, 1320, 1354, 1357, 1364, 1366, 1368, 1371, 1383, 1386, 1433, 1437, 1459, 1460, 1463, 1480, 1483, 1510, 1513, 1567, 1583, 1586, 1594, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1721, 1722, 1723, 1724, 1730, 1731], "preced": [34, 341], "mention": [34, 40, 41, 42, 323, 327, 328, 330, 335, 1724], "aros": 34, "70": [34, 285, 286, 1311, 1378, 1381, 1657, 1668, 1671], "80": [34, 1311, 1378, 1381, 1544, 1555, 1657, 1668, 1671], "90": [34, 60, 61, 116, 117, 177, 178, 269, 270, 400, 410, 677, 748, 751, 768, 771, 928, 931, 943, 946, 1311, 1378, 1381, 1657, 1668, 1671], "effort": [34, 36, 354, 1720, 1724, 1730], "stage": [34, 36, 38, 42, 315, 326, 333, 1714, 1724], "complet": [34, 40, 42, 165, 166, 316, 317, 319, 320, 323, 331, 332, 333, 339, 340, 1311, 1388, 1391, 1722], "natur": [34, 140, 141, 293, 294, 317, 323, 332, 353, 677, 788, 791, 848, 851, 858, 861, 943, 946, 1311, 1393, 1396], "like": [34, 38, 40, 41, 42, 102, 103, 134, 135, 255, 256, 279, 280, 287, 288, 315, 321, 322, 323, 324, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 353, 354, 374, 375, 376, 379, 380, 387, 394, 420, 421, 552, 575, 627, 1193, 1208, 1211, 1567, 1583, 1586, 1714, 1724, 1729], "certainli": [34, 1730], "mission": [34, 1714, 1726], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 120, 121, 148, 149, 165, 166, 171, 172, 273, 274, 285, 286, 301, 302, 321, 322, 325, 329, 330, 331, 332, 333, 335, 337, 338, 341, 352, 353, 370, 371, 387, 394, 416, 417, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 544, 546, 547, 551, 999, 1165, 1169, 1192, 1193, 1233, 1234, 1238, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1713, 1714, 1724, 1725, 1730], "At": [34, 40, 41, 316, 331, 333, 334, 1724], "process": [34, 35, 36, 38, 41, 42, 319, 328, 331, 332, 333, 335, 337, 342, 643, 662, 676, 1722, 1723, 1724, 1727, 1728, 1730, 1731], "ourselv": [34, 1730], "lead": [34, 35, 162, 165, 166, 167, 168, 323, 354, 1311, 1388, 1391, 1403, 1407], "quansight": [34, 1730], "compani": [34, 1720], "made": [34, 37, 40, 42, 316, 320, 330, 334, 337, 339, 396, 398, 1724], "organ": [34, 317, 319, 328, 331, 334, 1713], "panda": 34, "scipi": [34, 1726, 1731], "conda": [34, 38, 41, 1726], "dask": [34, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "apach": [34, 1726, 1730], "mxnet": [34, 1731], "onnx": [34, 1722, 1730], "scikit": 34, "jupyt": [34, 1726], "aw": 34, "cupi": [34, 1724, 1731], "net": [34, 35, 337, 342], "sympi": 34, "rai": [34, 677, 713, 716], "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 102, 103, 132, 133, 150, 151, 156, 157, 158, 159, 165, 166, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 281, 282, 285, 286, 293, 294, 303, 304, 309, 310, 311, 312, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 353, 354, 370, 371, 374, 381, 470, 472, 473, 475, 477, 505, 506, 516, 519, 999, 1081, 1084, 1187, 1191, 1311, 1433, 1437, 1544, 1545, 1567, 1583, 1586, 1594, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1721, 1722, 1724, 1726, 1729, 1730, 1731], "member": [34, 40, 42, 331], "googl": [34, 1714], "octoml": [34, 1730], "einop": [34, 132, 133, 285, 286, 999, 1031, 1034, 1036, 1039, 1041, 1044], "further": [34, 35, 38, 42, 316, 317, 323, 325, 331, 333, 336, 337, 340, 341, 1714, 1729, 1730], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1724, 1729, 1731], "d": [34, 35, 36, 41, 116, 117, 138, 139, 140, 141, 269, 270, 291, 292, 293, 294, 315, 319, 333, 340, 370, 371, 387, 392, 393, 396, 397, 400, 402, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1327, 1330, 1332, 1335, 1359, 1362, 1378, 1381, 1423, 1427, 1544, 1547, 1551, 1552, 1560, 1561, 1714, 1720], "shaw": 34, "co": [34, 39, 60, 61, 132, 133, 177, 178, 321, 337, 353, 677, 999, 1049, 1052, 1714], "intel": [34, 1722, 1729], "togeth": [34, 165, 166, 317, 319, 326, 331, 334, 335, 341, 342, 354, 1722, 1724, 1725, 1730], "major": [34, 321, 322, 333, 354, 1594, 1610, 1613, 1721, 1724], "involv": [34, 36, 38, 56, 57, 173, 174, 315, 321, 323, 335, 342, 552, 628, 631, 677, 693, 696, 903, 906, 1724, 1730], "anoth": [34, 40, 41, 42, 319, 321, 328, 329, 331, 332, 333, 335, 337, 339, 342, 470, 494, 497, 552, 560, 563, 570, 573, 1713, 1724, 1730], "promis": 34, "sign": [34, 41, 60, 61, 140, 141, 177, 178, 293, 294, 337, 342, 470, 472, 473, 677, 678, 681, 693, 696, 713, 716, 743, 746, 903, 906, 938, 941, 1311, 1393, 1396, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "pursuit": 34, "unif": [34, 36, 339, 1720, 1730], "clearli": [34, 40, 42, 323, 332, 333, 1728], "lot": [34, 35, 321, 329, 333, 354, 1723], "thought": [34, 41, 42, 327, 1722], "care": [34, 42, 333, 335, 342], "attent": [34, 42, 317, 1245, 1301, 1304, 1306, 1309], "gone": [34, 336], "simplifi": [34, 325, 331, 337, 338, 341, 1720, 1722, 1723, 1724, 1727, 1730, 1731], "compat": [34, 44, 47, 48, 60, 61, 140, 141, 144, 145, 150, 151, 156, 157, 158, 159, 162, 167, 168, 177, 178, 293, 294, 297, 298, 303, 304, 309, 310, 311, 312, 318, 327, 331, 332, 334, 337, 354, 552, 565, 568, 677, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977, 993, 997, 1311, 1368, 1371, 1383, 1386, 1398, 1401, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1495, 1498, 1594, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714], "excit": [34, 36, 315, 1714], "complianc": 34, "hope": [34, 354, 1730], "due": [34, 37, 41, 316, 330, 331, 677, 903, 906, 943, 946, 1724], "suit": [34, 41, 315, 316, 320, 333, 340, 353, 1713, 1724, 1730], "some": [34, 35, 40, 41, 42, 165, 166, 287, 288, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 353, 354, 643, 644, 677, 793, 796, 858, 861, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1239, 1243, 1245, 1284, 1287, 1544, 1555, 1713, 1714, 1720, 1721, 1723, 1724, 1725, 1730, 1731], "motiv": [34, 339], "great": [34, 35, 42, 333, 337, 339, 1730], "convinc": 34, "celebr": 34, "encourag": [34, 353, 354], "foundat": [34, 1727], "mai": [35, 39, 40, 41, 42, 60, 61, 154, 155, 175, 176, 177, 178, 307, 308, 316, 319, 321, 330, 331, 333, 338, 339, 341, 470, 472, 473, 494, 497, 643, 668, 672, 677, 778, 781, 813, 816, 843, 846, 878, 881, 883, 886, 999, 1028, 1030, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1731], "ask": [35, 40, 41, 323, 337, 339, 354], "perfectli": 35, "happi": [35, 41, 354], "abund": 35, "better": [35, 37, 315, 331, 332, 334, 335, 336, 339, 340, 341, 1727], "ll": [35, 36, 41, 42, 323, 330, 340], "give": [35, 37, 41, 42, 315, 318, 323, 324, 327, 552, 627, 1459, 1495, 1498, 1724, 1728], "two": [35, 40, 41, 44, 47, 48, 54, 55, 116, 117, 140, 141, 162, 167, 168, 269, 270, 293, 294, 316, 317, 321, 323, 324, 331, 333, 335, 336, 340, 342, 370, 371, 374, 377, 378, 387, 394, 396, 397, 400, 410, 411, 470, 472, 473, 491, 492, 511, 514, 534, 538, 539, 543, 552, 626, 637, 677, 743, 746, 943, 946, 999, 1007, 1009, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1428, 1432, 1459, 1520, 1524, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1721, 1729], "streamlin": [35, 1727], "workflow": [35, 40, 42, 318, 320, 321, 331, 340, 352, 1713, 1714, 1723, 1730, 1731], "save": [35, 37, 165, 166, 326, 333, 354, 643, 644, 999, 1080, 1146, 1723], "week": [35, 42, 1714], "let": [35, 37, 132, 133, 156, 157, 285, 286, 319, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 999, 1056, 1059, 1657, 1676, 1679, 1688, 1691, 1692, 1696, 1697, 1701, 1714, 1731], "sai": [35, 41, 329, 339], "deepmind": 35, "releas": [35, 40, 41, 42, 321, 331, 334, 335, 354, 1714, 1724, 1730], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 156, 157, 309, 310, 330, 331, 340, 1657, 1688, 1691, 1697, 1701, 1724], "perceiverio": 35, "happen": [35, 41, 42, 333, 340, 374, 384], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 315, 319, 326, 337, 340, 999, 1086, 1102, 1544, 1547, 1551, 1552, 1560, 1561, 1720], "g": [35, 36, 40, 41, 120, 121, 148, 149, 301, 302, 315, 316, 319, 333, 337, 354, 416, 417, 552, 554, 628, 631, 643, 645, 1544, 1547, 1551, 1560, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1680, 1683, 1684, 1687, 1692, 1696, 1713, 1720], "inevit": [35, 1725], "deviat": [35, 146, 147, 148, 149, 299, 300, 301, 302, 316, 1562, 1563, 1566, 1567, 1578, 1581, 1657, 1688, 1691], "often": [35, 39, 316, 325, 326, 327, 328, 331, 333, 354, 1725, 1728, 1731], "erron": 35, "train": [35, 134, 135, 287, 288, 319, 322, 328, 340, 341, 342, 352, 353, 354, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1713, 1714, 1722, 1723, 1728, 1730, 1731], "poor": 35, "converg": 35, "perform": [35, 134, 135, 156, 157, 158, 159, 285, 286, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 354, 431, 442, 445, 457, 460, 470, 505, 506, 508, 509, 677, 993, 997, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1087, 1090, 1092, 1095, 1097, 1100, 1139, 1140, 1245, 1284, 1287, 1296, 1299, 1311, 1403, 1407, 1540, 1541, 1542, 1543, 1544, 1551, 1552, 1657, 1658, 1661, 1663, 1666, 1702, 1703, 1706, 1708, 1711, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "issu": [35, 36, 39, 40, 316, 318, 321, 323, 325, 331, 333, 337, 341, 354], "etc": [35, 40, 41, 42, 54, 55, 148, 149, 160, 161, 285, 286, 301, 302, 313, 314, 316, 317, 319, 320, 321, 323, 325, 327, 331, 332, 333, 334, 337, 339, 340, 354, 470, 505, 506, 508, 509, 521, 524, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1713, 1722, 1724, 1730], "publish": [35, 354], "manag": [35, 36, 330, 354, 1726, 1728], "get": [35, 36, 39, 40, 41, 60, 61, 165, 166, 315, 320, 321, 322, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 552, 583, 585, 587, 588, 591, 599, 602, 643, 648, 649, 652, 654, 657, 662, 666, 673, 676, 677, 903, 906, 999, 1006, 1066, 1067, 1068, 1070, 1071, 1072, 1078, 1080, 1128, 1148, 1713, 1724, 1730], "work": [35, 39, 40, 41, 42, 315, 316, 319, 321, 322, 323, 325, 331, 332, 333, 334, 336, 337, 339, 341, 342, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "repositori": [35, 37, 38, 41, 42, 315, 316, 320, 326], "pull": [35, 36, 37, 38, 40, 41, 316, 323, 334, 335, 354], "request": [35, 36, 40, 323, 334, 335, 643, 659], "confus": [35, 321, 325, 330, 335, 1713], "do": [35, 40, 41, 42, 132, 133, 134, 135, 165, 166, 287, 288, 316, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 334, 335, 337, 339, 340, 341, 342, 354, 677, 938, 941, 999, 1097, 1100, 1193, 1208, 1211, 1239, 1243, 1544, 1545, 1554, 1555, 1556, 1713, 1725, 1730, 1731], "don": [35, 40, 41, 42, 160, 161, 313, 314, 321, 333, 341, 354], "expect": [35, 42, 321, 325, 333, 354, 552, 627, 999, 1006, 1714], "codebas": [35, 36, 315, 321, 330, 333, 334, 336, 643, 665, 666, 1714], "total": [35, 36, 42, 156, 157, 162, 165, 166, 167, 168, 309, 310, 321, 322, 323, 333, 335, 340, 341, 354, 643, 673, 1594, 1610, 1613, 1657, 1688, 1691, 1697, 1701], "hour": [35, 320], "spent": 35, "spin": 35, "off": [35, 41, 336, 1311, 1332, 1335, 1418, 1422, 1730], "test": [35, 39, 40, 60, 61, 158, 159, 177, 178, 311, 312, 315, 321, 323, 325, 326, 329, 331, 334, 354, 374, 380, 552, 606, 609, 616, 619, 677, 818, 821, 823, 826, 828, 831, 833, 836, 1702, 1703, 1706, 1708, 1711, 1724], "discuss": [35, 41, 42, 321, 322, 330, 331, 333, 335, 338, 339, 340, 354, 1714, 1720, 1725], "error": [35, 39, 41, 42, 60, 61, 165, 166, 177, 178, 317, 318, 320, 321, 322, 323, 325, 326, 327, 331, 333, 334, 339, 354, 431, 432, 435, 677, 783, 786, 1311, 1408, 1412, 1657, 1672, 1675, 1680, 1683, 1724], "iter": [35, 49, 50, 51, 52, 53, 132, 133, 160, 161, 162, 165, 166, 167, 168, 285, 286, 313, 314, 319, 337, 340, 387, 394, 400, 408, 409, 467, 468, 643, 667, 999, 1000, 1003, 1125, 1459, 1470, 1473, 1490, 1493, 1525, 1529, 1535, 1539, 1544, 1545, 1546, 1547, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1561], "address": [35, 40, 42, 316, 317, 337, 999, 1171, 1175, 1720, 1722, 1724, 1730], "sake": 35, "singl": [35, 40, 41, 42, 102, 103, 148, 149, 165, 166, 177, 178, 301, 302, 316, 319, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 354, 374, 384, 999, 1176, 1180, 1187, 1191, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1620, 1621, 1625], "multipl": [35, 42, 102, 103, 146, 147, 156, 157, 158, 159, 165, 166, 177, 178, 255, 256, 263, 264, 285, 286, 287, 288, 293, 294, 297, 298, 299, 300, 309, 310, 311, 312, 318, 319, 323, 325, 328, 330, 335, 337, 354, 374, 381, 677, 743, 746, 868, 871, 893, 896, 898, 901, 903, 906, 999, 1000, 1003, 1125, 1193, 1194, 1197, 1204, 1207, 1208, 1211, 1214, 1217, 1222, 1225, 1227, 1231, 1245, 1257, 1260, 1311, 1312, 1315, 1349, 1352, 1359, 1362, 1459, 1460, 1463, 1475, 1478, 1500, 1503, 1505, 1508, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1722, 1723, 1724, 1731], "line": [35, 41, 316, 317, 323, 326, 329, 333, 335, 338, 339, 340, 341, 352, 1714, 1727], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 169, 170, 177, 178, 317, 329, 333, 337, 354, 355, 365, 470, 475, 477, 516, 519, 552, 553, 554, 643, 645, 646, 647, 648, 662, 673, 676, 677, 768, 771, 928, 931, 999, 1139, 1164, 1170, 1171, 1175, 1176, 1180, 1182, 1311, 1438, 1442, 1544, 1546, 1556, 1557, 1713, 1722, 1723, 1730], "directli": [35, 42, 316, 317, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 334, 335, 337, 339, 341, 342, 353, 354, 1544, 1556, 1728, 1729, 1730], "graph": [35, 134, 135, 319, 328, 331, 335, 338, 354, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1713, 1720, 1724, 1727], "guarante": [35, 317, 354, 1620, 1621, 1625, 1631, 1635], "turn": [35, 41, 319, 323, 331, 333], "4": [35, 38, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 152, 153, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 323, 333, 337, 339, 340, 341, 342, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 387, 389, 392, 393, 394, 396, 397, 398, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 457, 460, 470, 482, 484, 500, 503, 511, 514, 529, 532, 547, 551, 552, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 611, 614, 616, 619, 628, 631, 643, 649, 652, 654, 661, 665, 677, 678, 681, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 723, 726, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 823, 826, 828, 831, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1081, 1084, 1087, 1090, 1134, 1137, 1149, 1152, 1165, 1169, 1181, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1247, 1250, 1257, 1260, 1262, 1264, 1266, 1269, 1279, 1282, 1291, 1294, 1296, 1299, 1306, 1309, 1311, 1312, 1315, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1443, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1724, 1730, 1731], "step": [35, 37, 38, 40, 41, 42, 116, 117, 134, 135, 171, 172, 269, 270, 287, 288, 317, 318, 319, 321, 322, 323, 331, 333, 337, 340, 341, 342, 353, 400, 404, 470, 472, 473, 505, 506, 508, 509, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1540, 1541, 1542, 1543, 1714, 1724], "take": [35, 36, 40, 41, 42, 156, 157, 263, 264, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 335, 337, 339, 341, 342, 354, 470, 521, 524, 677, 748, 751, 1714, 1721, 1722, 1730], "few": [35, 39, 40, 42, 319, 321, 322, 327, 328, 330, 333, 335, 337, 338, 339, 340, 341, 352, 1714, 1724, 1726], "second": [35, 41, 44, 47, 48, 60, 61, 102, 103, 134, 135, 140, 141, 152, 153, 162, 167, 168, 177, 178, 255, 256, 265, 266, 287, 288, 293, 294, 305, 306, 316, 321, 323, 330, 331, 333, 339, 370, 371, 374, 377, 378, 379, 381, 396, 398, 400, 410, 552, 626, 637, 677, 693, 696, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 778, 781, 803, 806, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 973, 977, 999, 1007, 1009, 1078, 1144, 1185, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1311, 1317, 1320, 1332, 1335, 1337, 1340, 1344, 1347, 1354, 1357, 1378, 1381, 1388, 1391, 1403, 1407, 1413, 1417, 1428, 1432, 1459, 1515, 1518, 1520, 1524, 1540, 1542, 1544, 1546, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1729], "automat": [35, 40, 41, 42, 315, 319, 320, 321, 326, 328, 335, 336, 338, 341, 342, 1713, 1714, 1724, 1727, 1731], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 95, 170, 248, 329, 336, 338, 342, 353, 354, 999, 1139, 1140, 1713, 1714, 1723, 1730], "everyon": [35, 36, 42, 354], "regardless": [35, 36, 165, 166, 321, 339, 342, 467, 468], "wouldn": 35, "nice": [35, 333, 1724], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 315, 316, 318, 321, 323, 324, 328, 330, 331, 332, 334, 337, 339, 342, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1605, 1608, 1615, 1619, 1620, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1731], "onc": [35, 40, 41, 42, 148, 149, 301, 302, 316, 319, 321, 322, 323, 331, 333, 335, 337, 340, 354, 643, 667, 1311, 1337, 1340, 1341, 1343, 1349, 1352, 1403, 1407, 1567, 1568, 1571], "know": [35, 42, 332, 333, 334, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1725], "among": [35, 165, 166, 333, 335, 1724], "frantic": 35, "port": 35, "lucid": 35, "honk": 35, "improv": [35, 42, 321, 327, 328, 335, 337, 1713, 1722, 1724, 1726, 1727], "understand": [35, 37, 38, 39, 40, 41, 42, 315, 316, 323, 324, 327, 332, 335, 336, 1720, 1730], "pattern": [35, 132, 133, 285, 286, 321, 324, 999, 1031, 1034, 1036, 1039, 1041, 1044], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 320, 321, 323, 324, 331, 333, 334, 335, 337, 341, 354, 1459, 1495, 1498, 1544, 1546, 1556, 1714, 1727, 1730], "now": [35, 38, 41, 316, 318, 319, 321, 326, 327, 329, 331, 333, 334, 335, 339, 340, 342, 353, 354, 470, 547, 551, 1724], "spend": [35, 1724], "torchvis": 35, "probabl": [35, 148, 149, 301, 302, 333, 1245, 1284, 1287, 1567, 1568, 1571], "sonnet": 35, "about": [35, 39, 40, 41, 42, 316, 320, 321, 327, 333, 334, 335, 336, 337, 339, 340, 341, 342, 354, 552, 588, 591, 599, 602, 1725, 1726, 1729], "next": [35, 37, 40, 41, 42, 318, 323, 324, 329, 331, 334, 338, 339, 340, 552, 588, 591, 1714, 1724, 1726], "everyth": [35, 40, 42, 323, 331, 332, 333, 334, 338, 354], "zero": [35, 54, 55, 56, 57, 60, 61, 116, 117, 134, 135, 140, 141, 150, 151, 156, 157, 158, 159, 171, 172, 173, 174, 177, 178, 269, 270, 281, 282, 287, 288, 293, 294, 301, 302, 303, 304, 309, 310, 311, 312, 317, 319, 321, 322, 323, 327, 329, 337, 340, 341, 374, 382, 383, 387, 394, 400, 404, 407, 431, 437, 440, 447, 450, 470, 482, 484, 485, 491, 492, 511, 514, 521, 524, 534, 538, 539, 543, 547, 551, 552, 555, 558, 560, 563, 677, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 733, 736, 743, 746, 758, 761, 763, 766, 768, 771, 793, 796, 798, 801, 818, 821, 823, 826, 828, 831, 833, 836, 858, 861, 878, 881, 883, 886, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 938, 941, 943, 946, 953, 956, 963, 966, 968, 971, 978, 982, 983, 987, 993, 997, 999, 1021, 1024, 1125, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1284, 1287, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1322, 1325, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1428, 1432, 1433, 1437, 1459, 1475, 1478, 1480, 1483, 1485, 1488, 1500, 1503, 1535, 1539, 1562, 1563, 1566, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1723], "need": [35, 37, 38, 40, 41, 42, 132, 133, 144, 145, 285, 286, 297, 298, 316, 317, 319, 321, 323, 324, 325, 328, 330, 331, 332, 334, 335, 337, 339, 340, 353, 354, 999, 1016, 1019, 1021, 1024, 1459, 1460, 1463, 1544, 1555, 1720, 1724, 1725, 1726, 1730], "said": 35, "high": [35, 40, 148, 149, 301, 302, 331, 335, 340, 1567, 1573, 1576, 1583, 1586, 1713, 1720, 1721, 1722, 1723, 1724, 1728, 1730, 1731], "level": [35, 36, 40, 42, 319, 328, 331, 335, 336, 337, 340, 341, 342, 354, 1713, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731], "optim": [35, 134, 135, 287, 288, 330, 338, 340, 342, 353, 999, 1006, 1193, 1222, 1225, 1540, 1541, 1542, 1543, 1714, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731], "trainer": [35, 352, 354, 1714, 1731], "statu": [35, 40, 320], "quo": 35, "kera": [35, 1730], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 342, 1724], "flax": [35, 342, 354, 1724], "trax": [35, 342], "objax": [35, 342], "idea": [35, 37, 331, 334, 338, 353, 1723], "fulli": [35, 317, 321, 327, 330, 335, 337, 338, 339, 340, 341, 342, 354, 1722, 1723, 1724, 1730, 1731], "offer": [35, 41, 331, 341, 1724, 1730, 1731], "strongli": [36, 41, 1730, 1731], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 140, 141, 165, 166, 177, 178, 293, 294, 335, 677, 678, 681, 1311, 1359, 1362, 1364, 1366, 1368, 1371, 1393, 1396], "skill": [36, 1726], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 132, 133, 134, 135, 144, 145, 148, 149, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 319, 321, 323, 327, 330, 331, 333, 334, 335, 431, 432, 435, 467, 468, 470, 475, 477, 552, 555, 558, 581, 582, 583, 585, 593, 594, 596, 597, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 642, 643, 648, 649, 652, 655, 656, 658, 659, 662, 663, 667, 674, 676, 677, 828, 831, 833, 836, 893, 896, 898, 901, 938, 941, 999, 1000, 1003, 1007, 1009, 1028, 1030, 1046, 1048, 1049, 1052, 1054, 1055, 1072, 1073, 1076, 1081, 1084, 1086, 1097, 1100, 1102, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1125, 1139, 1140, 1143, 1145, 1147, 1159, 1163, 1171, 1175, 1183, 1184, 1187, 1191, 1193, 1198, 1201, 1202, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1244, 1245, 1284, 1287, 1311, 1337, 1340, 1341, 1343, 1459, 1495, 1498, 1530, 1534, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1550, 1554, 1555, 1556, 1557, 1567, 1568, 1571, 1657, 1658, 1661, 1663, 1666, 1702, 1703, 1706, 1708, 1711], "veteran": 36, "beginn": [36, 1724], "aspect": [36, 331, 340, 1714, 1724], "guid": [36, 40, 41, 42, 326, 1714, 1730], "through": [36, 39, 40, 42, 315, 318, 319, 323, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 341, 342, 353, 677, 713, 716, 1544, 1547, 1722, 1724, 1725, 1726], "journei": [36, 1714], "inclusvi": 36, "big": [36, 354, 1724], "team": [36, 40, 41, 42, 331, 1726], "board": 36, "contributor": [36, 41, 42, 331, 336, 1714, 1724], "split": [36, 42, 144, 145, 165, 166, 297, 298, 336, 337, 354, 643, 665, 666, 667, 999, 1125, 1459, 1714, 1731], "section": [36, 37, 39, 40, 42, 315, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 340, 341, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1720, 1727, 1730], "below": [36, 38, 40, 41, 54, 55, 309, 310, 315, 319, 320, 321, 322, 323, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 353, 370, 371, 470, 534, 538, 539, 543, 677, 833, 836, 1311, 1332, 1335, 1418, 1422, 1714, 1720, 1722, 1727, 1729], "best": [36, 39, 40, 41, 42, 315, 321, 326, 333, 334, 999, 1125, 1727, 1728], "go": [36, 37, 40, 41, 42, 315, 318, 321, 323, 331, 332, 334, 336, 340, 354, 1544, 1555, 1720, 1724, 1725, 1729, 1731], "start": [36, 37, 38, 40, 41, 42, 165, 166, 171, 172, 315, 320, 321, 323, 324, 327, 331, 333, 335, 336, 337, 339, 340, 341, 353, 354, 400, 401, 470, 472, 473, 505, 506, 508, 509, 643, 644, 1724, 1730], "finish": [36, 40, 41, 315, 1714], "dive": [36, 39, 40, 42, 319, 321, 332, 336, 339, 340, 354, 1714, 1730], "right": [36, 41, 42, 140, 141, 162, 165, 166, 167, 168, 293, 294, 315, 323, 335, 340, 400, 402, 677, 733, 736, 743, 746, 1311, 1403, 1407, 1423, 1427, 1641, 1647, 1650], "environ": [36, 37, 38, 42, 353, 1724, 1726], "basic": [36, 38, 40, 323], "fork": [36, 41, 316, 999, 1126], "doc": [36, 39, 40, 323, 324, 327, 332, 333, 337, 340, 341, 370, 371, 1714], "document": [36, 39, 42, 321, 323, 331, 332, 333, 340, 342, 999, 1192], "local": [36, 37, 38, 41, 316, 328], "task": [36, 42, 331, 332, 353, 1540, 1541, 1542, 1543, 1714, 1724, 1730, 1731], "help": [36, 37, 40, 41, 317, 318, 319, 321, 323, 329, 333, 334, 335, 339, 340, 341, 352, 999, 1005, 1657, 1692, 1696, 1713, 1714, 1720, 1724, 1726, 1730], "appli": [36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 339, 340, 341, 342, 352, 354, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 552, 628, 631, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1193, 1214, 1217, 1218, 1221, 1245, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1368, 1371, 1383, 1386, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1515, 1518, 1540, 1541, 1542, 1544, 1550, 1553, 1556, 1557, 1562, 1563, 1566, 1657, 1663, 1666, 1713, 1714, 1725], "resourc": [36, 40], "video": [36, 41, 42, 316, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 1722], "contribut": [37, 39, 40, 41, 42, 337, 1728], "toward": [37, 41, 144, 145, 297, 298, 334, 337, 400, 410, 677, 993, 997, 1459, 1500, 1503, 1720, 1724], "requir": [37, 38, 40, 41, 317, 320, 321, 322, 323, 324, 325, 327, 329, 331, 332, 333, 334, 335, 337, 339, 354, 387, 394, 467, 468, 677, 963, 966, 1311, 1337, 1340, 1341, 1343, 1459, 1515, 1518, 1724, 1730], "slightli": [37, 319, 331, 337, 341], "more": [37, 39, 40, 42, 116, 117, 144, 145, 152, 153, 269, 270, 297, 298, 305, 306, 315, 316, 317, 318, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 353, 354, 400, 410, 470, 472, 473, 552, 560, 563, 677, 793, 796, 858, 861, 1311, 1354, 1357, 1459, 1480, 1483, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1714, 1722, 1723, 1724, 1725, 1726, 1727, 1730, 1731], "complex": [37, 40, 321, 323, 331, 335, 340, 341, 342, 354, 677, 833, 836, 999, 1149, 1152, 1311, 1337, 1340, 1341, 1343, 1403, 1407, 1713, 1720, 1722, 1724, 1726, 1730, 1731], "setup": [37, 41, 42], "alon": [37, 333, 643, 662, 676], "instanc": [37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 321, 323, 324, 327, 328, 329, 330, 333, 340, 341, 342, 355, 365, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 431, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 570, 573, 588, 591, 606, 609, 616, 619, 643, 664, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1097, 1100, 1145, 1159, 1163, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1725], "mech": 37, "vision": [37, 352, 1714, 1720, 1730], "demo": [37, 353, 1714], "util": [37, 131, 159, 284, 312, 322, 325, 334, 643, 654, 1703, 1706, 1708, 1711, 1722, 1730, 1731], "thu": [37, 40, 325, 331, 677, 743, 746, 923, 926, 938, 941, 1311, 1337, 1340], "relat": [37, 39, 41, 42, 326, 331, 333, 334, 335, 353, 643, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "folder": [37, 38, 41, 42, 316, 328, 331, 333, 334], "To": [37, 38, 41, 316, 319, 321, 323, 325, 326, 328, 331, 332, 333, 334, 340, 341, 342, 999, 1141, 1142, 1144, 1146, 1714], "grasp": [37, 331], "directori": [37, 38, 40, 41, 42, 320, 331, 333, 643, 644, 999, 1080, 1146], "tree": [37, 38, 321], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 102, 103, 132, 133, 144, 145, 165, 166, 171, 172, 175, 176, 177, 178, 255, 256, 285, 286, 297, 298, 315, 316, 319, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 342, 370, 371, 374, 382, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1159, 1163, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1726], "dir": [37, 340], "clone": [37, 38, 42], "mutual": [37, 319, 328], "git": [37, 39, 41, 42, 316, 333], "http": [37, 41, 60, 61, 177, 178, 287, 288, 316, 321, 324, 370, 371, 400, 401, 552, 570, 573, 677, 818, 821, 1193, 1194, 1197, 1198, 1201, 1311, 1438, 1442, 1657, 1688, 1691], "com": [37, 41, 316, 321], "unifyai": [37, 38, 41, 42], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 44, 47, 48, 54, 55, 116, 117, 120, 121, 140, 141, 148, 149, 177, 178, 269, 270, 293, 294, 301, 302, 315, 337, 370, 371, 400, 402, 403, 410, 416, 417, 470, 511, 514, 534, 538, 539, 543, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1544, 1552, 1567, 1573, 1576, 1578, 1581, 1583, 1586], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 64, 132, 133, 160, 161, 164, 181, 313, 314, 334, 341, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 1714, 1724, 1727], "window": [37, 38, 42, 110, 111, 138, 139, 263, 264, 291, 292, 387, 388, 389, 390, 391, 392, 393, 395, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1729], "block": [37, 42, 319, 325, 326, 328, 333, 336, 338, 342, 354, 396, 398, 643, 1193, 1226, 1244, 1713, 1714, 1729, 1731], "ivy_devscriptsactiv": 37, "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1727, 1729], "bin": [37, 38, 41, 42, 316, 319], "instal": [37, 38, 41, 42, 318, 326, 353, 1714], "packag": [37, 38, 41, 326, 331, 354, 1724, 1726], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 110, 111, 140, 141, 165, 166, 263, 264, 293, 294, 319, 323, 335, 354, 387, 394, 467, 468, 643, 667, 677, 693, 696, 903, 906, 999, 1072, 1139, 1140, 1143, 1145, 1182, 1183, 1184, 1186, 1311, 1388, 1391, 1724, 1727], "cd": [37, 38, 41, 42], "pip": [37, 41, 353, 1714], "repeat": [37, 42, 132, 133, 144, 145, 285, 286, 297, 298, 317, 318, 323, 324, 326, 333, 999, 1041, 1044, 1459, 1525, 1529], "note": [37, 40, 41, 42, 60, 61, 321, 323, 324, 331, 332, 333, 334, 370, 371, 552, 627, 677, 858, 861, 938, 941, 943, 946, 999, 1015, 1311, 1337, 1340, 1403, 1407, 1459, 1515, 1518, 1620, 1626, 1630, 1657, 1676, 1679], "link": [37, 40, 41, 320, 321, 331, 1720, 1722], "reflect": [37, 42, 317, 333, 387, 394], "immedi": [37, 335, 1714], "ivy_robot": [37, 353], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 109, 110, 111, 137, 138, 139, 262, 263, 264, 290, 291, 292, 334, 337, 338, 340, 342, 353, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1271, 1274, 1276, 1277, 1279, 1282, 1714, 1724], "my": [37, 334], "mount": [37, 42], "run": [37, 38, 40, 41, 134, 135, 287, 288, 315, 318, 320, 323, 326, 327, 331, 332, 337, 338, 339, 340, 341, 342, 353, 354, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1540, 1541, 1542, 1543, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1731], "rm": [37, 42], "v": [37, 41, 42, 138, 139, 154, 155, 291, 292, 307, 308, 332, 337, 340, 341, 342, 1245, 1306, 1309, 1641, 1647, 1650, 1714], "pwd": 37, "volum": [37, 1245, 1266, 1269], "rebuild": [37, 162, 165, 166, 167, 168], "after": [37, 38, 40, 41, 42, 134, 135, 146, 147, 165, 166, 287, 288, 299, 300, 316, 321, 323, 325, 327, 331, 333, 336, 387, 394, 552, 637, 643, 644, 677, 963, 966, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1544, 1555, 1562, 1563, 1566, 1724], "everi": [37, 38, 40, 42, 54, 55, 132, 133, 285, 286, 316, 318, 319, 320, 321, 323, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 341, 470, 499, 500, 503, 999, 1000, 1003, 1724], "id": [37, 39, 41, 317, 319, 326, 643, 648], "pycharm": 37, "configur": [37, 38, 41, 42, 165, 166, 320, 321, 329, 643, 666, 1544, 1557], "part": [37, 42, 54, 55, 134, 135, 316, 328, 331, 333, 334, 335, 337, 338, 342, 353, 354, 370, 371, 387, 394, 470, 534, 538, 539, 543, 677, 833, 836, 1722, 1724, 1729, 1730, 1731], "vscode": [37, 41], "found": [37, 40, 41, 42, 162, 165, 166, 167, 168, 317, 318, 319, 321, 324, 326, 329, 330, 331, 335, 643, 657, 1544, 1555, 1726], "devcontain": 37, "extens": [37, 39, 41, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 324, 331, 333, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 998, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1721, 1724, 1731], "remot": [37, 41, 316], "codespac": 37, "config": [37, 165, 166, 316, 340, 1544, 1557, 1725], "json": [37, 165, 166, 340], "good": [37, 38, 39, 40, 41, 42, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 341], "feel": [37, 38, 40, 41, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "free": [37, 38, 39, 40, 42, 44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "channel": [37, 38, 40, 41, 42, 44, 132, 133, 162, 285, 286, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1049, 1052, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "pre": [37, 40, 333, 342, 354, 1724], "commit": [37, 40, 316, 320, 323, 333], "_": [37, 38, 41, 60, 61, 177, 178, 287, 288, 324, 326, 330, 331, 333, 340, 400, 401, 552, 570, 573, 677, 818, 821, 1193, 1194, 1197, 1198, 1201, 1311, 1408, 1412, 1438, 1442, 1544, 1551, 1657, 1688, 1691], "builder": [38, 352, 354, 1713, 1714], "dockerfil": [38, 41], "command": [38, 41, 316, 329, 1714], "maco": [38, 1729], "latest": [38, 40, 41, 42, 60, 61, 177, 178, 318, 320, 321, 324, 334, 354, 400, 401, 552, 570, 573, 677, 818, 821, 1657, 1688, 1691, 1729], "ubuntu": [38, 320], "uid": 38, "bash": [38, 42, 316], "root": [38, 41, 42, 60, 61, 177, 178, 331, 340, 677, 963, 966], "both": [38, 42, 60, 61, 102, 103, 116, 117, 140, 141, 171, 172, 177, 178, 293, 294, 318, 319, 321, 322, 323, 324, 327, 328, 330, 331, 333, 335, 337, 339, 340, 341, 342, 353, 354, 374, 376, 387, 392, 393, 394, 396, 397, 400, 401, 404, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 626, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1727, 1729, 1730, 1731], "termin": [38, 41, 42, 162, 165, 166, 167, 168, 319, 337, 340], "3": [38, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 152, 153, 156, 157, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 316, 318, 319, 321, 323, 333, 337, 339, 340, 341, 342, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 469, 470, 500, 503, 511, 514, 529, 532, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 611, 614, 616, 619, 628, 631, 643, 648, 649, 652, 661, 663, 665, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1007, 1009, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1046, 1048, 1056, 1059, 1061, 1064, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1125, 1134, 1137, 1147, 1149, 1152, 1165, 1169, 1176, 1180, 1181, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1438, 1442, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1731], "8": [38, 41, 44, 47, 48, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 126, 127, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 157, 162, 167, 168, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 305, 306, 307, 308, 309, 310, 319, 323, 333, 336, 340, 374, 375, 376, 381, 382, 384, 387, 392, 393, 396, 398, 400, 401, 405, 411, 412, 420, 421, 431, 432, 435, 452, 455, 470, 499, 500, 503, 547, 551, 552, 581, 582, 588, 591, 643, 654, 673, 677, 693, 696, 703, 706, 723, 726, 743, 746, 753, 756, 763, 766, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 878, 881, 883, 886, 893, 896, 898, 901, 903, 906, 928, 931, 943, 946, 948, 951, 963, 966, 968, 971, 983, 987, 999, 1015, 1021, 1024, 1056, 1059, 1073, 1076, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1134, 1137, 1149, 1152, 1159, 1163, 1193, 1194, 1197, 1203, 1208, 1211, 1213, 1222, 1225, 1233, 1245, 1247, 1250, 1271, 1274, 1279, 1282, 1291, 1294, 1311, 1322, 1325, 1327, 1330, 1332, 1335, 1354, 1357, 1359, 1362, 1378, 1381, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1443, 1444, 1447, 1459, 1460, 1463, 1480, 1483, 1505, 1508, 1515, 1518, 1530, 1534, 1544, 1546, 1552, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1615, 1619, 1620, 1621, 1625, 1631, 1635, 1641, 1642, 1645, 1652, 1655, 1657, 1663, 1666, 1668, 1671, 1676, 1679, 1692, 1696, 1697, 1701, 1714], "builtin": [38, 41, 339, 341], "explicit": [38, 41, 319, 321, 330, 331, 337, 354, 1724], "cmd": [38, 41], "file": [38, 40, 41, 42, 165, 166, 316, 317, 318, 319, 320, 324, 326, 328, 331, 332, 333, 334, 337, 340, 999, 1080, 1146, 1720, 1723, 1724, 1725], "abov": [38, 41, 42, 54, 55, 60, 61, 148, 149, 163, 164, 177, 178, 301, 302, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 431, 462, 465, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1567, 1573, 1576, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724, 1729], "script": [38, 41, 42, 323, 337, 354, 1724], "OR": [38, 41, 42, 158, 159, 311, 312, 677, 738, 741, 883, 886, 1702, 1708, 1711], "move": [38, 42, 116, 117, 175, 176, 269, 270, 334, 370, 371, 400, 407, 643, 668, 672], "execut": [38, 41, 42, 319, 323, 330, 333, 335, 337, 339, 342, 354, 643, 644, 999, 1181, 1713, 1720, 1724, 1725, 1726, 1727, 1728, 1730], "insid": [38, 41, 42, 319, 321, 329, 333, 334, 400, 411, 1730], "make_docs_without_dock": 38, "path": [38, 41, 330, 331, 332, 999, 1080, 1724], "rel": [38, 42, 44, 47, 48, 134, 135, 140, 141, 144, 145, 154, 155, 171, 172, 287, 288, 293, 294, 297, 298, 307, 308, 332, 335, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1311, 1332, 1335, 1368, 1371, 1383, 1386, 1418, 1422, 1459, 1480, 1483, 1500, 1503, 1641, 1642, 1645, 1652, 1655, 1714, 1724, 1726], "assum": [38, 60, 61, 102, 103, 177, 178, 318, 321, 324, 332, 335, 339, 340, 354, 374, 383, 384, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "gener": [38, 40, 41, 42, 60, 61, 105, 133, 134, 135, 148, 149, 160, 161, 177, 178, 258, 286, 287, 288, 301, 302, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 339, 341, 342, 353, 354, 370, 371, 387, 389, 400, 401, 408, 409, 416, 417, 467, 470, 472, 473, 505, 506, 508, 509, 552, 570, 573, 677, 818, 821, 938, 941, 1000, 1003, 1005, 1006, 1007, 1009, 1010, 1013, 1015, 1016, 1019, 1021, 1024, 1026, 1027, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1054, 1055, 1056, 1059, 1061, 1064, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1076, 1078, 1079, 1080, 1081, 1084, 1086, 1087, 1090, 1092, 1095, 1097, 1100, 1102, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1128, 1129, 1132, 1134, 1137, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1191, 1192, 1193, 1208, 1211, 1311, 1423, 1427, 1567, 1568, 1571, 1573, 1576, 1583, 1586, 1588, 1657, 1688, 1691, 1713, 1714, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730], "prefer": [38, 41, 319, 329, 331, 335, 1724], "browser": [38, 41], "affect": [38, 331], "page": [38, 41, 42, 320, 338, 339, 342, 352, 1714], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 323, 324, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 374, 383, 387, 394, 396, 397, 398, 400, 410, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1605, 1608, 1615, 1619, 1620, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1702, 1703, 1706, 1708, 1711, 1722, 1724, 1725, 1727, 1728, 1729, 1730, 1731], "synchron": [38, 320], "respons": [38, 42, 321], "rest": [38, 41, 320, 342, 1726], "remove_doc": 38, "privat": [38, 333], "access": [38, 40, 41, 42, 165, 166, 321, 331, 1724, 1726, 1728], "fulfil": [38, 336, 1714], "purpos": [38, 42, 317, 319, 320, 323, 325, 327, 328, 329, 331, 333, 335, 336, 339, 370, 371, 677, 793, 796, 858, 861, 1713, 1714, 1723, 1725, 1728, 1729, 1730], "delet": [38, 42, 1193, 1232], "autogenerated_sourc": 38, "Then": [38, 40, 42, 329, 334, 354], "format": [38, 163, 164, 165, 166, 169, 170, 315, 321, 322, 323, 324, 325, 337, 339, 340, 431, 462, 465, 552, 583, 585, 643, 649, 652, 1657, 1668, 1671, 1714, 1720, 1722, 1724, 1725], "png": [38, 340], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 326, 327, 328, 331, 334, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1192, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "structur": [38, 42, 162, 165, 166, 167, 168, 317, 319, 328, 332, 334, 340, 341, 999, 1026, 1544, 1557, 1723, 1724], "rst": [38, 422], "main": [38, 41, 54, 55, 140, 141, 293, 294, 319, 326, 329, 333, 370, 371, 396, 397, 470, 491, 492, 534, 538, 539, 543, 1311, 1327, 1330, 1332, 1335, 1418, 1422, 1722, 1724, 1725, 1730], "submodul": [38, 40, 41, 42, 44, 162, 316, 320, 322, 328, 329, 333, 336, 337, 341, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1713, 1714, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "skip": [38, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 320, 329, 333, 1544, 1557], "read": [38, 40, 165, 166, 1714, 1724], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 132, 133, 144, 145, 165, 166, 171, 172, 173, 174, 175, 176, 285, 286, 297, 298, 318, 321, 324, 331, 332, 337, 340, 353, 354, 420, 421, 470, 475, 477, 482, 484, 494, 497, 552, 555, 558, 643, 668, 672, 999, 1171, 1175, 1176, 1180, 1459, 1495, 1498, 1544, 1546, 1641, 1652, 1655], "5": [38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 116, 117, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 316, 318, 319, 323, 327, 332, 333, 339, 340, 341, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 400, 401, 404, 405, 407, 410, 411, 412, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 457, 460, 462, 465, 470, 500, 503, 511, 514, 529, 532, 544, 546, 547, 551, 552, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 616, 619, 628, 631, 643, 649, 652, 661, 665, 677, 678, 681, 688, 691, 693, 696, 698, 701, 703, 706, 713, 716, 718, 721, 723, 726, 738, 741, 743, 746, 753, 756, 763, 766, 768, 771, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 999, 1015, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1069, 1081, 1084, 1087, 1090, 1092, 1095, 1134, 1137, 1149, 1152, 1159, 1163, 1165, 1169, 1181, 1192, 1193, 1194, 1197, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1245, 1247, 1250, 1257, 1260, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1349, 1352, 1354, 1357, 1359, 1362, 1373, 1376, 1378, 1381, 1383, 1386, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1443, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "create_rst_fil": 38, "filter": [38, 138, 139, 263, 264, 291, 292, 333, 387, 390, 391, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1290], "recurs": [38, 41, 49, 50, 51, 52, 53, 165, 166, 169, 170, 316, 319, 328, 341, 354, 552, 593, 594, 596, 597, 643, 655, 656, 999, 1054, 1055, 1544, 1545, 1546, 1554, 1555, 1556], "repres": [38, 60, 61, 140, 141, 177, 178, 293, 294, 335, 339, 387, 394, 396, 398, 470, 511, 514, 521, 524, 552, 587, 677, 688, 691, 693, 696, 703, 706, 718, 721, 763, 766, 903, 906, 958, 961, 983, 987, 1193, 1226, 1244, 1245, 1291, 1294, 1311, 1393, 1396, 1398, 1401, 1721, 1722, 1725], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 144, 145, 165, 166, 173, 174, 285, 286, 297, 298, 321, 324, 329, 331, 332, 333, 334, 335, 342, 354, 374, 384, 552, 560, 563, 643, 667, 999, 1170, 1311, 1354, 1357, 1459, 1475, 1478, 1495, 1498, 1500, 1503, 1520, 1524, 1544, 1550, 1713, 1723, 1724, 1730], "overal": [38, 319, 321, 322, 324, 342, 1720, 1722, 1723, 1724], "markup": 38, "6": [38, 44, 47, 48, 54, 55, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 154, 155, 156, 157, 162, 167, 168, 171, 172, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 318, 319, 323, 333, 335, 337, 339, 340, 341, 374, 375, 379, 384, 387, 392, 394, 396, 398, 400, 401, 405, 410, 412, 420, 421, 427, 428, 431, 432, 435, 437, 440, 457, 460, 470, 499, 500, 503, 511, 514, 547, 551, 552, 560, 563, 565, 568, 583, 585, 588, 591, 643, 661, 676, 677, 678, 681, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 798, 801, 803, 806, 808, 811, 813, 816, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 858, 861, 868, 871, 878, 881, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1016, 1019, 1021, 1024, 1028, 1030, 1036, 1039, 1056, 1059, 1061, 1064, 1087, 1090, 1092, 1095, 1134, 1137, 1149, 1152, 1159, 1163, 1165, 1169, 1181, 1193, 1194, 1197, 1203, 1204, 1207, 1213, 1214, 1217, 1222, 1225, 1233, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1354, 1357, 1359, 1362, 1378, 1381, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1546, 1555, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1692, 1696, 1697, 1701], "extract": [38, 331, 334, 1720, 1724, 1725, 1730], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 44, 45, 46, 47, 48, 60, 61, 102, 103, 110, 111, 116, 117, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 157, 162, 167, 168, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 319, 323, 328, 330, 333, 374, 375, 387, 389, 391, 392, 394, 400, 401, 405, 410, 412, 427, 428, 431, 437, 440, 447, 450, 552, 588, 591, 599, 602, 628, 631, 643, 654, 677, 678, 681, 693, 696, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 763, 766, 773, 776, 778, 781, 788, 791, 798, 801, 803, 806, 808, 811, 813, 816, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 868, 871, 878, 881, 888, 891, 893, 896, 898, 901, 903, 906, 918, 921, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 993, 997, 999, 1016, 1019, 1021, 1024, 1087, 1090, 1092, 1095, 1134, 1137, 1159, 1163, 1193, 1194, 1197, 1198, 1201, 1203, 1204, 1207, 1213, 1214, 1217, 1222, 1225, 1233, 1245, 1247, 1250, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1354, 1357, 1378, 1381, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1475, 1478, 1480, 1483, 1505, 1508, 1515, 1518, 1520, 1524, 1530, 1534, 1544, 1546, 1552, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1615, 1619, 1620, 1621, 1625, 1631, 1635, 1641, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1676, 1679, 1692, 1696, 1697, 1701], "readm": [38, 354], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 321, 331, 1724], "content": [38, 40, 165, 166, 330, 337, 340], "toc": 38, "append": [38, 165, 166, 325, 333, 337, 340, 677, 733, 736, 1311, 1332, 1335, 1354, 1357, 1459, 1475, 1478], "append_toctree_to_rst": 38, "9": [38, 44, 47, 48, 60, 61, 110, 111, 116, 117, 126, 127, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 148, 149, 154, 155, 156, 157, 162, 167, 168, 173, 174, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 301, 302, 305, 306, 307, 308, 309, 310, 319, 323, 333, 340, 341, 387, 392, 393, 400, 401, 411, 420, 421, 431, 432, 435, 552, 581, 582, 588, 591, 677, 693, 696, 703, 706, 723, 726, 728, 731, 743, 746, 773, 776, 778, 781, 803, 806, 818, 821, 848, 851, 853, 856, 858, 861, 878, 881, 883, 886, 893, 896, 898, 901, 903, 906, 928, 931, 943, 946, 948, 951, 963, 966, 968, 971, 973, 977, 993, 997, 999, 1021, 1024, 1041, 1044, 1056, 1059, 1087, 1090, 1092, 1095, 1109, 1112, 1119, 1122, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1311, 1317, 1320, 1322, 1325, 1332, 1335, 1354, 1357, 1359, 1362, 1378, 1381, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1459, 1460, 1463, 1480, 1483, 1500, 1503, 1505, 1508, 1515, 1518, 1530, 1534, 1544, 1546, 1550, 1552, 1555, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1615, 1619, 1620, 1621, 1625, 1631, 1635, 1641, 1652, 1655, 1657, 1663, 1666, 1668, 1671, 1692, 1696, 1697, 1701, 1720], "index": [38, 54, 55, 132, 133, 150, 151, 152, 153, 154, 155, 165, 166, 171, 172, 285, 286, 303, 304, 305, 306, 307, 308, 319, 328, 332, 333, 339, 400, 408, 409, 469, 470, 491, 492, 511, 514, 643, 664, 999, 1005, 1061, 1064, 1069, 1193, 1232, 1459, 1515, 1518, 1544, 1547, 1548, 1551, 1552, 1553, 1558, 1560, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1724], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 110, 111, 148, 149, 156, 157, 173, 174, 177, 178, 263, 264, 285, 286, 293, 294, 297, 298, 301, 302, 319, 323, 333, 400, 401, 552, 555, 558, 588, 591, 677, 683, 686, 703, 706, 713, 716, 768, 771, 868, 871, 883, 886, 928, 931, 993, 997, 999, 1149, 1152, 1193, 1194, 1197, 1245, 1247, 1250, 1306, 1309, 1311, 1332, 1335, 1378, 1381, 1418, 1422, 1459, 1530, 1534, 1620, 1621, 1625, 1657, 1663, 1666, 1668, 1671], "\u03c0": [38, 469, 677, 683, 686, 698, 701, 708, 711, 713, 716], "namespac": [38, 40, 321, 329, 331, 332, 334, 337, 342], "remov": [38, 40, 140, 141, 165, 166, 293, 294, 318, 321, 324, 328, 333, 335, 342, 1193, 1232, 1311, 1332, 1335, 1354, 1357, 1418, 1422, 1459, 1510, 1513, 1540, 1541, 1542, 1724], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 134, 135, 177, 178, 287, 288, 317, 319, 321, 323, 327, 331, 333, 334, 470, 511, 514, 677, 678, 681, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 938, 941, 973, 977, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1233, 1311, 1388, 1391, 1403, 1407, 1540, 1541, 1542, 1543, 1720, 1730], "behaviour": [39, 40, 42, 315, 316, 317, 319, 321, 324, 325, 327, 330, 331, 333, 334, 339], "frontend": [39, 315, 321, 333, 334, 336, 338, 999, 1103, 1106, 1713, 1724], "refer": [39, 40, 41, 42, 156, 157, 158, 159, 287, 288, 309, 310, 311, 312, 316, 321, 327, 328, 331, 332, 333, 354, 370, 371, 396, 397, 470, 491, 492, 677, 793, 796, 858, 861, 1193, 1194, 1197, 1198, 1201, 1311, 1327, 1330, 1428, 1432, 1657, 1688, 1691, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1724], "realpython": 39, "pyn": 39, "kind": [39, 116, 117, 331, 333, 335, 337, 354, 552, 588, 591, 599, 602, 604, 677, 923, 926, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "stack": [39, 44, 47, 48, 140, 141, 144, 145, 165, 166, 269, 270, 293, 294, 297, 298, 337, 400, 405, 412, 470, 534, 538, 539, 543, 999, 1140, 1183, 1311, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1403, 1407, 1408, 1412, 1418, 1422, 1459, 1544, 1545, 1554, 1555, 1714, 1720, 1722, 1729, 1730], "overflow": [39, 321, 677, 693, 696, 1657, 1692, 1696], "platform": [39, 41, 1722, 1726, 1728], "sort": [39, 127, 155, 162, 165, 166, 167, 168, 280, 308, 334, 374, 384, 421, 1311, 1337, 1340, 1403, 1407, 1408, 1412, 1642, 1645, 1647, 1650], "inform": [39, 40, 41, 42, 134, 135, 287, 288, 316, 319, 325, 332, 333, 552, 588, 591, 599, 602, 999, 1005, 1193, 1227, 1231, 1727], "pilot": 39, "bit": [39, 40, 41, 319, 321, 323, 328, 337, 339, 552, 587, 588, 591, 599, 602, 677, 728, 731, 733, 736, 743, 746, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1730], "thei": [39, 40, 42, 102, 103, 140, 141, 148, 149, 165, 166, 293, 294, 301, 302, 315, 316, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340, 341, 342, 354, 374, 376, 384, 552, 626, 1311, 1423, 1427, 1540, 1541, 1542, 1567, 1568, 1571, 1714, 1721, 1724, 1726, 1727, 1730, 1731], "done": [39, 40, 41, 42, 316, 323, 326, 331, 333, 340, 1724], "faster": [39, 467, 468, 1311, 1403, 1407, 1713, 1726, 1729], "head": [39, 41, 1245, 1301, 1304, 1714], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 132, 133, 134, 135, 165, 166, 173, 174, 285, 286, 287, 288, 316, 319, 323, 325, 329, 331, 334, 336, 337, 339, 340, 341, 552, 575, 576, 593, 594, 596, 597, 605, 611, 614, 621, 624, 642, 643, 655, 656, 662, 676, 999, 1010, 1013, 1046, 1048, 1054, 1055, 1072, 1081, 1084, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1143, 1159, 1163, 1184, 1187, 1191, 1193, 1208, 1211, 1311, 1337, 1340, 1341, 1343, 1544, 1545, 1554, 1555, 1556, 1714], "though": [39, 40, 42, 321, 324, 328, 331, 335, 340, 354], "sound": [39, 336], "odd": [39, 316, 387, 394, 677, 923, 926], "peopl": [39, 41, 42, 315, 1724, 1726], "action": [39, 323, 333], "integr": [39, 41, 56, 57, 102, 103, 173, 174, 177, 178, 315, 374, 384, 552, 555, 558, 1722, 1724, 1726, 1727, 1728], "keep": [39, 40, 41, 42, 144, 145, 165, 166, 297, 298, 316, 319, 320, 333, 334, 335, 340, 342, 1459, 1530, 1534], "explain": [40, 41, 42, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 337, 338, 339, 340, 341, 342, 1714, 1720, 1727, 1730], "frequent": [40, 42, 1724], "wherebi": [40, 1544, 1556, 1721], "outlin": [40, 41, 42, 315, 319, 321, 324, 328, 330, 331, 333], "broad": [40, 1726], "individu": [40, 42, 316, 320, 328, 330, 331, 1724, 1727, 1730, 1731], "sub": [40, 42, 144, 145, 162, 165, 166, 167, 168, 169, 170, 177, 178, 285, 286, 297, 298, 315, 319, 325, 331, 332, 333, 339, 340, 341, 1311, 1332, 1335, 1459, 1505, 1508, 1540, 1541, 1542, 1543, 1714, 1720], "distribut": [40, 120, 121, 142, 143, 148, 149, 273, 274, 295, 296, 301, 302, 322, 354, 416, 417, 1245, 1284, 1287, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1724, 1727], "across": [40, 150, 151, 165, 166, 285, 286, 303, 304, 316, 319, 321, 323, 325, 327, 328, 331, 333, 335, 643, 665, 666, 999, 1007, 1009, 1544, 1550, 1594, 1600, 1603, 1722, 1724, 1729], "todo": [40, 321, 331], "detail": [40, 42, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 337, 339, 340, 341, 470, 494, 497, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1726, 1730], "select": [40, 41, 42, 156, 157, 309, 310, 330, 333, 337, 339, 342, 354, 1657, 1658, 1661, 1663, 1666, 1724, 1727, 1728], "alloc": [40, 42, 54, 55, 56, 57, 173, 174, 354, 470, 534, 538, 539, 543, 552, 555, 558], "describ": [40, 42, 320, 333, 337, 342, 1657, 1668, 1671, 1684, 1687, 1692, 1696, 1724], "explan": [40, 42, 319, 324, 327, 331, 339], "instead": [40, 41, 42, 60, 61, 177, 178, 316, 319, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 354, 677, 938, 941, 1722, 1724, 1730, 1731], "focu": [40, 1722, 1723, 1726, 1731], "alwai": [40, 42, 56, 57, 134, 135, 144, 145, 173, 174, 287, 288, 297, 298, 317, 318, 319, 321, 324, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 354, 374, 376, 552, 555, 558, 677, 693, 696, 903, 906, 999, 1097, 1100, 1193, 1208, 1211, 1459, 1495, 1498], "NOT": [40, 677, 878, 881], "pypi": [40, 41, 354], "instruct": [40, 41, 316, 1722, 1725, 1728, 1730], "static": [40, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324, 328, 329, 331, 354, 467, 468, 470, 482, 484, 677, 793, 796, 883, 886, 1723, 1724, 1725], "method": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 321, 323, 324, 326, 327, 328, 329, 333, 334, 337, 338, 341, 342, 354, 431, 452, 455, 457, 460, 462, 465, 470, 482, 484, 494, 497, 547, 551, 552, 555, 558, 588, 591, 677, 698, 701, 713, 716, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 863, 866, 878, 881, 883, 886, 908, 911, 913, 916, 963, 966, 968, 971, 973, 977, 999, 1026, 1129, 1132, 1134, 1137, 1193, 1214, 1217, 1218, 1221, 1226, 1232, 1244, 1245, 1271, 1274, 1306, 1309, 1311, 1408, 1412, 1443, 1444, 1447, 1459, 1500, 1503, 1520, 1524, 1544, 1545, 1555, 1556, 1557, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1657, 1668, 1671, 1672, 1675, 1676, 1679, 1684, 1687, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1714, 1725, 1731], "revers": [40, 44, 47, 48, 116, 117, 132, 133, 140, 141, 156, 157, 162, 167, 168, 269, 270, 293, 294, 309, 310, 319, 321, 323, 324, 331, 335, 342, 354, 400, 402, 403, 999, 1028, 1030, 1311, 1423, 1427, 1459, 1480, 1483, 1657, 1658, 1661, 1663, 1666], "familiar": [40, 41], "yourself": [40, 42, 331, 333, 335, 353], "hypothesi": [40, 42, 316, 329], "fail": [40, 41, 42, 316, 320, 321, 323, 326, 331], "els": [40, 132, 133, 148, 149, 301, 302, 318, 321, 325, 328, 330, 331, 332, 333, 334, 335, 337, 339, 341, 342, 354, 552, 582, 999, 1010, 1013, 1028, 1030, 1046, 1048, 1544, 1554, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1725], "cover": [40, 316, 323, 324, 328, 329, 333, 335, 336], "lambda": [40, 333, 337, 340, 999, 1028, 1030, 1193, 1203, 1213, 1233, 1544, 1551, 1552], "direct": [40, 331, 332, 335, 341, 342, 353, 400, 402, 403, 410, 1641, 1652, 1655, 1720, 1724, 1725, 1728], "bind": [40, 319, 1723, 1724], "defin": [40, 41, 54, 55, 116, 117, 132, 133, 140, 141, 171, 172, 269, 270, 285, 286, 293, 294, 320, 321, 324, 327, 331, 332, 333, 334, 339, 341, 354, 370, 371, 387, 388, 390, 391, 394, 400, 410, 470, 521, 524, 677, 903, 906, 938, 941, 999, 1087, 1090, 1092, 1095, 1311, 1317, 1320, 1337, 1340, 1341, 1343, 1398, 1401, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1713, 1721, 1722, 1723, 1724, 1725, 1728, 1730, 1731], "def": [40, 41, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 422, 999, 1015, 1544, 1550, 1714], "special": [40, 44, 47, 48, 156, 157, 162, 167, 168, 293, 294, 316, 317, 323, 324, 325, 327, 330, 334, 374, 383, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 748, 751, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 903, 906, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701, 1724, 1725, 1726], "sure": [40, 41, 42, 316, 320, 331, 332, 335], "aforement": 40, "correct": [40, 42, 156, 157, 309, 310, 315, 319, 321, 322, 326, 327, 328, 332, 333, 552, 637, 1459, 1460, 1463, 1657, 1688, 1691, 1697, 1701, 1714], "categori": [40, 316, 317, 319, 321, 331, 334, 336, 1714], "parent": [40, 339, 1193, 1226, 1244], "arraywithelementwis": [40, 44, 47, 48, 60, 317, 339], "containerwithmanipul": [40, 162, 167, 168, 297], "hint": [40, 60, 61, 177, 178, 317, 324, 327, 328, 330, 331, 334, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "add": [40, 41, 42, 44, 47, 48, 60, 61, 146, 147, 160, 161, 162, 165, 166, 167, 168, 177, 178, 299, 300, 313, 314, 315, 316, 317, 318, 319, 321, 324, 327, 328, 330, 331, 333, 334, 335, 337, 339, 354, 677, 999, 1125, 1181, 1193, 1226, 1244, 1562, 1563, 1566, 1714, 1720, 1722, 1724], "thorough": [40, 324, 327, 333], "ensur": [40, 41, 42, 132, 133, 317, 321, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 999, 1097, 1100, 1724], "produc": [40, 263, 264, 321, 333, 334, 387, 389, 1245, 1306, 1309, 1725, 1727], "comment": [40, 41, 42, 316, 321, 326, 331], "add_reformatting_checklist_": 40, "category_nam": [40, 321, 322, 324, 327, 328], "pr": [40, 42, 316, 331], "belong": [40, 165, 166, 316, 341], "shown": [40, 42, 160, 161, 165, 166, 313, 314, 320, 321, 323, 326, 327, 331, 332, 333, 334, 337, 339, 354, 677, 833, 836], "trigger": [40, 320], "autom": [40, 333, 1713, 1714, 1726], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 323, 324], "might": [40, 41, 42, 132, 133, 321, 323, 326, 329, 330, 331, 333, 334, 335, 337, 339, 340, 552, 627, 999, 1028, 1030, 1713], "moment": [40, 134, 135, 287, 288, 318, 354, 1193, 1194, 1197, 1198, 1201, 1214, 1217], "patient": [40, 41], "modifi": [40, 41, 42, 116, 117, 165, 166, 269, 270, 316, 318, 321, 322, 324, 326, 328, 334, 337, 387, 394, 400, 406], "item": [40, 49, 53, 132, 133, 160, 161, 165, 166, 255, 256, 285, 286, 319, 321, 337, 339, 340, 342, 552, 577, 643, 648, 999, 1026, 1056, 1059, 1079, 1149, 1152, 1154, 1157, 1193, 1232, 1544, 1549, 1550, 1551, 1552, 1556, 1560, 1561, 1714], "symbol": [40, 41, 1724, 1725], "emoji": 40, "within": [40, 42, 49, 52, 53, 331, 332, 333, 341, 354, 470, 472, 473, 1567, 1583, 1586, 1720, 1721, 1725], "legend": 40, "mark": [40, 42, 333], "review": [40, 42, 323, 331, 334], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1714, 1722, 1726], "later": [40, 165, 166, 333, 999, 1015, 1724], "status": 40, "manual": [40, 41, 42, 320, 331, 333, 341, 1544, 1545, 1554, 1555], "refrain": 40, "transpil": [40, 331, 336, 337, 338, 1713, 1714, 1724, 1730, 1731], "locat": [40, 42, 318, 322, 331, 332, 333, 334, 470, 521, 524, 1567, 1568, 1571, 1641, 1647, 1650, 1722], "subsect": [40, 42, 316, 320], "verifi": [40, 321, 322, 331, 333, 334], "miss": [40, 41, 317, 319, 323, 326, 333], "simpler": [40, 42, 331, 1725, 1731], "titl": [40, 42, 331, 1714], "label": [40, 42, 142, 143, 295, 296, 320, 331, 336, 337, 338, 342, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1724], "suggest": [40, 41, 42, 321, 331, 333, 334], "simpli": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 335, 337, 341, 342, 354, 677, 793, 796, 858, 861, 1713, 1725, 1730], "leav": [40, 49, 52, 53, 162, 167, 168, 169, 170, 263, 264, 285, 286, 297, 298, 309, 310, 319, 321, 323, 324, 327, 328, 330, 333, 340, 341, 1459, 1515, 1518, 1544, 1545, 1546, 1554, 1555, 1556], "assess": [40, 335], "appropri": [40, 42, 150, 151, 160, 161, 303, 304, 313, 314, 329, 333, 677, 693, 696, 903, 906, 1594, 1595, 1598], "wait": [40, 42, 162, 165, 166, 167, 168, 331, 999, 1144], "composit": [40, 315, 317, 318, 319, 321, 330, 332, 333, 335, 337, 341, 342, 354, 374, 384, 396, 398, 1713, 1725], "temporari": [40, 321, 999, 1080, 1146], "merg": [40, 42, 316, 331, 1724], "close": [40, 41, 42, 324, 331, 333, 335, 677, 793, 796, 858, 861, 943, 946, 1311, 1403, 1407, 1459, 1475, 1478, 1724], "normal": [40, 146, 147, 148, 149, 299, 300, 301, 302, 340, 374, 383, 1459, 1465, 1468, 1515, 1518, 1562, 1563, 1566, 1567, 1578, 1581, 1722], "altern": [40, 41, 102, 103, 255, 256, 330, 331, 340, 374, 382, 1727], "composition": [40, 330, 331], "choos": [40, 41, 42, 150, 151, 175, 176, 338, 342, 643, 668, 672, 677, 878, 881, 883, 886, 1594, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1731], "decid": [40, 41, 165, 166, 321, 335, 1544, 1555], "addit": [40, 41, 42, 132, 133, 146, 147, 175, 176, 285, 286, 299, 300, 319, 321, 323, 324, 331, 333, 334, 335, 339, 340, 342, 643, 668, 672, 677, 693, 696, 943, 946, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1192, 1562, 1563, 1566, 1724, 1725, 1726, 1730], "potenti": [40, 41, 42, 321, 331, 336, 677, 793, 796, 858, 861, 1727], "pend": 40, "show": [40, 41, 42, 165, 166, 320, 323, 330, 331, 333, 353, 354, 999, 1140, 1183, 1714, 1724], "helpfulli": [40, 335, 1722], "prevent": [40, 42, 134, 135, 287, 288, 321, 326, 330, 331, 334, 335, 999, 1015, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1657, 1692, 1696], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 132, 133, 285, 286, 317, 321, 323, 324, 326, 328, 330, 331, 335, 336, 340, 470, 505, 506, 508, 509, 999, 1049, 1052, 1720, 1730], "issue_link": 40, "chosen": [40, 470, 472, 473, 677, 713, 716, 1594, 1615, 1619], "correctli": [40, 41, 42, 140, 141, 150, 151, 293, 294, 303, 304, 319, 321, 323, 325, 326, 327, 330, 332, 333, 335, 341, 354, 1311, 1359, 1362, 1594, 1595, 1598], "alias": [40, 331, 332], "detect": [40, 41, 165, 166, 318, 319, 326, 333, 340, 341, 1544, 1545, 1555], "alias_nam": 40, "function_nam": 40, "notic": [40, 335], "alia": [40, 469], "alreadi": [40, 41, 42, 165, 166, 318, 319, 321, 327, 331, 335, 354, 387, 394, 677, 753, 756, 798, 801, 903, 906, 943, 946, 988, 992, 1311, 1344, 1347, 1378, 1381, 1714, 1724, 1726, 1731], "push": [40, 42, 316, 326, 1730], "liner": 40, "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 316, 320, 321, 326, 354, 677, 693, 696, 903, 906], "placement": 40, "categoris": [40, 316, 331], "faithfulli": 40, "descript": [40, 60, 61, 177, 178, 293, 294, 324, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "inner": [40, 140, 141, 171, 172, 293, 294, 330, 470, 521, 524, 1311, 1337, 1340, 1354, 1357, 1540, 1541, 1542, 1543], "fall": [40, 42, 321, 336, 1714], "under": [40, 41, 42, 315, 316, 319, 323, 324, 328, 331, 333, 335, 336, 337, 340, 342, 354, 1724, 1727, 1731], "linalg": [40, 330, 1714], "match": [40, 56, 57, 165, 166, 173, 174, 319, 323, 552, 555, 558, 677, 938, 941, 999, 1125, 1725, 1730], "creation_routin": [40, 332], "fft": [40, 1724], "indexing_routin": 40, "logic": [40, 158, 159, 311, 312, 317, 321, 322, 325, 329, 331, 333, 339, 643, 659, 677, 873, 876, 878, 881, 883, 886, 1702, 1703, 1706, 1708, 1711, 1714], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 331], "matrix": [40, 44, 47, 48, 132, 133, 138, 139, 140, 141, 285, 286, 291, 292, 293, 294, 321, 331, 370, 371, 470, 511, 514, 534, 538, 539, 543, 999, 1000, 1003, 1016, 1019, 1245, 1291, 1294, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1423, 1427, 1438, 1442, 1722, 1724], "random": [40, 121, 149, 165, 166, 274, 302, 322, 333, 334, 342, 353, 417, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1589, 1592, 1714, 1724], "sorting_searching_count": 40, "statist": [40, 129, 157, 282, 310, 313, 314, 321, 331, 333, 334, 387, 394, 428, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1724], "ufunc": 40, "hierarchi": [40, 165, 166, 340, 1720, 1730], "decomposit": [40, 1311, 1312, 1315, 1388, 1391, 1403, 1407, 1731], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 140, 141, 156, 157, 177, 178, 265, 266, 293, 294, 309, 310, 337, 396, 398, 677, 903, 906, 1245, 1301, 1304, 1306, 1309, 1311, 1317, 1320, 1344, 1347, 1354, 1357, 1378, 1381, 1428, 1432, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1684, 1687, 1724, 1726], "seem": [40, 41, 335, 341, 342, 354, 1724], "func": [40, 165, 166, 323, 467, 468, 643, 667, 999, 1015, 1192, 1193, 1202, 1203, 1213, 1233, 1544, 1557], "gleam": 40, "yet": [40, 41, 354], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 387, 394, 1724], "correspond": [40, 42, 56, 57, 60, 61, 102, 103, 116, 117, 132, 133, 144, 145, 156, 157, 162, 165, 166, 167, 168, 173, 174, 177, 178, 255, 256, 265, 266, 269, 270, 297, 298, 309, 310, 317, 318, 319, 320, 321, 323, 324, 327, 328, 329, 331, 333, 335, 337, 374, 376, 380, 384, 400, 402, 403, 552, 560, 563, 677, 713, 716, 923, 926, 999, 1192, 1311, 1317, 1320, 1337, 1340, 1359, 1362, 1398, 1401, 1459, 1500, 1503, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1724], "ivy_test": [40, 41, 42, 316, 320, 332], "test_ivi": [40, 41, 42, 320, 332, 333], "test_frontend": [40, 332], "unsur": [40, 333], "put": [40, 333, 354, 1730], "explor": [40, 41, 42, 321, 335, 338, 342, 353, 1724, 1727], "outer": [40, 140, 141, 293, 294, 1311, 1540, 1541, 1542, 1543], "confirm": 40, "ve": [40, 41, 42, 148, 149, 301, 302, 335, 336, 339, 1567, 1568, 1571, 1713, 1714], "empti": [40, 41, 132, 133, 165, 166, 285, 286, 317, 321, 322, 387, 394, 470, 472, 473, 999, 1016, 1019, 1134, 1137, 1193, 1226, 1232, 1244, 1657, 1692, 1696, 1702, 1703, 1706, 1708, 1711], "along": [40, 45, 46, 102, 103, 116, 117, 128, 129, 132, 133, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 177, 178, 255, 256, 269, 270, 281, 282, 285, 286, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 323, 330, 334, 335, 337, 374, 382, 384, 387, 394, 400, 402, 403, 411, 420, 421, 427, 428, 470, 505, 506, 508, 509, 643, 667, 999, 1056, 1059, 1311, 1418, 1422, 1428, 1432, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1480, 1483, 1490, 1493, 1500, 1503, 1505, 1508, 1515, 1518, 1525, 1529, 1530, 1534, 1540, 1541, 1542, 1543, 1567, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724], "backend_nam": [40, 318, 321, 322, 324, 327, 328, 329], "relevant_submodul": 40, "sometim": [40, 41, 42, 321, 331, 333, 334, 335], "behav": [40, 316, 325, 330, 332, 339, 1725], "helper": [40, 320, 321, 325, 340, 552, 575, 1713], "recreat": 40, "defer": [40, 317, 319, 321, 322, 328, 329, 330, 331, 333, 1730], "clearer": [40, 325, 340], "mind": [40, 317, 319, 333], "posit": [40, 42, 49, 50, 51, 60, 61, 102, 103, 116, 117, 132, 133, 140, 141, 144, 145, 177, 178, 255, 256, 269, 270, 285, 286, 293, 294, 297, 298, 316, 319, 329, 331, 332, 333, 334, 340, 353, 370, 371, 374, 380, 396, 397, 400, 407, 469, 470, 491, 492, 552, 588, 591, 677, 678, 681, 818, 821, 823, 826, 903, 906, 933, 936, 938, 941, 999, 1015, 1049, 1052, 1192, 1311, 1312, 1315, 1327, 1330, 1459, 1475, 1478, 1500, 1503, 1567, 1588, 1594, 1610, 1613, 1702, 1703, 1706, 1708, 1711, 1726], "keyword": [40, 49, 50, 51, 162, 165, 166, 167, 168, 319, 321, 322, 329, 330, 331, 332, 333, 334, 340, 387, 394, 470, 511, 514, 999, 1006, 1015, 1125, 1181, 1544, 1550, 1657, 1692, 1696], "strategi": [40, 329, 332], "draw": [40, 148, 149, 301, 302, 332, 333, 416, 417, 1567, 1568, 1571, 1578, 1581, 1583, 1586], "realli": [41, 319, 354, 1729, 1730], "gh": 41, "your_fold": 41, "cours": [41, 42, 316, 323, 334, 335, 340, 354, 1729, 1730], "whatev": [41, 319, 354], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 324, 331], "licens": [41, 1727], "expir": 41, "abl": [41, 42, 165, 166, 316, 321, 328, 330, 331, 335, 337, 342, 1727, 1730], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 110, 111, 138, 139, 158, 159, 263, 264, 291, 292, 311, 312, 318, 321, 323, 332, 333, 387, 392, 393, 552, 576, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1459, 1475, 1478, 1515, 1518, 1702, 1703, 1706, 1708, 1711, 1725], "bui": [41, 1730], "paid": 41, "pace": 41, "align": [41, 42, 112, 113, 165, 166, 265, 266, 337, 339, 396, 397, 1713, 1730], "stabl": [41, 132, 133, 154, 155, 285, 286, 307, 308, 318, 321, 337, 354, 370, 371, 999, 1070, 1071, 1141, 1142, 1149, 1152, 1154, 1157, 1641, 1642, 1645, 1652, 1655], "mayb": [41, 49, 52, 53, 337, 339], "person": [41, 42], "experi": [41, 333, 338, 340, 354], "avoid": [41, 42, 318, 319, 321, 326, 329, 331, 333, 334, 677, 793, 796, 858, 861, 999, 1015, 1724], "abil": [41, 335, 338, 354, 1724], "certain": [41, 42, 165, 166, 316, 321, 333, 335, 354, 470, 472, 473, 505, 506, 508, 509, 1728], "perhap": [41, 339, 340, 341, 354, 1730], "track": [41, 42, 1544, 1556, 1724], "click": [41, 42, 320, 324, 338, 1714], "icon": [41, 42], "side": [41, 42, 154, 155, 307, 308, 1641, 1647, 1650], "left": [41, 42, 102, 103, 128, 129, 140, 141, 150, 151, 154, 155, 255, 256, 281, 282, 293, 294, 303, 304, 307, 308, 321, 323, 374, 382, 400, 402, 427, 428, 677, 733, 736, 1311, 1337, 1340, 1359, 1362, 1403, 1407, 1423, 1427, 1594, 1595, 1598, 1641, 1647, 1650], "panel": 41, "drop": [41, 354], "down": [41, 333, 400, 403, 1713, 1724, 1730], "virtualenv": 41, "o": [41, 315, 337, 999, 1125], "tick": [41, 42, 320], "test_array_api": [41, 42, 316, 333], "r": [41, 42, 165, 166, 315, 1193, 1202, 1311, 1388, 1391, 1459, 1530, 1534], "txt": [41, 316, 334], "visual": [41, 331, 354, 1724, 1726, 1729], "mitig": [41, 1730], "conflict": [41, 42, 331, 340], "particular": [41, 42, 316, 318, 321, 323, 329, 330, 331, 332, 333, 334, 335, 677, 678, 681, 878, 881, 1720, 1724, 1730], "system": [41, 42, 318, 321, 354, 1311, 1398, 1401, 1722, 1724, 1727, 1729, 1731], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 332], "deploy": [41, 1723, 1726, 1727, 1730, 1731], "top": [41, 42, 116, 117, 144, 145, 269, 270, 321, 331, 333, 340, 341, 400, 411, 1724, 1728], "press": [41, 42, 340, 1714], "ok": 41, "debug": [41, 42, 319, 320, 333, 335, 340, 1724], "dialog": 41, "invalid": [41, 158, 159, 311, 312, 321, 326, 1311, 1428, 1432, 1459, 1475, 1478, 1702, 1703, 1706, 1708, 1711], "caus": [41, 42, 316, 318, 319, 320, 321, 323, 330, 333, 354], "earlier": [41, 42], "necessari": [41, 42, 144, 145, 297, 298, 318, 319, 323, 329, 330, 331, 333, 335, 1459, 1495, 1498], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 132, 133, 285, 286, 293, 294, 315, 374, 375, 470, 511, 514, 999, 1016, 1019, 1021, 1024, 1245, 1284, 1287, 1311, 1359, 1362, 1433, 1437, 1544, 1552], "keyr": 41, "fssl": 41, "download": [41, 333], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "architectur": [41, 342, 354, 1722, 1723, 1724, 1727, 1728, 1729], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 165, 166, 175, 176, 322, 328, 339, 341, 643, 657, 663], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 319, 333, 354, 1724, 1731], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 146, 147, 299, 300, 342, 1562, 1563, 1566], "coupl": [41, 317, 339, 341, 1724], "unit": [41, 45, 46, 163, 164, 316, 321, 331, 332, 333, 354, 431, 432, 435, 437, 440, 447, 450, 1725, 1728], "test_ab": [41, 333], "context": [41, 42, 138, 139, 291, 292, 323, 643, 999, 1126, 1245, 1301, 1304], "menu": 41, "editor": 41, "green": [41, 42, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 1774, 1775], "appear": [41, 42, 335, 400, 402, 403, 999, 1192], "pytest": [41, 42, 316, 333], "keyboard": 41, "shortcut": [41, 387, 394], "displai": [41, 319, 333, 340], "screenshot": 41, "ctrl": [41, 42], "shift": [41, 42, 144, 145, 162, 167, 168, 171, 172, 297, 298, 323, 327, 370, 371, 677, 733, 736, 743, 746, 1459, 1500, 1503], "bottom": [41, 1730], "screen": [41, 165, 166, 340], "elsewher": [41, 470, 491, 492, 1594, 1615, 1619], "test_elementwis": 41, "tab": [41, 320, 340, 1714], "progress": [41, 42, 342, 1311, 1423, 1427], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 316], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 316], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 316, 320, 332], "test_funct": [41, 42, 320, 332, 333], "test_cor": [41, 42, 320, 332], "wish": [41, 331], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "dure": [41, 134, 135, 156, 157, 165, 166, 175, 176, 287, 288, 309, 310, 319, 321, 322, 325, 328, 329, 330, 331, 332, 333, 335, 354, 467, 468, 643, 668, 672, 999, 1181, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1311, 1354, 1357, 1540, 1541, 1542, 1543, 1657, 1688, 1691, 1697, 1701, 1724, 1725, 1730], "simplest": [41, 323, 333, 335], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 102, 103, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 354, 370, 371, 374, 380, 383, 384, 387, 394, 396, 397, 400, 404, 408, 411, 422, 425, 431, 462, 465, 470, 472, 473, 491, 492, 499, 500, 503, 505, 506, 508, 509, 521, 524, 552, 555, 558, 577, 578, 579, 581, 604, 627, 643, 666, 667, 677, 678, 681, 683, 686, 693, 696, 698, 701, 708, 711, 753, 756, 778, 781, 783, 786, 798, 801, 803, 806, 808, 811, 813, 816, 833, 836, 838, 841, 843, 846, 893, 896, 898, 901, 903, 906, 913, 916, 918, 921, 923, 926, 933, 936, 943, 946, 983, 987, 988, 992, 999, 1015, 1016, 1019, 1021, 1024, 1026, 1028, 1030, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1078, 1079, 1086, 1087, 1090, 1092, 1095, 1102, 1129, 1132, 1134, 1137, 1141, 1142, 1144, 1159, 1163, 1185, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1214, 1217, 1226, 1232, 1244, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1327, 1330, 1359, 1362, 1364, 1366, 1368, 1371, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1433, 1437, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1490, 1493, 1495, 1498, 1535, 1539, 1540, 1541, 1542, 1544, 1548, 1549, 1550, 1551, 1552, 1557, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1588, 1594, 1595, 1598, 1600, 1603, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1724, 1725], "becaus": [41, 42, 317, 318, 319, 321, 322, 324, 327, 328, 329, 330, 331, 332, 333, 335, 337, 341, 342, 354, 1724, 1727, 1730], "header": [41, 42], "summari": [41, 42, 165, 166, 333, 552, 577, 578, 579, 604, 634, 999, 1026, 1079], "recommend": [41, 42, 318, 677, 878, 881, 883, 886, 938, 941, 1657, 1676, 1679, 1688, 1691], "advanc": [41, 1723], "q": [41, 42, 291, 292, 315, 354, 1245, 1306, 1309, 1311, 1337, 1340, 1388, 1391, 1544, 1552], "fix": [41, 42, 320, 321, 333, 334], "arrow": 41, "button": [41, 42], "funcion": 41, "target": [41, 315, 332, 334, 336, 340, 341, 342, 643, 647, 1714, 1720, 1722, 1723, 1724, 1727, 1729, 1730], "test_stat": [41, 320], "test_submodule_nam": 41, "test_function_nam": 41, "debugg": 41, "studio": 41, "easiest": 41, "effici": [41, 42, 319, 326, 328, 329, 330, 333, 337, 340, 354, 1724, 1726, 1727], "afterward": [41, 340], "background": [41, 1724, 1726], "restart": 41, "corner": [41, 42, 333], "overlap": [41, 334, 335, 1725], "test_file_path": 41, "test_fn_nam": 41, "enter": [41, 42, 317, 321, 322, 327, 329, 643, 1193, 1226, 1232, 1244], "forward": [41, 318, 324, 333, 334, 335, 342, 353, 354, 1724, 1725], "slash": 41, "regular": [41, 42, 331, 332, 1724], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 327, 331, 334, 335, 340, 354, 1714, 1724, 1725, 1726, 1730], "vm": 41, "azur": 41, "cloud": [41, 353, 1726], "mean": [41, 42, 132, 133, 138, 139, 148, 149, 156, 157, 165, 166, 285, 286, 291, 292, 301, 302, 309, 310, 313, 314, 315, 316, 318, 319, 321, 322, 323, 328, 330, 331, 333, 334, 335, 337, 339, 340, 341, 342, 353, 354, 387, 394, 396, 397, 643, 667, 999, 1036, 1039, 1193, 1203, 1213, 1233, 1245, 1271, 1274, 1279, 1282, 1311, 1327, 1330, 1540, 1541, 1542, 1543, 1544, 1550, 1567, 1573, 1576, 1578, 1581, 1620, 1621, 1625, 1657, 1713, 1714, 1721, 1724], "longer": [41, 321, 329, 330, 333, 1724], "worri": 41, "agnost": [41, 317, 327, 337, 339, 342, 354, 1714, 1730, 1731], "usual": [41, 316, 331, 333, 335], "favourit": 41, "theme": 41, "unsupport": [41, 326, 331, 552, 596, 597, 643, 656, 999, 1054, 1055], "old": [41, 165, 166, 318, 330], "slow": 41, "ipad": 41, "long": [41, 42, 320, 321, 323, 337, 1245, 1296, 1299, 1724], "cool": [41, 334], "sever": [41, 42, 334, 354, 1311, 1349, 1352, 1722, 1728], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 316, 332, 387, 394, 1544, 1545, 1555], "dropdown": 41, "master": [41, 42, 316, 334, 1724], "view": [41, 42, 116, 117, 269, 270, 320, 400, 407, 410, 470, 494, 497, 1724], "built": [41, 42, 319, 333, 338, 470, 472, 473, 1713, 1723, 1724, 1728], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 102, 103, 110, 111, 148, 149, 156, 157, 162, 167, 168, 171, 172, 177, 178, 255, 256, 263, 264, 285, 286, 291, 292, 297, 298, 301, 302, 309, 310, 323, 374, 381, 400, 401, 470, 500, 503, 552, 588, 591, 677, 693, 696, 723, 726, 743, 746, 773, 776, 868, 871, 938, 941, 943, 946, 999, 1021, 1024, 1036, 1039, 1078, 1087, 1090, 1092, 1095, 1144, 1149, 1152, 1185, 1245, 1247, 1250, 1291, 1294, 1311, 1332, 1335, 1349, 1352, 1378, 1381, 1408, 1412, 1413, 1417, 1459, 1500, 1503, 1530, 1534, 1567, 1573, 1576, 1578, 1581, 1594, 1610, 1613, 1620, 1621, 1625, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1727], "minut": 41, "launch": 41, "12": [41, 60, 61, 102, 103, 110, 111, 132, 133, 148, 149, 156, 157, 177, 178, 263, 264, 285, 286, 291, 292, 293, 294, 297, 298, 299, 300, 301, 302, 309, 310, 318, 319, 321, 323, 334, 387, 390, 391, 393, 400, 401, 677, 693, 696, 743, 746, 748, 751, 763, 766, 773, 776, 778, 781, 903, 906, 943, 946, 999, 1021, 1024, 1036, 1039, 1071, 1134, 1137, 1142, 1149, 1152, 1245, 1291, 1294, 1311, 1332, 1335, 1359, 1362, 1378, 1381, 1413, 1417, 1418, 1422, 1459, 1480, 1483, 1500, 1503, 1530, 1534, 1562, 1563, 1566, 1567, 1573, 1576, 1578, 1581, 1594, 1615, 1619, 1620, 1621, 1625, 1657, 1658, 1661, 1668, 1671, 1692, 1696], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 337, 339, 341, 342, 354, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 565, 568, 627, 643, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1015, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1061, 1064, 1129, 1132, 1134, 1137, 1139, 1182, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1233, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1544, 1557, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1605, 1608, 1610, 1613, 1615, 1619, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1725], "That": [41, 42, 333, 339, 340, 341, 677, 938, 941, 1725], "approach": [41, 42, 319, 321, 328, 329, 333, 335, 339, 340, 354, 1721, 1728, 1730], "colour": 41, "applic": [41, 321, 322, 329, 341, 1245, 1301, 1304, 1306, 1309, 1544, 1550, 1556, 1721, 1722, 1724, 1726, 1728, 1730], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 102, 103, 138, 139, 162, 167, 168, 177, 178, 255, 256, 285, 286, 291, 292, 293, 294, 301, 302, 340, 341, 374, 375, 376, 552, 587, 677, 743, 746, 963, 966, 968, 971, 999, 1036, 1039, 1193, 1214, 1217, 1245, 1271, 1274, 1279, 1282, 1311, 1378, 1381, 1408, 1412, 1657, 1668, 1671, 1714, 1729], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 316], "array_api_test": [41, 42, 316], "refresh": 41, "conftest": 41, "nutshel": [41, 327], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 169, 177, 178, 317, 319, 322, 323, 324, 327, 328, 329, 330, 332, 333, 334, 339, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1159, 1163, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713, 1714, 1722], "attempt": [41, 326, 354], "succe": 41, "properli": [41, 315, 325, 333], "server": [42, 1724], "suitabl": [42, 263, 264, 319, 334, 387, 390, 391, 1641, 1647, 1650, 1724], "quick": [42, 315, 332, 341], "tendenc": 42, "land": 42, "end": [42, 318, 330, 334, 335, 336, 353, 354, 387, 394, 400, 401, 470, 472, 473, 677, 713, 716, 1714, 1722, 1727], "world": [42, 1726], "come": [42, 331, 334, 335, 341, 352, 1713, 1714, 1724], "fly": [42, 1724], "hard": [42, 333, 339, 1724], "receiv": [42, 321, 322, 333, 999, 1006, 1125], "internship": 42, "bug": [42, 331, 333, 334], "serv": [42, 317, 319, 327, 328, 333, 335, 336, 1713, 1714, 1722], "suspect": 42, "observ": [42, 325, 337, 1726], "act": [42, 323, 354, 1731], "placehold": [42, 317, 326, 327, 1544, 1556, 1713], "ii": [42, 1657, 1668, 1671], "iii": 42, "issue_numb": 42, "No": [42, 1724], "soon": [42, 321, 352, 354, 1714], "partial": [42, 165, 166, 1193, 1213], "solut": [42, 319, 321, 333, 335, 1311, 1398, 1401, 1722, 1726], "respond": 42, "shape": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 337, 339, 340, 341, 342, 370, 371, 374, 376, 383, 387, 390, 391, 394, 396, 397, 398, 400, 407, 409, 410, 411, 416, 417, 420, 421, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 643, 663, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1073, 1076, 1129, 1132, 1134, 1137, 1145, 1164, 1170, 1186, 1192, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1605, 1608, 1610, 1613, 1615, 1619, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1702, 1703, 1706, 1708, 1711, 1714], "dai": [42, 320], "warn": 42, "without": [42, 165, 166, 317, 319, 321, 322, 323, 325, 326, 327, 328, 332, 333, 334, 335, 339, 340, 341, 353, 354, 999, 1078, 1144, 1181, 1459, 1495, 1498, 1544, 1546, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1721, 1724, 1725, 1726, 1730], "likewis": [42, 319, 321, 324, 327, 328, 331, 335, 340, 1730], "freed": 42, "flag": [42, 134, 135, 165, 166, 287, 288, 321, 329, 330, 331, 333, 643, 648, 1193, 1208, 1211], "remain": [42, 144, 145, 150, 151, 297, 298, 303, 304, 320, 323, 334, 335, 354, 677, 693, 696, 903, 906, 938, 941, 1459, 1495, 1498, 1544, 1550, 1594, 1610, 1613], "short": [42, 321, 331, 334, 337, 341, 1245, 1296, 1299], "basi": [42, 316, 340], "situat": [42, 342], "upon": [42, 323, 330, 333, 335, 354, 1723, 1724], "period": [42, 263, 264, 334, 387, 388, 389, 390, 391], "unabl": [42, 335], "obvious": 42, "never": [42, 144, 145, 297, 298, 321, 331, 333, 335, 1459, 1495, 1498], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 321, 323, 331, 339, 342, 1730], "inact": 42, "me": 42, "unfairli": 42, "definit": [42, 102, 103, 140, 141, 177, 178, 293, 294, 321, 328, 339, 374, 384, 1311, 1312, 1315], "investig": 42, "maximum": [42, 60, 61, 102, 103, 132, 133, 134, 135, 144, 145, 150, 151, 162, 165, 166, 167, 168, 177, 178, 255, 256, 285, 286, 287, 288, 297, 298, 303, 304, 323, 340, 374, 377, 387, 394, 643, 667, 677, 999, 1016, 1019, 1021, 1024, 1049, 1052, 1193, 1214, 1217, 1311, 1359, 1362, 1459, 1460, 1463, 1544, 1556, 1594, 1595, 1598, 1657, 1672, 1675, 1680, 1683, 1714, 1731], "incomplet": 42, "three": [42, 319, 323, 331, 333, 335, 336, 337, 470, 511, 514, 1714, 1725, 1730], "per": [42, 110, 111, 138, 139, 263, 264, 291, 292, 331, 333, 340, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282], "self": [42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 319, 325, 331, 332, 337, 339, 340, 341, 342, 643, 1714], "assign": [42, 318, 321, 326, 330, 339], "sequenc": [42, 116, 117, 120, 121, 144, 145, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 273, 274, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 322, 323, 325, 333, 334, 337, 342, 353, 374, 384, 400, 405, 407, 412, 416, 417, 467, 468, 999, 1125, 1192, 1311, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1544, 1551, 1560, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1727], "regist": 42, "wherea": [42, 317, 319, 321, 322, 323, 327, 328, 333, 334, 342, 1721], "primarili": [42, 319, 677, 938, 941, 1724], "invit": 42, "roadmap": [42, 320, 1714], "mainli": [42, 315, 338, 340, 1713, 1724], "extend": [42, 318, 324, 327, 331, 334, 354, 387, 394, 1721, 1724, 1730], "ideal": [42, 330, 340], "Such": [42, 333, 1311, 1423, 1427], "easier": [42, 317, 321, 331, 334, 1713, 1724, 1726], "interv": [42, 148, 149, 158, 159, 301, 302, 311, 312, 470, 472, 473, 505, 506, 508, 509, 1311, 1428, 1432, 1459, 1460, 1463, 1475, 1478, 1515, 1518, 1567, 1573, 1576, 1583, 1586, 1702, 1703, 1706, 1708, 1711], "forth": 42, "rare": [42, 322, 354, 1729], "scenario": 42, "someon": [42, 354], "someth": [42, 334, 340, 341, 354, 1730], "unfortun": 42, "redund": [42, 321, 325, 331, 335], "behind": [42, 134, 135, 315, 327, 333, 336, 338], "well": [42, 285, 286, 320, 321, 330, 331, 332, 333, 341, 342, 353, 999, 1081, 1084, 1311, 1398, 1401, 1723, 1724, 1725, 1729], "practic": [42, 320, 1727], "separ": [42, 317, 319, 333, 337, 339, 340, 1725, 1729], "branch": [42, 316, 354, 467, 468, 677, 713, 716, 1724], "role": [42, 331, 338, 1725, 1727, 1731], "kept": [42, 162, 165, 166, 167, 168, 330, 334, 1540, 1541, 1542], "date": [42, 334], "upstream": [42, 316], "complic": [42, 332, 337], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 316, 321, 337, 1459, 1475, 1478, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "abort": 42, "tediou": [42, 323], "resolut": [42, 552, 588, 591], "stash": 42, "reinstat": 42, "fetch": [42, 316], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 316], "atlassian": 42, "tutori": [42, 331], "wrote": 42, "piec": [42, 317, 328, 329, 337, 1720, 1722], "tag": 42, "navig": [42, 315], "blame": 42, "revis": 42, "log": [42, 60, 61, 140, 141, 177, 178, 293, 294, 319, 320, 323, 328, 330, 331, 333, 335, 337, 340, 470, 508, 509, 677, 858, 861, 868, 871, 1311, 1393, 1396, 1714], "eg": 42, "16": [42, 44, 47, 48, 60, 61, 102, 103, 110, 111, 138, 139, 140, 141, 148, 149, 156, 157, 162, 167, 168, 173, 174, 177, 178, 263, 264, 285, 286, 291, 292, 297, 298, 301, 302, 323, 340, 374, 376, 387, 392, 393, 400, 401, 552, 599, 602, 677, 743, 746, 858, 861, 978, 982, 1193, 1233, 1245, 1279, 1282, 1291, 1294, 1311, 1312, 1315, 1332, 1335, 1378, 1381, 1408, 1412, 1459, 1530, 1534, 1544, 1552, 1594, 1615, 1619, 1657, 1663, 1666, 1668, 1671], "past": [42, 332, 1724], "l": [42, 140, 141, 177, 178, 293, 294, 315, 1311, 1312, 1315, 1337, 1340, 1341, 1343, 1354, 1357, 1418, 1422], "filepath": [42, 165, 166, 316], "grep": 42, "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": [42, 400, 412], "highlight": [42, 323], "previou": [42, 134, 135, 287, 288, 316, 327, 331, 333, 335, 342, 354, 552, 638, 641, 999, 1182, 1184, 1185, 1186, 1193, 1198, 1201, 1214, 1217, 1727], "whenev": [42, 320, 321, 325, 329, 333, 340], "think": [42, 323, 1725], "gain": [42, 316, 336, 341, 1724], "quit": [42, 317, 323, 324, 328, 329, 333, 335, 1724, 1730], "newli": [42, 56, 57, 173, 174, 330, 333, 467, 468, 552, 555, 558, 999, 1015], "cannot": [42, 316, 318, 321, 331, 337, 342, 1730], "least": [42, 102, 103, 116, 117, 255, 256, 269, 270, 317, 321, 323, 328, 333, 374, 381, 400, 402, 1311, 1354, 1357], "approv": 42, "hash": [42, 340], "cancel": 42, "speedup": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 140, 141, 148, 149, 177, 178, 293, 294, 301, 302, 323, 331, 333, 335, 337, 354, 470, 491, 492, 534, 538, 677, 893, 896, 1311, 1312, 1315, 1567, 1583, 1586, 1713, 1720, 1721, 1722, 1724, 1725, 1730, 1731], "span": [42, 335, 1722, 1730], "intent": [42, 330], "larg": [42, 340, 677, 693, 696, 903, 906, 1724], "discourag": 42, "philosophi": 42, "increment": [42, 132, 133, 285, 286, 334, 999, 1092, 1095, 1724], "valuabl": 42, "infrequ": 42, "earli": [42, 1714, 1724], "wast": 42, "spot": [42, 323, 328], "mistak": [42, 326], "propos": [42, 331, 335, 1724], "mountain": 42, "around": [42, 162, 165, 166, 167, 168, 317, 327, 328, 331, 334, 339, 354, 387, 394, 1713, 1722, 1724, 1731], "advoc": [42, 354], "style": [42, 387, 394, 1594, 1610, 1613, 1724], "were": [42, 165, 166, 173, 174, 321, 326, 333, 334, 335, 337, 1724, 1725, 1730], "actual": [42, 315, 328, 330, 333, 335, 336, 341, 354, 1725, 1730], "aim": [42, 316, 333, 336, 1722, 1724, 1727], "session": [42, 1724], "smaller": [42, 144, 145, 297, 298, 337, 1459, 1460, 1463, 1500, 1503, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "exact": [42, 163, 164, 165, 166, 316, 323, 337, 1620, 1621, 1625, 1631, 1635], "beauti": 42, "particularli": [42, 340, 354, 1722], "concern": [42, 315, 319, 323, 330, 335, 336, 1730], "difficult": [42, 316, 321, 333, 354, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "undo": 42, "stress": 42, "frequenc": [42, 132, 133, 285, 286, 320, 999, 1049, 1052], "advantag": [42, 330, 331, 1724], "nifti": 42, "reassur": 42, "isol": [42, 1725, 1730], "fact": [42, 331, 333, 337, 340], "local_path_to_ivi": 42, "overwrit": [42, 165, 166, 330, 331, 337, 643, 667], "subfold": [42, 332, 333, 334], "wide": [42, 333, 1722, 1724], "via": [42, 316, 319, 321, 322, 330, 331, 334, 335, 337, 339, 340, 353, 1544, 1545, 1554, 1555, 1724], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 316, 321, 324, 325, 327, 329, 332, 333, 353, 1713, 1720, 1722, 1723, 1724, 1727, 1730], "cpu": [42, 54, 55, 58, 59, 148, 149, 175, 176, 285, 286, 301, 302, 322, 331, 354, 470, 499, 505, 506, 508, 509, 521, 524, 547, 551, 643, 648, 649, 652, 654, 659, 662, 664, 665, 668, 672, 673, 675, 676, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1722, 1724, 1727, 1729], "gpu": [42, 322, 339, 643, 648, 654, 658, 660, 662, 664, 665, 666, 673, 675, 676, 1722, 1724, 1727, 1728, 1729], "combin": [42, 162, 165, 166, 167, 168, 317, 319, 321, 323, 328, 333, 335, 342, 999, 1054, 1055, 1311, 1317, 1320, 1354, 1357, 1724], "num": [42, 171, 172, 327, 337, 470, 505, 506, 508, 509], "integ": [42, 44, 47, 48, 60, 61, 120, 121, 144, 145, 148, 149, 156, 157, 158, 159, 162, 165, 166, 167, 168, 177, 178, 273, 274, 293, 294, 297, 298, 301, 302, 309, 310, 311, 312, 319, 321, 329, 332, 333, 337, 339, 374, 376, 387, 394, 416, 417, 470, 472, 473, 499, 552, 599, 602, 604, 616, 619, 627, 628, 631, 635, 677, 678, 681, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 798, 801, 803, 806, 888, 891, 923, 926, 938, 941, 943, 946, 988, 992, 993, 997, 999, 1069, 1192, 1311, 1327, 1330, 1364, 1366, 1428, 1432, 1433, 1437, 1459, 1505, 1508, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1589, 1592, 1641, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "greater": [42, 44, 47, 48, 60, 61, 102, 103, 148, 149, 162, 167, 168, 177, 178, 301, 302, 332, 374, 384, 677, 683, 686, 698, 701, 713, 716, 733, 736, 743, 746, 798, 801, 803, 806, 923, 926, 938, 941, 948, 951, 988, 992, 1311, 1317, 1320, 1364, 1366, 1459, 1510, 1513, 1567, 1583, 1586], "prompt": [42, 1714], "whole": 42, "multipli": [42, 60, 61, 156, 157, 177, 178, 317, 318, 319, 323, 677, 693, 696, 973, 977, 1657, 1658, 1661], "cursor": 42, "alt": 42, "j": [42, 54, 55, 140, 141, 171, 172, 177, 178, 293, 294, 315, 470, 521, 524, 999, 1007, 1009, 1311, 1418, 1422, 1657, 1668, 1671, 1720], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 333, 339, 999, 1128], "store": [42, 56, 57, 132, 133, 134, 135, 140, 141, 144, 145, 165, 166, 173, 174, 285, 286, 287, 288, 293, 294, 297, 298, 317, 318, 319, 324, 331, 337, 339, 340, 341, 470, 547, 551, 999, 1049, 1052, 1193, 1239, 1243, 1311, 1418, 1422, 1459, 1505, 1508, 1713], "variabl": [42, 132, 133, 134, 135, 146, 147, 165, 166, 285, 286, 287, 288, 299, 300, 318, 321, 324, 326, 327, 330, 333, 334, 337, 340, 341, 342, 354, 416, 417, 999, 1010, 1013, 1097, 1100, 1102, 1103, 1106, 1109, 1112, 1119, 1122, 1159, 1163, 1193, 1198, 1201, 1202, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1233, 1239, 1243, 1245, 1301, 1304, 1311, 1398, 1401, 1540, 1541, 1542, 1543, 1562, 1563, 1566, 1714, 1725], "fragment": [42, 1720, 1722, 1726], "except": [42, 132, 133, 144, 145, 148, 149, 158, 159, 165, 166, 285, 286, 293, 294, 301, 302, 311, 312, 315, 316, 317, 321, 324, 326, 327, 330, 331, 335, 337, 339, 354, 552, 565, 568, 999, 1010, 1013, 1028, 1030, 1097, 1100, 1140, 1159, 1163, 1181, 1183, 1311, 1383, 1386, 1459, 1465, 1468, 1475, 1478, 1515, 1518, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1610, 1613, 1702, 1703, 1706, 1708, 1711], "pychram": 42, "depth": [42, 54, 55, 171, 172, 340, 341, 342, 353, 470, 521, 524, 999, 1079, 1544, 1556], "dummi": 42, "wherein": [42, 329, 333], "evalu": [42, 60, 61, 165, 166, 177, 178, 269, 270, 319, 321, 335, 400, 406, 677, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 908, 911, 948, 951, 968, 971, 1193, 1233, 1544, 1545, 1554, 1555, 1702, 1703, 1706, 1708, 1711, 1724], "failur": [42, 316, 320, 333], "arraywithactiv": [44, 45, 47, 48, 339], "arraywithcr": [44, 47, 48, 54, 339], "arraywithdatatyp": [44, 47, 48, 56, 339], "arraywithdevic": [44, 47, 48, 58, 339], "arraywithgener": [44, 47, 48, 132, 339], "arraywithgradi": [44, 47, 48, 134, 339], "arraywithimag": [44, 47, 48, 136, 339], "arraywithlay": [44, 47, 48, 138, 339], "arraywithlinearalgebra": [44, 47, 48, 140, 339], "arraywithloss": [44, 47, 48, 142, 339], "arraywithmanipul": [44, 47, 48, 144, 339], "arraywithnorm": [44, 47, 48, 146, 339], "arraywithrandom": [44, 47, 48, 148, 339], "arraywithsearch": [44, 47, 48, 150, 339], "arraywithset": [44, 47, 48, 152, 339], "arraywithsort": [44, 47, 48, 154, 339], "arraywithstatist": [44, 47, 48, 156, 339], "arraywithutil": [44, 47, 48, 158, 339], "arraywithactivationsextens": [44, 47, 48, 63], "arraywithconversionsextens": [44, 47, 48, 94], "arraywithcreationextens": [44, 47, 48, 96], "arraywithdata_typeextens": [44, 47, 48, 98], "arraywithdeviceextens": [44, 47, 48, 100], "arraywithelementwiseextens": [44, 47, 48, 102], "arraywithgeneralextens": [44, 47, 48, 104], "arraywithgradientsextens": [44, 47, 48, 106], "arraywithimageextens": [44, 47, 48, 108], "arraywithlayersextens": [44, 47, 48, 110], "arraywithlinalgextens": [44, 47, 48, 112], "arraywithlossesextens": [44, 47, 48, 114], "arraywithmanipulationextens": [44, 47, 48, 116], "arraywithnormsextens": [44, 47, 48, 118], "arraywithrandomextens": [44, 47, 48, 120], "arraywithsearchingextens": [44, 47, 48, 122], "arraywithsetextens": [44, 47, 48, 124], "arraywithsortingextens": [44, 47, 48, 126], "arraywithstatisticalextens": [44, 47, 48, 128], "arraywithutilityextens": [44, 47, 48, 130], "properti": [44, 47, 48, 165, 166, 319, 323, 328, 332, 333, 339, 340, 341, 422, 1730], "transpos": [44, 47, 48, 140, 141, 165, 166, 293, 294, 330, 339, 342, 1245, 1246, 1252, 1255, 1262, 1264, 1271, 1274, 1276, 1277, 1311, 1373, 1376, 1383, 1386, 1714], "dimension": [44, 47, 48, 102, 103, 140, 141, 144, 145, 150, 151, 156, 157, 158, 159, 165, 166, 177, 178, 293, 294, 297, 298, 309, 310, 311, 312, 337, 370, 371, 374, 384, 396, 397, 400, 401, 470, 472, 473, 491, 492, 511, 514, 1311, 1317, 1320, 1322, 1325, 1344, 1347, 1354, 1357, 1368, 1371, 1378, 1381, 1383, 1386, 1428, 1432, 1433, 1437, 1459, 1505, 1508, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1721, 1724, 1731], "whose": [44, 47, 48, 54, 55, 60, 61, 102, 103, 116, 117, 132, 133, 140, 141, 144, 145, 152, 153, 171, 172, 177, 178, 255, 256, 269, 270, 285, 286, 293, 294, 297, 298, 305, 306, 309, 310, 324, 333, 400, 407, 470, 534, 538, 539, 543, 677, 688, 691, 703, 706, 718, 721, 758, 761, 763, 766, 768, 771, 923, 926, 928, 931, 953, 956, 958, 961, 978, 982, 983, 987, 999, 1015, 1159, 1163, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1459, 1480, 1483, 1500, 1503, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1657, 1668, 1671], "dimens": [44, 47, 48, 54, 55, 102, 103, 110, 111, 116, 117, 128, 129, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 162, 165, 166, 167, 168, 171, 172, 255, 256, 263, 264, 269, 270, 281, 282, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 323, 325, 332, 333, 335, 337, 340, 374, 382, 387, 392, 393, 400, 401, 410, 416, 417, 427, 428, 431, 442, 445, 457, 460, 470, 521, 524, 534, 538, 539, 543, 999, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1073, 1076, 1192, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1296, 1299, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1428, 1432, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1530, 1534, 1540, 1541, 1542, 1543, 1567, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "ax": [44, 45, 46, 47, 48, 102, 103, 116, 117, 128, 129, 140, 141, 144, 145, 150, 151, 156, 157, 158, 159, 163, 164, 255, 256, 269, 270, 281, 282, 293, 294, 297, 298, 303, 304, 309, 310, 311, 312, 321, 323, 333, 334, 337, 339, 374, 382, 387, 394, 400, 407, 410, 427, 428, 643, 667, 999, 1192, 1311, 1359, 1362, 1398, 1401, 1413, 1417, 1433, 1437, 1459, 1470, 1473, 1480, 1483, 1485, 1488, 1500, 1503, 1510, 1513, 1520, 1524, 1535, 1539, 1594, 1595, 1598, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "permut": [44, 47, 48, 1459, 1485, 1488, 1520, 1524], "__add__": [44, 47, 48, 162, 167, 168, 317, 319, 323, 324, 327, 331, 339], "variant": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 323, 324, 335], "wrap": [44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 337, 339, 342, 354, 355, 365, 387, 394, 999, 1015, 1193, 1239, 1243, 1713, 1720, 1724, 1725, 1730, 1731], "minim": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 112, 113, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 324, 330, 332, 335, 337, 1722, 1730], "input": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 126, 127, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 354, 355, 365, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 387, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 408, 410, 411, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 599, 602, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 635, 637, 643, 648, 649, 652, 661, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1005, 1007, 1009, 1010, 1013, 1016, 1019, 1021, 1024, 1028, 1030, 1031, 1034, 1036, 1039, 1041, 1044, 1046, 1048, 1049, 1052, 1056, 1059, 1061, 1064, 1072, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1129, 1132, 1134, 1137, 1139, 1143, 1147, 1149, 1152, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1182, 1184, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1233, 1234, 1238, 1239, 1243, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1550, 1551, 1552, 1555, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1725, 1728], "numer": [44, 47, 48, 56, 57, 60, 61, 132, 133, 140, 141, 148, 149, 150, 151, 162, 167, 168, 173, 174, 177, 178, 285, 286, 293, 294, 301, 302, 303, 304, 307, 308, 321, 329, 331, 332, 333, 334, 335, 337, 341, 470, 511, 514, 552, 555, 558, 677, 678, 681, 693, 696, 753, 756, 773, 776, 793, 796, 798, 801, 803, 806, 818, 821, 823, 826, 828, 831, 838, 841, 878, 881, 883, 886, 903, 906, 908, 911, 913, 916, 923, 926, 938, 941, 948, 951, 968, 971, 973, 977, 988, 992, 993, 997, 999, 1070, 1071, 1141, 1142, 1149, 1152, 1154, 1157, 1311, 1317, 1320, 1344, 1347, 1354, 1357, 1378, 1381, 1403, 1407, 1413, 1417, 1418, 1422, 1428, 1432, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1657, 1672, 1675, 1684, 1687, 1692, 1696, 1721, 1724, 1730], "broadcast": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 319, 321, 323, 324, 333, 334, 337, 374, 376, 383, 387, 394, 396, 397, 398, 400, 410, 411, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 555, 558, 560, 563, 565, 568, 643, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1056, 1059, 1061, 1064, 1129, 1132, 1134, 1137, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1398, 1401, 1408, 1412, 1413, 1417, 1418, 1422, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1535, 1539, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1615, 1619, 1620, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "element": [44, 45, 46, 47, 48, 54, 55, 60, 61, 102, 103, 116, 117, 128, 129, 132, 133, 140, 141, 144, 145, 148, 149, 150, 151, 152, 153, 156, 157, 162, 163, 164, 165, 166, 167, 168, 171, 172, 177, 178, 255, 256, 265, 266, 269, 270, 281, 282, 285, 286, 293, 294, 297, 298, 301, 302, 303, 304, 305, 306, 309, 310, 324, 332, 333, 335, 337, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 400, 401, 402, 403, 404, 406, 411, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 472, 473, 482, 484, 499, 500, 503, 534, 538, 539, 543, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1007, 1009, 1016, 1019, 1021, 1024, 1056, 1059, 1171, 1175, 1176, 1180, 1193, 1226, 1244, 1245, 1284, 1287, 1311, 1317, 1320, 1327, 1330, 1337, 1340, 1354, 1357, 1388, 1391, 1403, 1407, 1459, 1460, 1463, 1480, 1483, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1544, 1547, 1567, 1568, 1571, 1594, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1728], "wise": [44, 45, 46, 47, 48, 60, 61, 102, 103, 116, 117, 140, 141, 162, 163, 164, 167, 168, 177, 178, 255, 256, 265, 266, 269, 270, 293, 294, 335, 374, 375, 377, 378, 379, 380, 381, 400, 404, 405, 406, 412, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 677, 678, 681, 683, 686, 693, 696, 698, 701, 708, 711, 713, 716, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 783, 786, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977, 993, 997, 1459, 1460, 1463], "sum": [44, 47, 48, 60, 61, 102, 103, 132, 133, 140, 141, 142, 143, 156, 157, 162, 165, 166, 167, 168, 177, 178, 255, 256, 285, 286, 293, 294, 295, 296, 309, 310, 319, 321, 328, 330, 337, 374, 382, 643, 667, 677, 693, 696, 868, 871, 999, 1036, 1039, 1129, 1132, 1134, 1137, 1245, 1306, 1309, 1311, 1359, 1362, 1403, 1407, 1418, 1422, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1657, 1663, 1666, 1668, 1671], "promot": [44, 47, 48, 56, 57, 60, 61, 102, 103, 140, 141, 162, 167, 168, 173, 174, 177, 178, 255, 256, 293, 294, 307, 308, 316, 324, 325, 328, 374, 376, 383, 552, 555, 558, 570, 573, 626, 627, 628, 631, 637, 677, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 718, 721, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 758, 761, 763, 766, 773, 776, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 888, 891, 903, 906, 923, 926, 938, 941, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 993, 997, 1311, 1312, 1315, 1317, 1320, 1344, 1347, 1349, 1352, 1354, 1357, 1364, 1366, 1368, 1371, 1378, 1381, 1383, 1386, 1398, 1401, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1515, 1518, 1657, 1676, 1679, 1688, 1691], "y": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 265, 266, 269, 270, 279, 280, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 323, 331, 332, 334, 335, 337, 339, 374, 383, 384, 387, 394, 400, 405, 411, 412, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 482, 484, 500, 503, 511, 514, 526, 527, 529, 532, 547, 551, 552, 555, 558, 560, 563, 565, 568, 583, 585, 588, 591, 599, 602, 628, 631, 643, 649, 652, 657, 661, 662, 663, 666, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 928, 931, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 993, 997, 999, 1000, 1003, 1007, 1009, 1016, 1019, 1021, 1024, 1028, 1030, 1046, 1048, 1056, 1059, 1061, 1064, 1078, 1081, 1084, 1087, 1090, 1092, 1095, 1141, 1142, 1144, 1146, 1147, 1149, 1152, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1181, 1185, 1187, 1191, 1192, 1193, 1227, 1231, 1234, 1238, 1245, 1271, 1274, 1279, 1282, 1291, 1294, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1349, 1352, 1354, 1357, 1359, 1362, 1373, 1376, 1378, 1381, 1383, 1386, 1393, 1396, 1408, 1412, 1413, 1417, 1418, 1422, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1544, 1547, 1550, 1551, 1560, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1626, 1630, 1631, 1635, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "z": [44, 47, 48, 60, 61, 132, 133, 140, 141, 142, 143, 148, 149, 162, 167, 168, 177, 178, 285, 286, 293, 294, 295, 296, 301, 302, 318, 319, 323, 337, 339, 643, 657, 677, 693, 696, 713, 716, 723, 726, 738, 741, 748, 751, 808, 811, 813, 816, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 868, 871, 883, 886, 888, 891, 893, 896, 898, 901, 973, 977, 999, 1007, 1009, 1056, 1059, 1061, 1064, 1087, 1090, 1092, 1095, 1134, 1137, 1147, 1149, 1152, 1181, 1192, 1311, 1317, 1320, 1354, 1357, 1443, 1444, 1447, 1449, 1452, 1459, 1460, 1463, 1544, 1547, 1551, 1560, 1567, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1657, 1668, 1671, 1672, 1675, 1680, 1683, 1684, 1687], "__le__": [44, 47, 48], "equal": [44, 47, 48, 54, 55, 56, 57, 60, 61, 132, 133, 140, 141, 144, 145, 148, 149, 154, 155, 156, 157, 162, 165, 166, 167, 168, 173, 174, 177, 178, 285, 286, 293, 294, 297, 298, 301, 302, 307, 308, 319, 321, 323, 325, 470, 491, 492, 499, 500, 503, 552, 555, 558, 677, 733, 736, 743, 746, 818, 821, 823, 826, 923, 926, 943, 946, 999, 1000, 1003, 1007, 1009, 1192, 1311, 1332, 1335, 1364, 1366, 1368, 1371, 1383, 1386, 1459, 1460, 1463, 1470, 1473, 1505, 1508, 1535, 1539, 1567, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1676, 1679, 1688, 1691, 1692, 1696, 1697, 1701], "bool": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 102, 103, 116, 117, 128, 129, 132, 133, 134, 135, 140, 141, 144, 145, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 321, 323, 325, 330, 331, 333, 334, 337, 342, 374, 380, 382, 387, 388, 389, 390, 391, 400, 411, 427, 428, 467, 468, 470, 475, 477, 499, 505, 506, 511, 514, 552, 555, 558, 570, 573, 575, 577, 578, 579, 581, 582, 583, 585, 593, 594, 596, 597, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 633, 638, 642, 643, 648, 649, 652, 658, 659, 662, 663, 667, 674, 676, 677, 723, 726, 728, 731, 738, 741, 748, 751, 778, 781, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 873, 876, 878, 881, 883, 886, 893, 896, 898, 901, 913, 916, 938, 941, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1028, 1030, 1046, 1048, 1049, 1052, 1067, 1068, 1072, 1073, 1076, 1081, 1084, 1097, 1100, 1103, 1106, 1108, 1109, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1147, 1148, 1159, 1163, 1171, 1175, 1187, 1191, 1193, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1244, 1245, 1284, 1287, 1311, 1312, 1315, 1359, 1362, 1403, 1407, 1423, 1427, 1433, 1437, 1459, 1495, 1498, 1505, 1508, 1530, 1534, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1550, 1554, 1555, 1556, 1567, 1568, 1571, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "__radd__": [44, 47, 48, 162, 167, 168, 323, 324, 331], "__rrshift__": [44, 47, 48, 162, 167, 168], "bitwise_right_shift": [44, 47, 48, 60, 61, 177, 178, 677], "32": [44, 47, 48, 60, 61, 102, 103, 148, 149, 162, 167, 168, 177, 178, 255, 256, 301, 302, 340, 374, 375, 431, 437, 440, 552, 587, 677, 688, 691, 743, 746, 999, 1092, 1095, 1245, 1271, 1274, 1279, 1282, 1291, 1294, 1311, 1354, 1357, 1378, 1381, 1567, 1583, 1586, 1594, 1615, 1619, 1657, 1668, 1671, 1729], "__rshift__": [44, 47, 48, 162, 167, 168], "__rsub__": [44, 47, 48, 162, 167, 168], "subtract": [44, 47, 48, 60, 61, 162, 167, 168, 177, 178, 317, 319, 323, 387, 394, 677], "__sub__": [44, 47, 48, 162, 167, 168, 317, 319, 323, 327, 339], "nativearrai": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 116, 117, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 279, 280, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 317, 319, 323, 325, 326, 327, 328, 329, 330, 331, 334, 337, 339, 355, 365, 374, 377, 378, 379, 381, 382, 383, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 470, 475, 477, 482, 484, 486, 489, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 529, 532, 534, 538, 539, 543, 547, 551, 552, 555, 558, 560, 563, 565, 568, 570, 573, 583, 585, 588, 591, 599, 602, 606, 609, 611, 614, 616, 619, 621, 624, 627, 628, 631, 637, 643, 648, 649, 652, 661, 667, 668, 672, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1109, 1112, 1119, 1122, 1129, 1132, 1134, 1137, 1139, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1165, 1169, 1171, 1175, 1176, 1180, 1182, 1187, 1191, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1234, 1238, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1544, 1546, 1547, 1551, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713], "resid": [44, 47, 48, 331, 337, 341, 1459, 1475, 1478], "mt": [44, 47, 48, 339], "matric": [44, 47, 48, 54, 55, 140, 141, 293, 294, 353, 470, 511, 514, 534, 538, 539, 543, 1245, 1291, 1294, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1724], "n": [44, 47, 48, 54, 55, 102, 103, 120, 121, 140, 141, 144, 145, 148, 149, 150, 151, 156, 157, 158, 159, 177, 178, 293, 294, 297, 298, 301, 302, 303, 304, 309, 310, 311, 312, 315, 333, 370, 371, 374, 384, 416, 417, 470, 511, 514, 534, 538, 539, 543, 1245, 1284, 1287, 1311, 1332, 1335, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1403, 1407, 1408, 1412, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1459, 1470, 1473, 1475, 1478, 1485, 1488, 1515, 1518, 1535, 1539, 1544, 1552, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1610, 1613, 1657, 1676, 1679, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "ndim": [44, 47, 48, 150, 151, 303, 304, 319, 333, 999, 1192, 1311, 1388, 1391, 1403, 1407, 1594, 1610, 1613], "int": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 342, 370, 371, 374, 379, 382, 384, 387, 388, 389, 390, 391, 392, 393, 394, 400, 401, 407, 410, 411, 416, 417, 427, 428, 431, 442, 445, 457, 460, 462, 465, 467, 468, 470, 475, 477, 491, 492, 499, 500, 503, 505, 506, 508, 509, 521, 524, 534, 538, 539, 543, 552, 565, 568, 581, 587, 588, 591, 599, 602, 616, 619, 643, 659, 660, 661, 667, 668, 672, 677, 693, 696, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 973, 977, 999, 1005, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1056, 1059, 1073, 1076, 1129, 1132, 1149, 1152, 1192, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1311, 1317, 1320, 1327, 1330, 1332, 1335, 1359, 1362, 1364, 1366, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1443, 1449, 1452, 1454, 1457, 1459, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1547, 1550, 1551, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1588, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1641, 1642, 1645, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "size": [44, 47, 48, 102, 103, 110, 111, 116, 117, 120, 121, 126, 127, 128, 129, 132, 133, 140, 141, 144, 145, 148, 149, 150, 151, 162, 165, 166, 167, 168, 255, 256, 263, 264, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 293, 294, 297, 298, 301, 302, 303, 304, 332, 333, 340, 374, 382, 387, 389, 392, 393, 395, 400, 411, 416, 417, 420, 421, 427, 428, 470, 505, 506, 508, 509, 643, 665, 666, 667, 999, 1129, 1132, 1245, 1306, 1309, 1311, 1332, 1335, 1344, 1347, 1359, 1362, 1378, 1381, 1388, 1391, 1403, 1407, 1428, 1432, 1459, 1475, 1478, 1500, 1503, 1505, 1508, 1510, 1513, 1567, 1568, 1571, 1594, 1595, 1598, 1610, 1613, 1702, 1703, 1706, 1708, 1711], "overview": [44, 162, 333, 336, 353, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "forum": [44, 162, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 431, 467, 469, 470, 552, 643, 677, 998, 999, 1193, 1245, 1311, 1443, 1459, 1540, 1544, 1562, 1567, 1594, 1641, 1657, 1702, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1736, 1738, 1748, 1760, 1763, 1765, 1771], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 339, 643, 644, 999, 1046, 1048, 1544, 1561], "gelu": [45, 46, 163, 164, 431], "approxim": [45, 46, 102, 103, 140, 141, 163, 164, 177, 178, 293, 294, 324, 331, 374, 383, 384, 431, 432, 435, 677, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 788, 791, 793, 796, 848, 851, 853, 856, 858, 861, 863, 866, 923, 926, 953, 956, 958, 961, 978, 982, 983, 987, 1311, 1368, 1371, 1383, 1386], "185": [45, 46, 163, 164], "046": [45, 46, 163, 164], "leaky_relu": [45, 46, 163, 164, 332, 431, 1714], "alpha": [45, 46, 60, 61, 120, 121, 163, 164, 177, 178, 263, 264, 273, 274, 331, 332, 387, 388, 416, 417, 431, 437, 440, 677, 693, 696, 973, 977], "39": [45, 46, 60, 61, 148, 149, 163, 164, 177, 178, 287, 288, 301, 302, 431, 437, 440, 677, 703, 706, 788, 791, 848, 851, 858, 861, 868, 871, 1193, 1194, 1197, 1311, 1378, 1381, 1567, 1578, 1581, 1657, 1668, 1671], "85": [45, 46, 148, 149, 163, 164, 177, 178, 287, 288, 291, 292, 301, 302, 431, 437, 440, 677, 743, 746, 748, 751, 928, 931, 999, 1149, 1152, 1193, 1204, 1207, 1245, 1291, 1294, 1567, 1583, 1586], "17": [45, 46, 110, 111, 162, 163, 164, 167, 168, 177, 178, 263, 264, 285, 286, 287, 288, 291, 292, 301, 302, 319, 323, 387, 392, 393, 400, 401, 431, 437, 440, 677, 773, 776, 868, 871, 999, 1092, 1095, 1193, 1194, 1197, 1245, 1291, 1294, 1311, 1332, 1335, 1408, 1412, 1544, 1552, 1567, 1583, 1586, 1589, 1592], "log_softmax": [45, 46, 163, 164, 431], "98": [45, 46, 134, 135, 148, 149, 163, 164, 177, 178, 287, 288, 301, 302, 431, 442, 445, 677, 748, 751, 1193, 1204, 1207, 1311, 1378, 1381, 1544, 1546, 1594, 1615, 1619, 1657, 1668, 1671], "37": [45, 46, 60, 61, 163, 164, 177, 178, 677, 703, 706, 743, 746, 978, 982, 1245, 1291, 1294, 1544, 1552, 1567, 1578, 1581], "35": [45, 46, 138, 139, 163, 164, 177, 178, 291, 292, 293, 294, 301, 302, 677, 713, 716, 963, 966, 1245, 1291, 1294, 1306, 1309, 1311, 1317, 1320, 1594, 1615, 1619, 1657, 1668, 1671], "0719": [45, 46, 163, 164], "62": [45, 46, 163, 164, 255, 256, 299, 300, 301, 302, 677, 958, 961, 1562, 1563, 1566, 1567, 1583, 1586], "221": [45, 46], "82": [45, 46, 60, 61, 287, 288, 301, 302, 1193, 1194, 1197], "relu": [45, 46, 160, 161, 163, 164, 332, 340, 341, 431, 437, 440, 1714], "sigmoid": [45, 46, 163, 164, 337, 340, 341, 431, 1714], "269": [45, 46, 163, 164, 431, 452, 455], "731": [45, 46, 163, 164, 431, 452, 455], "881": [45, 46, 60, 61, 163, 164, 177, 178, 431, 452, 455, 677, 703, 706, 768, 771], "softmax": [45, 46, 160, 161, 163, 164, 431, 1245, 1301, 1304, 1306, 1309, 1714], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 102, 103, 110, 111, 116, 117, 120, 121, 128, 129, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 319, 321, 322, 323, 325, 326, 327, 328, 330, 331, 334, 335, 337, 342, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 410, 411, 416, 417, 420, 421, 427, 428, 431, 432, 435, 437, 440, 442, 445, 447, 450, 452, 455, 457, 460, 462, 465, 467, 468, 470, 472, 473, 475, 477, 482, 484, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 553, 554, 555, 558, 560, 563, 565, 568, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 628, 631, 633, 634, 635, 636, 637, 642, 643, 645, 646, 647, 648, 649, 652, 654, 657, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1000, 1003, 1007, 1009, 1010, 1013, 1016, 1019, 1021, 1024, 1031, 1034, 1036, 1039, 1041, 1044, 1049, 1052, 1056, 1059, 1061, 1064, 1069, 1073, 1076, 1081, 1084, 1087, 1090, 1092, 1095, 1097, 1100, 1109, 1112, 1119, 1122, 1125, 1129, 1132, 1134, 1137, 1147, 1149, 1152, 1154, 1157, 1159, 1163, 1164, 1165, 1169, 1170, 1171, 1175, 1176, 1180, 1187, 1191, 1192, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1208, 1211, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1234, 1238, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1284, 1287, 1291, 1294, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1551, 1555, 1556, 1560, 1561, 1562, 1563, 1566, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1647, 1650, 1652, 1655, 1657, 1658, 1661, 1663, 1666, 1668, 1671, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "422": [45, 46, 163, 164, 431, 457, 460], "155": [45, 46, 163, 164, 291, 292, 431, 457, 460, 1245, 1291, 1294], "softplu": [45, 46, 163, 164, 335, 431, 1714], "beta": [45, 46, 146, 147, 163, 164, 263, 264, 299, 300, 335, 387, 388, 390, 391, 416, 417, 431, 462, 465, 1562, 1563, 1566], "threshold": [45, 46, 60, 61, 163, 164, 177, 178, 335, 431, 462, 465, 677, 893, 896, 898, 901], "3461": [45, 46, 163, 164, 431, 462, 465], "6491": [45, 46, 163, 164, 431, 462, 465], "22": [45, 46, 60, 61, 110, 111, 132, 133, 148, 149, 156, 157, 163, 164, 285, 286, 291, 292, 301, 302, 319, 387, 392, 393, 431, 462, 465, 677, 748, 751, 1245, 1291, 1294, 1311, 1332, 1335, 1349, 1352, 1378, 1381, 1544, 1552, 1561, 1594, 1615, 1619, 1657, 1668, 1671], "09": [45, 46, 287, 288, 301, 302, 431, 462, 465, 677, 858, 861, 968, 971, 1193, 1194, 1197, 1245, 1306, 1309], "31": [45, 46, 60, 61, 177, 178, 285, 286, 291, 292, 301, 302, 340, 431, 442, 445, 462, 465, 677, 743, 746, 868, 871, 963, 966, 999, 1016, 1019, 1311, 1408, 1412], "55": [45, 46, 301, 302, 677, 743, 746, 999, 1087, 1090, 1311, 1349, 1352, 1378, 1381, 1408, 1412, 1567, 1578, 1581, 1657, 1668, 1671], "13": [45, 46, 60, 61, 110, 111, 138, 139, 148, 149, 156, 157, 177, 178, 255, 256, 263, 264, 285, 286, 287, 288, 291, 292, 297, 298, 301, 302, 309, 310, 319, 323, 333, 400, 401, 431, 462, 465, 552, 599, 602, 643, 654, 677, 723, 726, 748, 751, 763, 766, 793, 796, 803, 806, 963, 966, 999, 1016, 1019, 1021, 1024, 1036, 1039, 1092, 1095, 1142, 1149, 1152, 1193, 1194, 1197, 1245, 1291, 1294, 1306, 1309, 1311, 1332, 1335, 1378, 1381, 1408, 1412, 1459, 1530, 1534, 1594, 1615, 1619, 1620, 1621, 1625, 1657, 1658, 1661, 1663, 1666, 1668, 1671], "collect": [49, 165, 166, 169, 325, 332, 333, 353, 431, 467, 643, 999, 1193, 1245, 1443, 1544, 1557, 1562, 1567, 1722, 1724, 1727], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53, 169, 170, 1544, 1546, 1556], "nest": [49, 50, 51, 52, 53, 162, 165, 166, 167, 168, 169, 170, 317, 319, 328, 334, 340, 341, 354, 999, 1165, 1169, 1192, 1193, 1226, 1232, 1244, 1540, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1713, 1724], "unchang": [49, 50, 51, 52, 53, 400, 401], "deriv": [49, 50, 51, 52, 53, 54, 55, 134, 135, 169, 170, 171, 172, 263, 264, 287, 288, 321, 322, 339, 341, 387, 390, 470, 486, 489, 500, 503, 529, 532, 547, 551, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1544, 1546, 1556], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 102, 103, 110, 111, 116, 117, 120, 121, 128, 129, 132, 133, 138, 139, 140, 141, 144, 145, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 263, 264, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 321, 326, 327, 332, 333, 337, 340, 341, 354, 370, 371, 374, 375, 376, 379, 380, 382, 387, 392, 393, 394, 400, 409, 410, 411, 416, 417, 420, 421, 427, 428, 470, 475, 477, 516, 519, 552, 565, 568, 593, 594, 596, 597, 627, 637, 643, 648, 655, 656, 999, 1049, 1052, 1192, 1193, 1194, 1197, 1214, 1217, 1245, 1257, 1260, 1262, 1264, 1271, 1274, 1276, 1277, 1279, 1282, 1296, 1299, 1311, 1337, 1340, 1359, 1362, 1368, 1371, 1383, 1386, 1388, 1391, 1393, 1396, 1403, 1407, 1413, 1417, 1433, 1437, 1459, 1465, 1468, 1470, 1473, 1485, 1488, 1500, 1503, 1515, 1518, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547, 1549, 1552, 1553, 1555, 1556, 1558, 1559, 1560, 1561, 1594, 1610, 1613, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1657, 1672, 1675, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "kei": [49, 50, 51, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 326, 332, 333, 340, 999, 1005, 1026, 1245, 1301, 1304, 1306, 1309, 1540, 1541, 1542, 1544, 1547, 1553, 1557, 1724, 1727, 1731], "word": [49, 50, 51, 319, 331, 470, 472, 473, 1567, 1583, 1586, 1713], "args_to_n": [49, 330], "cont_inplac": [49, 51, 53], "ignore_frontend_arrai": [49, 51], "to_ivi": [49, 169, 170, 1544, 1557], "leaf": [49, 52, 165, 166, 309, 310, 319, 328, 340, 1544, 1545, 1554, 1555], "travers": [49, 52, 53, 169, 170, 319, 321, 337, 1544, 1556], "lowest": [49, 52, 53, 148, 149, 169, 170, 301, 302, 328, 354, 1544, 1556, 1567, 1573, 1576, 1713, 1721, 1725, 1729], "to_n": [49, 169, 170, 337], "asarrai": [54, 55, 132, 133, 285, 286, 329, 330, 470, 999, 1073, 1076, 1149, 1152, 1245, 1247, 1250, 1620, 1626, 1630], "boolean": [54, 55, 56, 57, 60, 61, 102, 103, 132, 133, 134, 135, 144, 145, 150, 151, 165, 166, 173, 174, 177, 178, 255, 256, 285, 286, 287, 288, 297, 298, 303, 304, 319, 331, 332, 333, 335, 374, 380, 470, 475, 477, 499, 552, 555, 558, 605, 642, 643, 658, 674, 677, 723, 726, 728, 731, 738, 741, 748, 751, 873, 876, 878, 881, 883, 886, 888, 891, 999, 1000, 1003, 1007, 1009, 1069, 1081, 1084, 1086, 1102, 1103, 1106, 1109, 1112, 1114, 1117, 1119, 1122, 1139, 1140, 1143, 1145, 1187, 1191, 1193, 1208, 1211, 1226, 1244, 1459, 1495, 1498, 1540, 1541, 1542, 1544, 1554, 1657, 1680, 1683], "nativedtyp": [54, 55, 56, 57, 102, 103, 120, 121, 148, 149, 150, 151, 156, 157, 171, 172, 255, 256, 263, 264, 273, 274, 301, 302, 303, 304, 309, 310, 321, 322, 327, 331, 334, 337, 374, 382, 387, 389, 390, 395, 416, 417, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 526, 527, 529, 532, 544, 546, 547, 551, 552, 554, 555, 558, 576, 577, 578, 579, 581, 582, 583, 585, 587, 604, 605, 626, 633, 642, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1595, 1598, 1600, 1603, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "datatyp": [54, 55, 165, 166, 470, 500, 503, 516, 519, 552, 576, 626, 633], "nativedevic": [54, 55, 58, 59, 148, 149, 171, 172, 175, 176, 301, 302, 321, 322, 325, 327, 334, 370, 371, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 499, 500, 503, 505, 506, 508, 509, 516, 519, 521, 524, 526, 527, 529, 532, 544, 546, 547, 551, 643, 646, 647, 648, 649, 652, 654, 657, 661, 662, 663, 664, 665, 666, 667, 668, 672, 673, 676, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586], "interpret": [54, 55, 320, 470, 475, 477, 516, 519, 1725], "copy_arrai": [54, 55, 470], "empty_lik": [54, 55, 171, 172, 335, 470], "deafult": [54, 55, 150, 151, 303, 304, 470, 486, 489, 1594, 1595, 1598], "uniniti": [54, 55, 470, 485, 486, 489], "from_dlpack": [54, 55, 171, 172, 470], "full_lik": [54, 55, 171, 172, 334, 470], "float": [54, 55, 56, 57, 60, 61, 102, 103, 120, 121, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 156, 157, 163, 164, 171, 172, 173, 174, 177, 178, 255, 256, 263, 264, 273, 274, 285, 286, 287, 288, 293, 294, 295, 296, 299, 300, 301, 302, 309, 310, 316, 319, 321, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 337, 339, 341, 374, 375, 376, 380, 383, 384, 387, 388, 389, 390, 391, 416, 417, 431, 437, 440, 462, 465, 469, 470, 472, 473, 475, 477, 485, 491, 492, 499, 500, 503, 505, 506, 508, 509, 526, 527, 544, 546, 552, 555, 558, 575, 578, 579, 588, 591, 604, 611, 614, 627, 628, 631, 643, 654, 662, 665, 666, 673, 676, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 933, 936, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 999, 1015, 1016, 1019, 1021, 1024, 1049, 1052, 1070, 1071, 1078, 1081, 1084, 1141, 1142, 1144, 1149, 1152, 1154, 1157, 1187, 1191, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1284, 1287, 1306, 1309, 1311, 1312, 1315, 1322, 1325, 1337, 1340, 1341, 1343, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1433, 1437, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1540, 1541, 1542, 1543, 1544, 1550, 1562, 1563, 1566, 1567, 1578, 1581, 1583, 1586, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1658, 1661, 1663, 1666, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701], "scalar": [54, 55, 60, 61, 102, 103, 116, 117, 132, 133, 163, 164, 171, 172, 177, 178, 285, 286, 293, 294, 321, 354, 374, 375, 376, 400, 404, 470, 500, 503, 521, 524, 677, 693, 696, 973, 977, 999, 1176, 1180, 1187, 1191, 1311, 1433, 1437, 1724], "fill": [54, 55, 148, 149, 150, 151, 165, 166, 171, 172, 301, 302, 303, 304, 332, 470, 485, 499, 500, 503, 521, 524, 526, 527, 529, 532, 544, 546, 547, 551, 1567, 1573, 1576, 1594, 1610, 1613], "000123": [54, 55, 470, 500, 503], "ones": [54, 55, 134, 135, 148, 149, 165, 166, 171, 172, 301, 302, 323, 327, 333, 339, 340, 470, 491, 492, 500, 503, 521, 524, 529, 532, 547, 551, 677, 753, 756, 1193, 1194, 1197, 1714, 1724], "meshgrid": [54, 55, 171, 172, 470], "spars": [54, 55, 142, 143, 171, 172, 295, 296, 470, 511, 514, 1443, 1454, 1457], "xy": [54, 55, 171, 172, 470, 511, 514], "one_hot": [54, 55, 171, 172, 342, 470, 1714], "on_valu": [54, 55, 171, 172, 470, 508, 509, 521, 524], "off_valu": [54, 55, 171, 172, 470, 508, 509, 521, 524], "scatter": [54, 55, 132, 133, 171, 172, 285, 286, 335, 470, 521, 524, 999, 1129, 1132, 1134, 1137, 1731], "hot": [54, 55, 171, 172, 470, 521, 524], "float32": [54, 55, 56, 57, 138, 139, 171, 172, 173, 174, 285, 286, 291, 292, 309, 310, 321, 323, 333, 374, 376, 387, 395, 470, 508, 509, 547, 551, 552, 553, 554, 583, 585, 587, 588, 591, 593, 594, 604, 611, 614, 616, 619, 677, 858, 861, 999, 1171, 1175, 1245, 1257, 1260], "cuda": [54, 55, 148, 149, 285, 286, 301, 302, 337, 354, 470, 505, 506, 508, 509, 521, 524, 643, 645, 647, 664, 665, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1713, 1729], "unless": [54, 55, 102, 103, 140, 141, 171, 172, 255, 256, 318, 322, 330, 354, 374, 382, 470, 521, 524, 677, 903, 906, 1311, 1368, 1371], "overrid": [54, 55, 171, 172, 470, 521, 524], "ones_lik": [54, 55, 171, 172, 318, 342, 470, 1714], "tril": [54, 55, 171, 172, 470], "k": [54, 55, 112, 113, 116, 117, 120, 121, 138, 139, 140, 141, 148, 149, 171, 172, 177, 178, 249, 250, 265, 266, 269, 270, 273, 274, 291, 292, 293, 294, 301, 302, 315, 316, 331, 337, 370, 371, 396, 397, 400, 410, 411, 416, 417, 470, 491, 492, 534, 538, 539, 543, 999, 1007, 1009, 1245, 1306, 1309, 1311, 1327, 1330, 1354, 1357, 1359, 1362, 1388, 1391, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422, 1544, 1552, 1567, 1573, 1576, 1578, 1581, 1583, 1586, 1594, 1610, 1613, 1720, 1724], "innermost": [54, 55, 140, 141, 293, 294, 470, 534, 538, 539, 543, 1311, 1312, 1315, 1322, 1325, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1418, 1422], "mxn": [54, 55, 140, 141, 293, 294, 470, 534, 538, 539, 543, 1311, 1332, 1335, 1359, 1362, 1368, 1371, 1373, 1376, 1383, 1386, 1388, 1391, 1408, 1412, 1418, 1422], "diagon": [54, 55, 140, 141, 293, 294, 370, 371, 396, 397, 470, 491, 492, 534, 538, 539, 543, 1311, 1327, 1330, 1418, 1422], "triangular": [54, 55, 140, 141, 293, 294, 370, 371, 470, 534, 538, 539, 543, 1311, 1312, 1315, 1388, 1391], "triu": [54, 55, 171, 172, 470], "upper": [54, 55, 140, 141, 148, 149, 293, 294, 301, 302, 330, 333, 370, 371, 470, 491, 492, 539, 543, 1311, 1312, 1315, 1388, 1391, 1567, 1583, 1586], "zeros_lik": [54, 55, 171, 172, 331, 335, 470, 552, 555, 558, 677, 883, 886, 1193, 1194, 1197, 1204, 1207, 1214, 1217, 1222, 1225, 1245, 1279, 1282, 1459, 1460, 1463, 1714], "creation": [55, 97, 162, 165, 166, 167, 168, 172, 250, 321, 322, 325, 327, 329, 332, 333, 334, 337, 371, 471, 472, 473, 475, 477, 479, 480, 481, 482, 484, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 516, 519, 521, 524, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 1724, 1726, 1730], "data_typ": [56, 57, 98, 99, 173, 174, 251, 252, 321, 333, 334, 552, 553, 554, 555, 558, 560, 563, 565, 568, 570, 573, 575, 576, 577, 578, 579, 581, 582, 583, 585, 587, 588, 591, 593, 594, 596, 597, 599, 602, 604, 605, 606, 609, 611, 614, 616, 619, 621, 624, 626, 627, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642], "astyp": [56, 57, 138, 139, 173, 174, 291, 292, 321, 330, 331, 335, 552, 1245, 1257, 1260], "irrespect": [56, 57, 173, 174, 319, 330, 339, 552, 555, 558, 1311, 1403, 1407, 1731], "rule": [56, 57, 102, 103, 140, 141, 173, 174, 177, 178, 293, 294, 316, 317, 319, 321, 323, 326, 327, 328, 333, 335, 374, 384, 552, 555, 558, 570, 573, 626, 627, 628, 631, 677, 718, 721, 773, 776, 903, 906, 938, 941, 993, 997, 1311, 1312, 1315, 1317, 1320, 1344, 1347, 1364, 1366, 1378, 1381, 1398, 1401, 1459, 1465, 1468, 1725], "cast": [56, 57, 173, 174, 321, 328, 332, 337, 552, 555, 558, 570, 573, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1714], "nan": [56, 57, 60, 61, 102, 103, 132, 133, 156, 157, 173, 174, 177, 178, 255, 256, 285, 286, 316, 321, 324, 333, 334, 374, 377, 378, 382, 383, 469, 552, 555, 558, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 753, 756, 758, 761, 763, 766, 768, 771, 788, 791, 793, 796, 798, 801, 818, 821, 828, 831, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 903, 906, 923, 926, 928, 931, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 999, 1081, 1084, 1187, 1191, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "infin": [56, 57, 60, 61, 102, 103, 132, 133, 173, 174, 177, 178, 255, 256, 293, 294, 316, 324, 374, 380, 383, 469, 552, 555, 558, 677, 678, 681, 688, 691, 693, 696, 703, 706, 708, 711, 713, 716, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 803, 806, 818, 821, 823, 826, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 878, 881, 903, 906, 923, 926, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 999, 1081, 1084, 1311, 1433, 1437, 1657, 1672, 1675, 1680, 1683, 1702, 1703, 1706, 1708, 1711], "non": [56, 57, 140, 141, 148, 149, 150, 151, 156, 157, 158, 159, 173, 174, 293, 294, 301, 302, 303, 304, 309, 310, 311, 312, 319, 321, 323, 329, 337, 374, 377, 467, 468, 552, 555, 558, 605, 627, 677, 878, 881, 883, 886, 1311, 1322, 1325, 1359, 1362, 1368, 1371, 1403, 1407, 1413, 1417, 1428, 1432, 1433, 1437, 1567, 1578, 1581, 1594, 1595, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1724], "float64": [56, 57, 148, 149, 156, 157, 173, 174, 301, 302, 309, 310, 321, 333, 374, 376, 470, 499, 552, 555, 558, 570, 573, 588, 591, 593, 594, 604, 605, 616, 619, 628, 631, 633, 642, 1567, 1578, 1581, 1583, 1586], "broadcast_arrai": [56, 57, 173, 174, 552], "arbitrari": [56, 57, 165, 166, 173, 174, 319, 327, 328, 330, 331, 333, 341, 354, 470, 511, 514, 552, 560, 563, 628, 631, 1725, 1730], "x3": [56, 57, 470, 547, 551, 552, 560, 563, 643, 661, 999, 1000, 1003], "mix": [56, 57, 60, 61, 162, 167, 168, 173, 174, 177, 178, 285, 286, 295, 296, 301, 302, 315, 323, 330, 333, 335, 337, 552, 560, 563, 628, 631, 643, 661, 677, 723, 726, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 888, 891, 903, 906, 913, 916, 938, 941, 999, 1046, 1048, 1056, 1059, 1061, 1064, 1165, 1169, 1176, 1180, 1245, 1247, 1250, 1257, 1260, 1271, 1274, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1413, 1417, 1443, 1444, 1447, 1454, 1457, 1459, 1460, 1463, 1562, 1563, 1566, 1594, 1615, 1619, 1657, 1668, 1671, 1676, 1679, 1688, 1691, 1713, 1724, 1728, 1730], "broadcast_to": [56, 57, 173, 174, 321, 552], "can_cast": [56, 57, 173, 174, 321, 328, 331, 552], "occur": [56, 57, 152, 153, 173, 174, 305, 306, 316, 552, 570, 573, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "as_n": [56, 57, 58, 59, 173, 174, 175, 176, 321, 552, 577, 578, 579, 581, 582, 583, 585, 604, 643, 648, 649, 652, 664], "int32": [56, 57, 148, 149, 150, 151, 156, 157, 173, 174, 285, 286, 301, 302, 303, 304, 321, 333, 337, 470, 547, 551, 552, 555, 558, 570, 573, 576, 581, 583, 585, 593, 594, 599, 602, 604, 616, 619, 628, 631, 635, 638, 643, 663, 999, 1061, 1064, 1171, 1175, 1567, 1578, 1581, 1583, 1586, 1594, 1600, 1603, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "finfo": [56, 57, 173, 174, 333, 552], "iinfo": [56, 57, 173, 174, 326, 552], "119": [56, 57], "122": [56, 57, 677, 763, 766], "int8": [56, 57, 148, 149, 301, 302, 321, 333, 552, 581, 593, 594, 599, 602, 604], "min": [56, 57, 132, 133, 156, 157, 173, 174, 285, 286, 309, 310, 370, 371, 552, 588, 591, 599, 602, 677, 898, 901, 999, 1036, 1039, 1129, 1132, 1134, 1137, 1149, 1152, 1311, 1359, 1362, 1388, 1391, 1403, 1407, 1408, 1412, 1433, 1437, 1657], "128": [56, 57, 102, 103, 138, 139, 162, 167, 168, 255, 256, 291, 292, 374, 375, 552, 599, 602, 999, 1069, 1311, 1378, 1381], "max": [56, 57, 110, 111, 132, 133, 140, 141, 156, 157, 173, 174, 263, 264, 285, 286, 293, 294, 309, 310, 333, 387, 392, 393, 552, 588, 591, 599, 602, 677, 893, 896, 999, 1016, 1019, 1021, 1024, 1036, 1039, 1129, 1132, 1134, 1137, 1311, 1359, 1362, 1368, 1371, 1383, 1386, 1657], "127": [56, 57, 102, 103, 255, 256, 374, 383, 552, 599, 602], "is_bool_dtyp": [56, 57, 173, 174, 552], "is_float_dtyp": [56, 57, 173, 174, 334, 552], "is_int_dtyp": [56, 57, 173, 174, 332, 334, 552], "is_uint_dtyp": [56, 57, 173, 174, 332, 334, 552], "result_typ": [56, 57, 173, 174, 321, 552], "arrays_and_dtyp": [56, 57, 173, 174, 552, 628, 631], "to_devic": [58, 59, 175, 176, 643, 648], "stream": [58, 59, 175, 176, 643, 668, 672, 1728], "ab": [60, 61, 177, 178, 321, 329, 331, 333, 677, 923, 926, 1311, 1359, 1362, 1408, 1412, 1433, 1437, 1544, 1552, 1555, 1714], "aco": [60, 61, 177, 178, 677, 1714], "real": [60, 61, 177, 178, 319, 677, 833, 836, 983, 987, 1657, 1680, 1683, 1688, 1691, 1726], "cosin": [60, 61, 177, 178, 387, 389, 677, 683, 686, 688, 691, 758, 761, 763, 766], "57": [60, 61, 177, 178, 643, 654, 677, 683, 686, 688, 691, 698, 701, 703, 706, 713, 716, 748, 751, 763, 766, 768, 771, 928, 931], "69": [60, 61, 287, 288, 301, 302, 333, 340, 677, 858, 861, 1193, 1204, 1207, 1311, 1359, 1362], "acosh": [60, 61, 177, 178, 552, 593, 594, 596, 597, 677, 1714], "hyperbol": [60, 61, 177, 178, 677, 688, 691, 703, 706, 718, 721, 763, 766, 958, 961, 983, 987], "99": [60, 61, 134, 135, 177, 178, 301, 302, 470, 499, 677, 688, 691, 703, 706, 999, 1149, 1152, 1193, 1204, 1207, 1657, 1668, 1671], "asin": [60, 61, 177, 178, 677, 1714], "sine": [60, 61, 177, 178, 677, 698, 701, 703, 706, 953, 956, 958, 961], "927": [60, 61, 177, 178], "asinh": [60, 61, 177, 178, 677, 1714], "atan": [60, 61, 177, 178, 677, 1714], "tangent": [60, 61, 177, 178, 324, 677, 708, 711, 713, 716, 718, 721, 978, 982, 983, 987], "785": [60, 61, 177, 178, 677, 708, 711, 713, 716], "464": [60, 61, 301, 302, 677, 713, 716], "atan2": [60, 61, 177, 178, 677, 1714], "coordin": [60, 61, 150, 151, 177, 178, 303, 304, 370, 371, 400, 408, 409, 470, 511, 514, 677, 713, 716, 1594, 1610, 1613], "quotient": [60, 61, 177, 178, 677, 713, 716], "245": [60, 61, 291, 292, 1245, 1291, 1294], "atanh": [60, 61, 177, 178, 677, 1714], "549": [60, 61, 177, 178, 291, 292, 677, 718, 721, 1245, 1291, 1294], "47": [60, 61, 110, 111, 148, 149, 177, 178, 285, 286, 287, 288, 301, 302, 387, 393, 677, 963, 966, 999, 1036, 1039, 1193, 1204, 1207, 1245, 1291, 1294, 1567, 1583, 1586], "bitwise_and": [60, 61, 177, 178, 677], "11": [60, 61, 110, 111, 132, 133, 138, 139, 140, 141, 148, 149, 156, 157, 162, 167, 168, 177, 178, 263, 264, 269, 270, 285, 286, 291, 292, 293, 294, 297, 298, 301, 302, 309, 310, 319, 321, 323, 334, 387, 392, 393, 400, 401, 677, 708, 711, 723, 726, 938, 941, 943, 946, 999, 1015, 1056, 1059, 1092, 1095, 1134, 1137, 1245, 1247, 1250, 1291, 1294, 1311, 1332, 1335, 1349, 1352, 1359, 1362, 1378, 1381, 1408, 1412, 1443, 1454, 1457, 1459, 1480, 1483, 1530, 1534, 1544, 1550, 1552, 1561, 1567, 1573, 1576, 1578, 1581, 1594, 1615, 1619, 1620, 1621, 1625, 1657, 1658, 1661, 1663, 1666, 1668, 1671], "bitwise_invert": [60, 61, 177, 178, 677], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61, 177, 178, 677], "bitwise_or": [60, 61, 177, 178, 677], "bitwise_xor": [60, 61, 177, 178, 677], "89": [60, 61, 148, 149, 173, 174, 177, 178, 301, 302, 552, 599, 602, 677, 748, 751, 1311, 1413, 1417, 1657, 1692, 1696], "51": [60, 61, 177, 178, 285, 286, 301, 302, 677, 958, 961], "18": [60, 61, 110, 111, 148, 149, 177, 178, 263, 264, 301, 302, 309, 310, 319, 323, 387, 392, 400, 401, 431, 442, 445, 677, 713, 716, 773, 776, 958, 961, 1311, 1332, 1335, 1354, 1357, 1378, 1381, 1567, 1578, 1581, 1657, 1663, 1666, 1668, 1671], "19": [60, 61, 110, 111, 148, 149, 177, 178, 263, 264, 293, 294, 301, 302, 323, 387, 392, 400, 401, 677, 978, 982, 1311, 1332, 1335, 1418, 1422, 1544, 1555, 1567, 1578, 1581, 1641, 1652, 1655], "26": [60, 61, 146, 147, 148, 149, 285, 286, 287, 288, 301, 302, 677, 748, 751, 773, 776, 958, 961, 999, 1087, 1090, 1193, 1194, 1197, 1245, 1279, 1282, 1311, 1332, 1335, 1378, 1381, 1413, 1417, 1544, 1546, 1562, 1563, 1566, 1657, 1668, 1671], "27": [60, 61, 102, 103, 140, 141, 148, 149, 255, 256, 293, 294, 301, 302, 374, 376, 677, 743, 746, 763, 766, 958, 961, 963, 966, 999, 1092, 1095, 1245, 1306, 1309, 1311, 1354, 1357, 1378, 1381, 1423, 1427, 1544, 1546, 1552, 1657, 1668, 1671], "23": [60, 61, 110, 111, 148, 149, 171, 172, 177, 178, 285, 286, 301, 302, 333, 337, 387, 392, 393, 470, 500, 503, 677, 713, 716, 748, 751, 823, 826, 828, 831, 833, 836, 938, 941, 948, 951, 958, 961, 1245, 1271, 1274, 1306, 1309, 1311, 1332, 1335, 1359, 1362, 1408, 1412, 1544, 1546, 1552, 1594, 1615, 1619], "20": [60, 61, 110, 111, 138, 139, 148, 149, 156, 157, 177, 178, 285, 286, 301, 302, 309, 310, 335, 339, 387, 392, 677, 768, 771, 788, 791, 793, 796, 858, 861, 928, 931, 943, 946, 963, 966, 999, 1061, 1064, 1069, 1134, 1137, 1149, 1152, 1311, 1332, 1335, 1349, 1352, 1359, 1362, 1378, 1381, 1413, 1417, 1567, 1573, 1576, 1594, 1610, 1613, 1615, 1619, 1657, 1668, 1671, 1692, 1696], "74": [60, 61, 301, 302, 677, 868, 871], "41": [60, 61, 110, 111, 177, 178, 285, 286, 293, 294, 387, 393, 431, 442, 445, 677, 708, 711, 963, 966, 999, 1016, 1019, 1021, 1024, 1311, 1312, 1315, 1567, 1583, 1586, 1657, 1692, 1696], "59": [60, 61], "24": [60, 61, 110, 111, 140, 141, 156, 157, 255, 256, 263, 264, 285, 286, 291, 292, 293, 294, 301, 302, 340, 387, 392, 677, 748, 751, 963, 966, 999, 1036, 1039, 1311, 1332, 1335, 1378, 1381, 1544, 1546, 1657, 1658, 1661, 1668, 1671], "ceil": [60, 61, 177, 178, 470, 472, 473, 677, 1714], "radian": [60, 61, 102, 103, 177, 178, 255, 256, 324, 374, 383, 677, 683, 686, 698, 701, 708, 711, 713, 716, 758, 761, 768, 771, 928, 931, 953, 956, 978, 982], "54": [60, 61, 138, 139, 177, 178, 255, 256, 263, 264, 291, 292, 301, 302, 323, 387, 388, 677, 758, 761, 763, 766, 963, 966, 1245, 1291, 1294, 1306, 1309, 1311, 1378, 1381, 1657, 1668, 1671], "416": [60, 61, 677, 758, 761], "cosh": [60, 61, 177, 178, 677, 1714], "angl": [60, 61, 177, 178, 353, 677, 713, 716, 763, 766, 958, 961, 983, 987], "76": [60, 61, 173, 174, 177, 178, 301, 302, 552, 599, 602, 677, 763, 766, 1311, 1413, 1417, 1544, 1552, 1657, 1668, 1671], "03": [60, 61, 177, 178, 287, 288, 301, 302, 677, 858, 861, 999, 1149, 1152, 1193, 1214, 1217, 1245, 1306, 1309, 1311, 1349, 1352], "81": [60, 61, 173, 174, 177, 178, 293, 294, 301, 302, 333, 552, 599, 602, 677, 858, 861, 943, 946, 968, 971, 1544, 1552, 1567, 1583, 1586, 1657, 1668, 1671], "deg2rad": [60, 61, 177, 178, 677], "degre": [60, 61, 116, 117, 156, 157, 177, 178, 269, 270, 309, 310, 400, 410, 677, 768, 771, 928, 931, 1657, 1688, 1691, 1697, 1701, 1723], "180": [60, 61, 177, 178, 677, 768, 771, 928, 931], "270": [60, 61, 177, 178, 677, 768, 771, 928, 931], "360": [60, 61, 177, 178, 677, 768, 771, 928, 931], "71": [60, 61, 177, 178, 677, 768, 771, 928, 931], "28": [60, 61, 146, 147, 177, 178, 285, 286, 301, 302, 677, 768, 771, 928, 931, 999, 1087, 1090, 1193, 1194, 1197, 1245, 1271, 1274, 1279, 1282, 1291, 1294, 1311, 1378, 1381, 1562, 1563, 1566, 1657, 1668, 1671], "divid": [60, 61, 132, 133, 144, 145, 165, 166, 177, 178, 297, 298, 317, 319, 323, 677, 803, 806, 999, 1149, 1152, 1459, 1505, 1508], "dividend": [60, 61, 177, 178, 677, 773, 776, 938, 941, 993, 997], "divisor": [60, 61, 134, 135, 156, 157, 177, 178, 287, 288, 309, 310, 374, 379, 677, 773, 776, 938, 941, 993, 997, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1657, 1688, 1691, 1697, 1701], "375": [60, 61, 677, 778, 781], "erf": [60, 61, 177, 178, 677], "exponenti": [60, 61, 177, 178, 677, 783, 786, 788, 791, 868, 871, 923, 926], "gauss": [60, 61, 177, 178, 677, 783, 786], "exp": [60, 61, 177, 178, 677, 793, 796, 868, 871, 1714], "expm1": [60, 61, 177, 178, 321, 677], "244": [60, 61], "918": [60, 61], "48": [60, 61, 110, 111, 177, 178, 263, 264, 285, 286, 287, 288, 301, 302, 387, 393, 431, 437, 440, 677, 688, 691, 963, 966, 999, 1087, 1090, 1193, 1194, 1197, 1204, 1207, 1311, 1378, 1381, 1544, 1546, 1657, 1668, 1671], "147": [60, 61, 431, 457, 460, 677, 793, 796], "floor": [60, 61, 177, 178, 677, 743, 746, 1714], "floor_divid": [60, 61, 177, 178, 677], "greater_equ": [60, 61, 177, 178, 677], "isfinit": [60, 61, 177, 178, 331, 677], "out_i": [60, 61, 177, 178, 677, 818, 821, 823, 826, 828, 831, 833, 836], "self_i": [60, 61, 177, 178], "finit": [60, 61, 177, 178, 677, 693, 696, 713, 716, 818, 821, 903, 906, 923, 926, 938, 941], "inf": [60, 61, 102, 103, 132, 133, 140, 141, 177, 178, 255, 256, 285, 286, 293, 294, 321, 333, 374, 380, 469, 677, 713, 716, 793, 796, 818, 821, 823, 826, 828, 831, 833, 836, 848, 851, 853, 856, 999, 1081, 1084, 1187, 1191, 1311, 1359, 1362, 1433, 1437], "isinf": [60, 61, 177, 178, 677], "neg": [60, 61, 140, 141, 144, 145, 148, 149, 158, 159, 163, 164, 177, 178, 293, 294, 297, 298, 301, 302, 311, 312, 319, 328, 330, 370, 371, 396, 397, 431, 437, 440, 470, 472, 473, 491, 492, 677, 818, 821, 823, 826, 903, 906, 923, 926, 938, 941, 1311, 1327, 1330, 1403, 1407, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1500, 1503, 1567, 1578, 1581, 1702, 1703, 1706, 1708, 1711], "isnan": [60, 61, 177, 178, 677], "isreal": [60, 61, 177, 178, 677], "1j": [60, 61, 177, 178, 999, 1149, 1152], "5j": [60, 61, 177, 178, 677, 833, 836], "6j": [60, 61, 677, 833, 836], "less_equ": [60, 61, 177, 178, 325, 677], "61": [60, 61, 177, 178, 287, 288, 295, 296, 301, 302, 677, 848, 851, 858, 861, 968, 971, 1193, 1194, 1197, 1245, 1279, 1282, 1443, 1444, 1447], "log10": [60, 61, 177, 178, 677], "logarithm": [60, 61, 177, 178, 677, 788, 791, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 1311, 1393, 1396], "602": [60, 61, 677, 853, 856], "699": [60, 61, 677, 853, 856], "log1p": [60, 61, 177, 178, 677], "693": [60, 61, 177, 178, 431, 457, 460, 677, 703, 706, 858, 861, 1443, 1454, 1457], "001": [60, 61, 146, 147, 340, 341, 552, 588, 591, 677, 948, 951, 1562, 1563, 1566], "0953": [60, 61, 177, 178, 677, 848, 851], "log2": [60, 61, 177, 178, 677], "logaddexp": [60, 61, 177, 178, 677], "05": [60, 61, 134, 135, 146, 147, 156, 157, 177, 178, 287, 288, 299, 300, 332, 333, 387, 391, 677, 868, 871, 999, 1070, 1087, 1090, 1141, 1193, 1194, 1197, 1214, 1217, 1311, 1359, 1362, 1562, 1563, 1566, 1657, 1676, 1679], "logical_and": [60, 61, 177, 178, 331, 335, 677, 1714, 1731], "logical_not": [60, 61, 177, 178, 321, 677, 1714], "logical_or": [60, 61, 177, 178, 677, 1714, 1731], "conform": [60, 61, 177, 178, 324, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 588, 591, 599, 602, 628, 631, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1459, 1465, 1468, 1475, 1478, 1480, 1483, 1485, 1488, 1495, 1498, 1500, 1503, 1510, 1513, 1515, 1518, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "org": [60, 61, 177, 178, 287, 288, 324, 370, 371, 400, 401, 552, 570, 573, 677, 818, 821, 1193, 1194, 1197, 1198, 1201, 1311, 1438, 1442, 1657, 1688, 1691], "api_specif": [60, 61, 177, 178, 324, 400, 401, 552, 570, 573, 677, 818, 821, 1657, 1688, 1691], "elementwise_funct": [60, 61, 177, 178, 324, 677, 818, 821], "simplic": [60, 61, 177, 178, 324, 335, 341, 353, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701], "nestabl": [60, 61, 177, 178, 315, 323, 324, 330, 333, 370, 371, 387, 392, 393, 394, 396, 397, 400, 401, 470, 472, 473, 475, 477, 485, 486, 489, 491, 492, 494, 497, 499, 500, 503, 505, 506, 508, 509, 511, 514, 526, 527, 529, 532, 534, 538, 539, 543, 544, 546, 547, 551, 552, 570, 573, 606, 609, 616, 619, 677, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 773, 776, 778, 781, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 843, 846, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 999, 1056, 1059, 1073, 1076, 1081, 1084, 1087, 1090, 1159, 1163, 1176, 1180, 1193, 1208, 1211, 1227, 1231, 1234, 1238, 1239, 1243, 1245, 1257, 1260, 1279, 1282, 1291, 1294, 1306, 1309, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1428, 1432, 1433, 1437, 1438, 1442, 1459, 1460, 1463, 1465, 1468, 1470, 1473, 1475, 1478, 1480, 1483, 1485, 1488, 1490, 1493, 1495, 1498, 1500, 1503, 1505, 1508, 1510, 1513, 1515, 1518, 1520, 1524, 1525, 1529, 1530, 1534, 1535, 1539, 1562, 1563, 1566, 1594, 1595, 1598, 1600, 1603, 1610, 1613, 1615, 1619, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1713], "logical_xor": [60, 61, 177, 178, 677], "use_wher": [60, 61, 177, 178, 677, 893, 896, 898, 901], "formula": [60, 61, 177, 178, 677, 893, 896, 898, 901], "clip": [60, 61, 144, 145, 177, 178, 285, 286, 297, 298, 319, 328, 330, 340, 342, 677, 893, 896, 898, 901, 999, 1016, 1019, 1021, 1024, 1459, 1714], "minimum": [60, 61, 132, 133, 144, 145, 150, 151, 177, 178, 285, 286, 297, 298, 303, 304, 374, 376, 387, 394, 677, 678, 681, 999, 1070, 1071, 1141, 1142, 1149, 1152, 1154, 1157, 1459, 1460, 1463, 1594, 1600, 1603, 1657, 1672, 1675, 1680, 1683, 1714, 1721, 1727, 1731], "exce": [60, 61, 116, 117, 269, 270, 400, 411, 677, 898, 901], "arguement": [60, 61], "condit": [60, 61, 150, 151, 303, 304, 316, 321, 323, 325, 330, 333, 353, 467, 468, 677, 903, 906, 1544, 1554, 1555, 1594, 1615, 1619], "boradcastbl": [60, 61, 677, 903, 906], "thatth": [60, 61], "30": [60, 61, 285, 286, 301, 302, 309, 310, 677, 903, 906, 943, 946, 999, 1061, 1064, 1087, 1090, 1092, 1095, 1134, 1137, 1144, 1149, 1152, 1311, 1349, 1352, 1378, 1381, 1657, 1668, 1671], "56": [60, 61, 138, 139, 148, 149, 177, 178, 323, 677, 903, 906, 963, 966, 978, 982, 1193, 1194, 1197, 1245, 1271, 1274, 1311, 1378, 1381, 1408, 1412, 1657, 1668, 1671], "21": [60, 61, 102, 103, 110, 111, 132, 133, 148, 149, 177, 178, 255, 256, 285, 286, 301, 302, 309, 310, 374, 381, 387, 392, 552, 599, 602, 677, 713, 716, 743, 746, 748, 751, 903, 906, 999, 1036, 1039, 1311, 1332, 1335, 1378, 1381, 1443, 1454, 1457, 1544, 1550, 1657, 1658, 1661, 1668, 1671], "not_equ": [60, 61, 177, 178, 677], "pow": [60, 61, 177, 178, 316, 677], "expon": [60, 61, 102, 103, 132, 133, 255, 256, 285, 286, 374, 376, 677, 923, 926, 999, 1154, 1157, 1311, 1364, 1366], "rad2deg": [60, 61, 177, 178, 677], "286": [60, 61], "458": [60, 61], "573": [60, 61, 677, 928, 931], "reciproc": [60, 61, 177, 178, 677], "remaind": [60, 61, 102, 103, 144, 145, 165, 166, 177, 178, 255, 256, 297, 298, 374, 378, 677, 1459, 1505, 1508], "modulu": [60, 61, 177, 178, 677, 938, 941], "x2_i": [60, 61, 177, 178, 316, 677, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977], "94": [60, 61, 134, 135, 148, 149, 177, 178, 287, 288, 301, 302, 643, 662, 1193, 1204, 1207], "256": [60, 61, 1245, 1271, 1274], "0001": [60, 61], "36": [60, 61, 138, 139, 285, 286, 293, 294, 677, 713, 716, 999, 1036, 1039, 1311, 1378, 1381, 1408, 1412, 1544, 1555, 1657, 1668, 1671], "67": [60, 61, 132, 133, 177, 178, 285, 286, 301, 302, 677, 748, 751, 763, 766, 999, 1036, 1039, 1193, 1203, 1213, 1233], "45": [60, 61, 162, 167, 168, 177, 178, 287, 288, 301, 302, 677, 713, 716, 773, 776, 1193, 1194, 1197, 1214, 1217, 1311, 1378, 1381, 1459, 1505, 1508, 1657, 1668, 1671], "678": [60, 61], "25": [60, 61, 132, 133, 140, 141, 142, 143, 148, 149, 156, 157, 163, 164, 177, 178, 255, 256, 285, 286, 291, 292, 293, 294, 299, 300, 301, 302, 309, 310, 319, 387, 389, 677, 743, 746, 773, 776, 958, 961, 963, 966, 968, 971, 999, 1087, 1090, 1092, 1095, 1149, 1152, 1311, 1312, 1315, 1332, 1335, 1349, 1352, 1423, 1427, 1443, 1449, 1452, 1544, 1546, 1562, 1563, 1566, 1657, 1668, 1671, 1676, 1679], "33": [60, 61, 148, 149, 156, 157, 177, 178, 285, 286, 287, 288, 291, 292, 677, 708, 711, 743, 746, 999, 1149, 1152, 1193, 1204, 1207, 1245, 1291, 1294, 1311, 1378, 1381, 1544, 1561, 1657, 1668, 1671], "sin": [60, 61, 132, 133, 177, 178, 317, 337, 677, 999, 1049, 1052, 1714], "841": [60, 61, 177, 178, 431, 432, 435, 677, 953, 956], "909": [60, 61, 177, 178, 285, 286, 677, 953, 956], "141": [60, 61, 177, 178, 552, 555, 558, 677, 953, 956], "sinh": [60, 61, 177, 178, 677, 1714], "63": [60, 61, 163, 164, 177, 178, 293, 294, 677, 928, 931, 958, 961, 963, 966, 1311, 1312, 1315, 1378, 1381, 1544, 1546, 1657, 1668, 1671], "232": [60, 61, 177, 178, 677, 958, 961], "sqrt": [60, 61, 177, 178, 677, 1311, 1433, 1437], "squar": [60, 61, 140, 141, 177, 178, 293, 294, 677, 963, 966, 1193, 1203, 1213, 1233, 1311, 1312, 1315, 1322, 1325, 1327, 1330, 1337, 1340, 1341, 1343, 1349, 1352, 1364, 1366, 1393, 1396, 1398, 1401, 1403, 1407, 1423, 1427, 1544, 1550], "tan": [60, 61, 177, 178, 319, 324, 327, 328, 330, 331, 337, 677, 999, 1006, 1714], "tanh": [60, 61, 177, 178, 337, 677, 1714], "762": [60, 61, 177, 178, 677, 853, 856, 983, 987], "964": [60, 61, 177, 178, 677, 983, 987], "trunc": [60, 61, 177, 178, 677], "trunc_divid": [60, 61, 177, 178, 677], "elementwis": [61, 103, 146, 147, 178, 256, 299, 300, 328, 334, 337, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 678, 681, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 718, 721, 723, 726, 728, 731, 733, 736, 738, 741, 743, 746, 748, 751, 753, 756, 758, 761, 763, 766, 768, 771, 773, 776, 778, 781, 783, 786, 788, 791, 793, 796, 798, 801, 803, 806, 808, 811, 813, 816, 818, 821, 823, 826, 828, 831, 833, 836, 838, 841, 843, 846, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 873, 876, 878, 881, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 911, 913, 916, 918, 921, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 973, 977, 978, 982, 983, 987, 988, 992, 993, 997, 1311, 1423, 1427, 1562, 1563, 1566], "exp2": [102, 103, 255, 256, 374], "power": [102, 103, 132, 133, 140, 141, 255, 256, 285, 286, 293, 294, 333, 339, 340, 341, 374, 375, 376, 387, 395, 677, 743, 746, 788, 791, 923, 926, 999, 1070, 1141, 1154, 1157, 1311, 1364, 1366, 1423, 1427, 1544, 1550, 1724, 1726, 1730], "float_pow": [102, 103, 255, 256, 374], "125": [102, 103, 140, 141, 293, 294, 374, 376, 677, 743, 746, 1311, 1423, 1427], "fmax": [102, 103, 255, 256, 374], "fmod": [102, 103, 255, 256, 374], "divis": [102, 103, 132, 133, 134, 135, 255, 256, 285, 286, 287, 288, 328, 374, 378, 677, 743, 746, 773, 776, 803, 806, 938, 941, 993, 997, 999, 1071, 1142, 1149, 1152, 1193, 1194, 1197, 1198, 1201, 1214, 1217], "gcd": [102, 103, 255, 256, 374], "isposinf": [102, 103, 255, 256, 374], "lcm": [102, 103, 255, 256, 374], "60": [102, 103, 255, 256, 285, 286, 301, 302, 374, 381, 999, 1092, 1095, 1149, 1152, 1192, 1311, 1378, 1381, 1657, 1658, 1661, 1668, 1671], "nansum": [102, 103, 255, 256, 374], "keepdim": [102, 103, 128, 129, 140, 141, 144, 145, 150, 151, 156, 157, 158, 159, 165, 166, 255, 256, 281, 282, 293, 294, 297, 298, 303, 304, 309, 310, 311, 312, 325, 331, 337, 374, 382, 427, 428, 1311, 1359, 1362, 1433, 1437, 1459, 1530, 1534, 1594, 1595, 1598, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "flatten": [102, 103, 110, 111, 128, 129, 132, 133, 144, 145, 150, 151, 152, 153, 255, 256, 263, 264, 269, 270, 281, 282, 285, 286, 293, 294, 297, 298, 303, 304, 305, 306, 374, 382, 396, 397, 400, 427, 428, 999, 1049, 1052, 1311, 1344, 1347, 1378, 1381, 1433, 1437, 1459, 1465, 1468, 1490, 1493, 1500, 1503, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "accumul": [102, 103, 255, 256, 374, 382], "By": [102, 103, 156, 157, 158, 159, 255, 256, 309, 310, 311, 312, 321, 323, 328, 330, 331, 337, 341, 342, 374, 382, 387, 395, 1311, 1428, 1432, 1459, 1490, 1493, 1657, 1658, 1661, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "reduc": [102, 103, 128, 129, 132, 133, 140, 141, 150, 151, 156, 157, 158, 159, 165, 166, 255, 256, 281, 282, 285, 286, 293, 294, 303, 304, 309, 310, 311, 312, 325, 331, 335, 337, 339, 374, 382, 427, 428, 643, 667, 999, 1036, 1039, 1311, 1388, 1391, 1594, 1595, 1598, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711, 1722, 1726, 1727, 1728], "hold": [102, 103, 132, 133, 140, 141, 156, 157, 255, 256, 293, 294, 309, 310, 340, 374, 382, 999, 1129, 1132, 1134, 1137, 1311, 1359, 1362, 1657, 1663, 1666, 1725], "637": [102, 103, 255, 256, 374, 383], "212": [102, 103, 138, 139, 255, 256, 374, 383, 1620, 1621, 1625], "0909": [102, 103, 255, 256, 374, 383], "trapz": [102, 103, 177, 178, 374], "dx": [102, 103, 177, 178, 374, 384], "sampl": [102, 103, 120, 121, 148, 149, 156, 157, 177, 178, 273, 274, 301, 302, 309, 310, 329, 332, 333, 374, 384, 416, 417, 470, 505, 506, 1245, 1284, 1287, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1657, 1688, 1691, 1697, 1701], "evenli": [102, 103, 144, 145, 165, 166, 177, 178, 297, 298, 374, 384, 470, 472, 473, 505, 506, 508, 509, 1459, 1505, 1508], "apart": [102, 103, 177, 178, 374, 384], "trapezoid": [102, 103, 177, 178, 374, 384], "gradient": [107, 135, 260, 288, 334, 340, 341, 353, 354, 643, 667, 1194, 1197, 1198, 1201, 1202, 1203, 1204, 1207, 1208, 1211, 1213, 1214, 1217, 1218, 1221, 1222, 1225, 1226, 1227, 1231, 1232, 1233, 1234, 1238, 1239, 1243, 1244, 1540, 1541, 1542, 1543, 1714, 1724], "start_dim": [110, 111, 263, 264, 400, 401], "end_dim": [110, 111, 263, 264, 400, 401], "dim": [110, 111, 165, 166, 171, 172, 263, 264, 321, 332, 335, 400, 401, 470, 521, 524, 1245, 1246, 1276, 1277, 1289], "max_pool1d": [110, 111, 263, 264, 387], "kernel": [110, 111, 138, 139, 263, 264, 291, 292, 335, 337, 354, 387, 392, 393, 1245, 1296, 1299, 1724, 1727, 1728], "stride": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 393, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1290, 1724], "pad": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 393, 999, 1049, 1052, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282, 1290, 1459, 1470, 1473, 1535, 1539], "data_format": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 393, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1289], "nhwc": [110, 111, 138, 139, 263, 264, 291, 292, 387, 393, 1245, 1257, 1260, 1262, 1264, 1279, 1282], "batch_siz": [110, 111, 138, 139, 148, 149, 263, 264, 291, 292, 301, 302, 340, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1567, 1568, 1571], "w": [110, 111, 134, 135, 138, 139, 165, 166, 177, 178, 263, 264, 285, 286, 287, 288, 291, 292, 337, 340, 341, 387, 392, 393, 999, 1041, 1044, 1149, 1152, 1193, 1194, 1197, 1198, 1201, 1202, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1291, 1294, 1544, 1550], "d_in": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282], "slide": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282], "algorithm": [110, 111, 138, 139, 163, 164, 263, 264, 291, 292, 321, 331, 335, 354, 387, 392, 393, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1724, 1726, 1728], "nwc": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 1245, 1247, 1250, 1252, 1255], "ncw": [110, 111, 138, 139, 263, 264, 291, 292, 387, 392, 1245, 1247, 1250, 1252, 1255], "pool": [110, 111, 263, 264, 387, 392, 393], "arang": [110, 111, 140, 141, 263, 264, 269, 270, 293, 294, 321, 387, 392, 393, 470, 505, 506, 508, 509, 999, 1125, 1192, 1311, 1359, 1362, 1657, 1668, 1671, 1714, 1731], "reshap": [110, 111, 140, 141, 144, 145, 165, 166, 263, 264, 291, 292, 293, 294, 297, 298, 330, 331, 333, 337, 339, 342, 387, 392, 393, 400, 401, 999, 1192, 1245, 1257, 1260, 1279, 1282, 1311, 1359, 1362, 1459, 1714], "max_pool2d": [110, 111, 263, 264, 387], "h": [110, 111, 138, 139, 263, 264, 285, 286, 291, 292, 315, 319, 387, 393, 999, 1041, 1044, 1245, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1544, 1547, 1551, 1560, 1720], "nchw": [110, 111, 138, 139, 263, 264, 291, 292, 387, 393, 1245, 1257, 1260, 1262, 1264, 1279, 1282], "40": [110, 111, 132, 133, 162, 167, 168, 255, 256, 285, 286, 301, 302, 387, 393, 677, 743, 746, 763, 766, 963, 966, 999, 1061, 1064, 1134, 1137, 1149, 1152, 1192, 1311, 1349, 1352, 1378, 1381, 1657, 1668, 1671], "46": [110, 111, 148, 149, 263, 264, 291, 292, 301, 302, 387, 388, 393, 677, 858, 861, 948, 951, 1544, 1546], "pad_width": [110, 111, 144, 145, 263, 264, 297, 298, 387, 394, 1459, 1470, 1473, 1535, 1539], "constant": [110, 111, 146, 147, 263, 264, 299, 300, 328, 334, 341, 342, 354, 387, 394, 1459, 1470, 1473, 1544, 1550, 1562, 1563, 1566], "stat_length": [110, 111, 263, 264, 387, 394], "constant_valu": [110, 111, 263, 264, 387, 394], "end_valu": [110, 111, 263, 264, 387, 394], "reflect_typ": [110, 111, 263, 264, 387, 394], "linear_algebra": [112, 113, 140, 141, 265, 266, 293, 294, 334, 396, 397, 398, 1311, 1312, 1315, 1317, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1340, 1341, 1343, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1366, 1368, 1371, 1373, 1376, 1378, 1381, 1383, 1386, 1388, 1391, 1393, 1396, 1398, 1401, 1403, 1407, 1408, 1412, 1413, 1417, 1418, 1422, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442], "diagflat": [112, 113, 265, 266, 396], "offset": [112, 113, 140, 141, 265, 266, 293, 294, 396, 397, 1311, 1332, 1335, 1418, 1422], "padding_valu": [112, 113, 265, 266, 396, 397], "right_left": [112, 113, 265, 266, 396, 397], "num_row": [112, 113, 265, 266, 396, 397], "num_col": [112, 113, 265, 266, 396, 397], "kron": [112, 113, 265, 266, 396, 1731], "loss": [115, 143, 268, 296, 321, 328, 331, 334, 340, 341, 342, 1444, 1447, 1449, 1452, 1454, 1457, 1714, 1724, 1731], "fliplr": [116, 117, 269, 270, 400], "flip": [116, 117, 144, 145, 269, 270, 297, 298, 331, 339, 340, 342, 400, 402, 403, 677, 728, 731, 1459, 1714], "diag": [116, 117, 140, 141, 269, 270, 293, 294, 337, 400, 402, 403, 1311], "flipud": [116, 117, 269, 270, 400], "heavisid": [116, 117, 269, 270, 400], "0000": [116, 117, 263, 264, 387, 388, 391, 400, 404], "5000": [116, 117, 400, 404, 1311, 1349, 1352], "hstack": [116, 117, 269, 270, 400], "vstack": [116, 117, 269, 270, 400], "i0": [116, 117, 269, 270, 400], "bessel": [116, 117, 156, 157, 263, 264, 269, 270, 309, 310, 387, 390, 400, 406, 1657, 1688, 1691, 1697, 1701], "26606588": [116, 117, 269, 270, 400, 406], "2795853": [116, 117, 269, 270, 400, 406], "88079259": [116, 117, 269, 270, 400, 406], "moveaxi": [116, 117, 269, 270, 400], "destin": [116, 117, 269, 270, 400, 407], "unstack": [116, 117, 144, 145, 165, 166, 297, 298, 319, 337, 340, 1459, 1714, 1731], "reorder": [116, 117, 144, 145, 269, 270, 297, 298, 400, 407, 1459, 1480, 1483], "rot90": [116, 117, 269, 270, 400], "rotat": [116, 117, 269, 270, 353, 400, 410], "plane": [116, 117, 269, 270, 400, 410], "top_k": [116, 117, 269, 270, 400], "largest": [116, 117, 165, 166, 269, 270, 353, 400, 411, 552, 588, 591, 599, 602, 1311, 1359, 1362, 1403, 1407], "retun": [116, 117, 269, 270, 400, 411], "smallest": [116, 117, 165, 166, 269, 270, 400, 411, 552, 588, 591, 599, 602, 677, 753, 756, 1311, 1359, 1362], "norm": [119, 132, 133, 140, 141, 147, 272, 285, 286, 293, 294, 300, 334, 999, 1016, 1019, 1021, 1024, 1311, 1359, 1362, 1433, 1437, 1563, 1566, 1714], "dirichlet": [120, 121, 273, 274, 416], "seed": [120, 121, 148, 149, 165, 166, 273, 274, 301, 302, 416, 417, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586, 1589, 1592, 1714], "shuffl": [120, 121, 148, 149, 165, 166, 273, 274, 301, 302, 1567, 1714], "length": [120, 121, 144, 145, 162, 165, 166, 167, 168, 273, 274, 297, 298, 326, 333, 340, 387, 388, 390, 391, 394, 395, 416, 417, 470, 472, 473, 511, 514, 999, 1192, 1311, 1403, 1407, 1408, 1412, 1459, 1495, 1498], "nativeshap": [120, 121, 144, 145, 148, 149, 273, 274, 297, 298, 301, 302, 416, 417, 470, 485, 499, 526, 527, 544, 546, 999, 1134, 1137, 1147, 1164, 1170, 1245, 1252, 1255, 1262, 1264, 1271, 1274, 1459, 1495, 1498, 1567, 1573, 1576, 1578, 1581, 1583, 1586], "drawn": [120, 121, 148, 149, 273, 274, 301, 302, 333, 416, 417, 1567, 1568, 1571, 1573, 1576, 1578, 1581, 1583, 1586], "vector": [120, 121, 132, 133, 138, 139, 140, 141, 285, 286, 291, 292, 293, 294, 353, 387, 394, 416, 417, 470, 511, 514, 999, 1021, 1024, 1192, 1245, 1291, 1294, 1311, 1317, 1320, 1337, 1340, 1344, 1347, 1354, 1357, 1378, 1381, 1403, 1407, 1408, 1412, 1423, 1427, 1428, 1432, 1433, 1437, 1438, 1442, 1724], "10598304": [120, 121, 416, 417], "21537054": [120, 121, 416, 417], "67864642": [120, 121, 416, 417], "48006698": [120, 121, 416, 417], "07472073": [120, 121, 416, 417], "44521229": [120, 121, 416, 417], "55479872": [120, 121, 416, 417], "05426367": [120, 121, 416, 417], "39093761": [120, 121, 416, 417], "19531053": [120, 121, 416, 417], "51675832": [120, 121, 416, 417], "28793114": [120, 121, 416, 417], "12315625": [120, 121, 416, 417], "29823365": [120, 121, 416, 417], "5786101": [120, 121, 416, 417], "15564976": [120, 121, 416, 417], "50542368": [120, 121, 416, 417], "33892656": [120, 121, 416, 417], "1325352": [120, 121, 416, 417], "44439589": [120, 121, 416, 417], "42306891": [120, 121, 416, 417], "msort": [126, 127, 279, 280, 420], "randint": [126, 127, 138, 139, 148, 149, 279, 280, 291, 292, 301, 302, 321, 420, 421, 1567, 1714], "median": [128, 129, 281, 282, 331, 387, 394, 427], "all_equ": [132, 133, 285, 286, 999], "equality_matrix": [132, 133, 285, 286, 999, 1000, 1003], "compar": [132, 133, 154, 155, 165, 166, 285, 286, 307, 308, 318, 323, 326, 332, 333, 340, 999, 1000, 1003, 1007, 1009, 1311, 1408, 1412, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1642, 1645, 1652, 1655, 1720, 1722, 1724, 1730, 1731], "array_equ": [132, 133, 999], "assert_supports_inplac": [132, 133, 285, 286, 999], "clip_matrix_norm": [132, 133, 285, 286, 999], "max_norm": [132, 133, 285, 286, 999, 1016, 1019, 1021, 1024], "downscal": [132, 133, 285, 286, 999, 1016, 1019, 1021, 1024], "894": [132, 133, 285, 286, 999, 1016, 1019, 1021, 1024, 1562, 1563, 1566], "79": [132, 133, 285, 286, 301, 302, 677, 748, 751, 773, 776, 999, 1016, 1019, 1021, 1024], "clip_vector_norm": [132, 133, 285, 286, 999], "default_v": [132, 133, 999, 1028, 1030], "catch_except": [132, 133, 999, 1028, 1030], "rev": [132, 133, 999, 1028, 1030], "with_cal": [132, 133, 999, 1028, 1030], "catch": [132, 133, 333, 999, 1028, 1030], "callabl": [132, 133, 285, 286, 319, 325, 331, 333, 337, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 387, 394, 467, 468, 470, 479, 480, 481, 552, 593, 594, 596, 597, 643, 655, 656, 667, 999, 1005, 1015, 1028, 1030, 1036, 1039, 1054, 1055, 1125, 1181, 1192, 1245, 1301, 1304, 1540, 1541, 1542, 1543, 1544, 1550, 1551, 1552, 1554, 1555, 1556, 1557], "einops_rearrang": [132, 133, 285, 286, 999], "axes_length": [132, 133, 285, 286, 999, 1031, 1034, 1036, 1039, 1041, 1044], "arrang": [132, 133, 999, 1031, 1034], "rearrang": [132, 133, 285, 286, 999, 1031, 1034, 1041, 1044], "einops_reduc": [132, 133, 285, 286, 999], "reduct": [132, 133, 142, 143, 158, 159, 165, 166, 285, 286, 295, 296, 311, 312, 321, 333, 339, 999, 1036, 1039, 1129, 1132, 1134, 1137, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1702, 1703, 1706, 1708, 1711, 1714], "One": [132, 133, 144, 145, 148, 149, 285, 286, 297, 298, 301, 302, 321, 323, 332, 333, 337, 339, 340, 387, 394, 999, 1036, 1039, 1459, 1495, 1498, 1567, 1573, 1576], "prod": [132, 133, 156, 157, 285, 286, 309, 310, 321, 323, 337, 999, 1036, 1039, 1657], "einops_repeat": [132, 133, 285, 286, 999], "fourier_encod": [132, 133, 285, 286, 999], "max_freq": [132, 133, 285, 286, 999, 1049, 1052], "num_band": [132, 133, 285, 286, 999, 1049, 1052], "linear": [132, 133, 138, 139, 163, 164, 285, 286, 291, 292, 324, 331, 333, 335, 337, 340, 341, 342, 387, 394, 431, 432, 435, 437, 440, 447, 450, 462, 465, 999, 1049, 1052, 1125, 1245, 1284, 1287, 1398, 1401, 1544, 1551, 1714, 1722, 1723, 1724, 1727], "concat": [132, 133, 144, 145, 165, 166, 297, 298, 332, 335, 337, 400, 401, 643, 667, 999, 1049, 1052, 1459, 1714], "band": [132, 133, 285, 286, 999, 1049, 1052], "linearli": [132, 133, 285, 286, 999, 1049, 1052, 1311, 1398, 1401], "oppos": [132, 133, 285, 286, 321, 999, 1049, 1052], "geometr": [132, 133, 285, 286, 999, 1049, 1052, 1311, 1423, 1427], "concaten": [132, 133, 144, 145, 332, 335, 337, 340, 999, 1049, 1052, 1459, 1465, 1468, 1714], "seper": [132, 133, 323, 999, 1049, 1052], "batch": [132, 133, 165, 166, 285, 286, 293, 294, 319, 328, 340, 643, 665, 666, 999, 1049, 1052, 1056, 1059, 1192, 1245, 1291, 1294, 1311, 1433, 1437, 1540, 1541, 1542, 1543, 1562, 1563, 1566, 1722], "expand": [132, 133, 144, 145, 285, 286, 319, 999, 1049, 1052, 1459, 1475, 1478], "gather": [132, 133, 285, 286, 999, 1061, 1064, 1069, 1731], "gather_nd": [132, 133, 285, 286, 999, 1714], "get_num_dim": [132, 133, 285, 286, 999, 1714], "as_arrai": [132, 133, 285, 286, 999, 1073, 1076, 1147], "has_nan": [132, 133, 285, 286, 999], "include_inf": [132, 133, 285, 286, 999, 1081, 1084, 1187, 1191], "inplace_decr": [132, 133, 285, 286, 999], "val": [132, 133, 165, 166, 285, 286, 330, 339, 999, 1087, 1090, 1092, 1095, 1097, 1100, 1141, 1142], "decrement": [132, 133, 285, 286, 999, 1087, 1090], "inplace_incr": [132, 133, 285, 286, 999], "inplace_upd": [132, 133, 285, 286, 330, 999], "ensure_in_backend": [132, 133, 330, 999, 1097, 1100], "inplac": [132, 133, 134, 135, 165, 166, 285, 286, 315, 317, 323, 327, 329, 332, 335, 339, 341, 999, 1006, 1010, 1013, 1086, 1097, 1100, 1102, 1311, 1349, 1352], "is_arrai": [132, 133, 285, 286, 331, 999], "exclus": [132, 133, 134, 135, 156, 157, 165, 166, 285, 286, 287, 288, 309, 310, 319, 321, 328, 331, 334, 342, 470, 472, 473, 999, 1103, 1106, 1109, 1112, 1119, 1122, 1193, 1208, 1211, 1567, 1573, 1576, 1657, 1658, 1661, 1663, 1666, 1728, 1730], "trace": [132, 133, 140, 141, 165, 166, 285, 286, 293, 294, 316, 321, 337, 354, 999, 1103, 1106, 1109, 1112, 1119, 1122, 1140, 1183, 1311, 1713, 1725, 1730], "is_ivy_arrai": [132, 133, 285, 286, 330, 339, 999], "is_ivy_contain": [132, 133, 285, 286, 999], "is_native_arrai": [132, 133, 285, 286, 339, 999], "scatter_flat": [132, 133, 285, 286, 999], "occupi": [132, 133, 552, 588, 591, 599, 602, 999, 1129, 1132, 1134, 1137], "scatter_nd": [132, 133, 285, 286, 335, 339, 999, 1714], "arr": [132, 133, 173, 174, 321, 322, 552, 611, 614], "stable_divid": [132, 133, 285, 286, 328, 999], "denomin": [132, 133, 146, 147, 285, 286, 299, 300, 328, 354, 999, 1071, 1142, 1149, 1152, 1562, 1563, 1566, 1721], "min_denomin": [132, 133, 285, 286, 999, 1149, 1152], "_min_denomin": [132, 133, 285, 286, 999, 1149, 1152], "stable_pow": [132, 133, 285, 286, 999], "min_bas": [132, 133, 285, 286, 999, 1154, 1157], "_min_bas": [132, 133, 146, 147, 285, 286, 299, 300, 999, 1154, 1157, 1562, 1563, 1566], "supports_inplace_upd": [132, 133, 285, 286, 999], "supports_inplac": [132, 133, 285, 286], "to_list": [132, 133, 285, 286, 999, 1714], "represent": [132, 133, 162, 165, 166, 167, 168, 285, 286, 353, 469, 552, 553, 554, 588, 591, 599, 602, 643, 645, 646, 677, 678, 681, 693, 696, 723, 726, 738, 741, 748, 751, 888, 891, 903, 906, 999, 1005, 1165, 1169, 1722, 1723, 1725, 1729, 1730], "to_numpi": [132, 133, 285, 286, 340, 999, 1714], "to_scalar": [132, 133, 285, 286, 999], "value_is_nan": [132, 133, 285, 286, 999], "92": [132, 133, 301, 302, 1193, 1222, 1225, 1311, 1322, 1325], "adam_step": [134, 135, 287, 288, 1193], "mw": [134, 135, 287, 288, 341, 1193, 1194, 1197, 1198, 1201], "vw": [134, 135, 287, 288, 341, 1193, 1194, 1197, 1198, 1201], "beta1": [134, 135, 287, 288, 341, 999, 1006, 1193, 1194, 1197, 1198, 1201, 1214, 1217], "beta2": [134, 135, 287, 288, 341, 999, 1006, 1193, 1194, 1197, 1198, 1201, 1214, 1217], "999": [134, 135, 177, 178, 287, 288, 341, 677, 983, 987, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1222, 1225], "epsilon": [134, 135, 140, 141, 142, 143, 146, 147, 287, 288, 293, 294, 295, 296, 299, 300, 319, 328, 330, 341, 999, 1006, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1311, 1368, 1371, 1383, 1386, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1562, 1563, 1566], "1e": [134, 135, 142, 143, 146, 147, 287, 288, 295, 296, 299, 300, 319, 328, 330, 332, 341, 342, 552, 588, 591, 677, 858, 861, 999, 1070, 1071, 1141, 1142, 1146, 1149, 1152, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1222, 1225, 1311, 1403, 1407, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1562, 1563, 1566, 1714], "07": [134, 135, 142, 143, 177, 178, 287, 288, 295, 296, 301, 302, 341, 677, 713, 716, 848, 851, 868, 871, 948, 951, 1193, 1194, 1197, 1198, 1201, 1203, 1204, 1207, 1213, 1214, 1217, 1233, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "cost": [134, 135, 287, 288, 335, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1540, 1541, 1542, 1543, 1722], "weight": [134, 135, 138, 139, 146, 147, 287, 288, 291, 292, 299, 300, 319, 328, 337, 341, 342, 387, 389, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1245, 1291, 1294, 1296, 1299, 1306, 1309, 1562, 1563, 1566, 1723], "dc": [134, 135, 287, 288, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225], "dw": [134, 135, 287, 288, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225], "averag": [134, 135, 287, 288, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1540, 1541, 1542], "forget": [134, 135, 287, 288, 321, 1193, 1194, 1197, 1198, 1201, 1214, 1217], "adam": [134, 135, 287, 288, 340, 341, 342, 999, 1006, 1193, 1194, 1197, 1198, 1201, 1214, 1217, 1714, 1724], "delta": [134, 135, 287, 288, 1193, 1194, 1197], "dcdw": [134, 135, 287, 288, 1193, 1194, 1197, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221], "adam_step_delta": [134, 135, 287, 288, 1193, 1194, 1197], "182": [134, 135, 1193, 1194, 1197], "adam_upd": [134, 135, 287, 288, 341, 1193], "lr": [134, 135, 287, 288, 340, 341, 999, 1006, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225], "mw_tm1": [134, 135, 287, 288, 1193, 1198, 1201, 1214, 1217], "vw_tm1": [134, 135, 287, 288, 1193, 1198, 1201, 1214, 1217], "stop_gradi": [134, 135, 287, 288, 341, 643, 667, 999, 1006, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1540, 1541, 1542, 1543, 1714], "rate": [134, 135, 287, 288, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1540, 1541, 1542, 1543], "stop": [134, 135, 171, 172, 287, 288, 327, 335, 337, 354, 470, 472, 473, 505, 506, 508, 509, 643, 644, 667, 1193, 1198, 1201, 1204, 1207, 1214, 1217, 1218, 1221, 1222, 1225, 1227, 1231, 1540, 1541, 1542, 1543, 1544, 1555, 1724], "ws_new": [134, 135, 287, 288, 1193, 1198, 1201, 1214, 1217, 1218, 1221, 1222, 1225], "gradient_descent_upd": [134, 135, 287, 288, 1193, 1540, 1541, 1542, 1543, 1714], "handl": [134, 135, 162, 165, 166, 167, 168, 315, 319, 321, 322, 327, 328, 329, 330, 331, 332, 333, 335, 341, 467, 468, 643, 645, 646, 647, 648, 649, 652, 657, 661, 662, 673, 676, 1721, 1731], "higher": [134, 135, 336, 337, 342, 354, 1721, 1724, 1725, 1728, 1730, 1731], "descent": [134, 135, 287, 288, 341, 1193, 1204, 1207, 1724], "new_weight": [134, 135, 287, 288, 340, 1193, 1204, 1207, 1214, 1217], "95": [134, 135, 148, 149, 287, 288, 301, 302, 431, 432, 435, 677, 948, 951, 1193, 1194, 1197, 1204, 1207, 1222, 1225, 1567, 1578, 1581], "97": [134, 135, 177, 178, 287, 288, 301, 302, 677, 703, 706, 1193, 1204, 1207], "96": [134, 135, 177, 178, 255, 256, 285, 286, 301, 302, 677, 758, 761, 978, 982, 999, 1036, 1039, 1193, 1204, 1207, 1311, 1378, 1381, 1657, 1668, 1671], "is_vari": [134, 135, 287, 288, 330, 1193], "trainabl": [134, 135, 287, 288, 324, 338, 340, 341, 1193, 1208, 1211], "is_var": [134, 135, 287, 288, 1193, 1208, 1211], "lamb_upd": [134, 135, 287, 288, 1193], "max_trust_ratio": [134, 135, 287, 288, 1193, 1214, 1217], "decay_lambda": [134, 135, 287, 288, 1193, 1214, 1217, 1218, 1221], "trust": [134, 135, 287, 288, 1193, 1214, 1217], "ratio": [134, 135, 287, 288, 1193, 1214, 1217], "decai": [134, 135, 287, 288, 1193, 1214, 1217, 1218, 1221], "lamb": [134, 135, 287, 288, 341, 1193, 1214, 1217], "784": [134, 135, 1193, 1214, 1217], "78": [134, 135, 677, 748, 751, 848, 851, 853, 856, 948, 951, 1193, 1214, 1217, 1311, 1378, 1381, 1567, 1578, 1581, 1657, 1668, 1671], "02": [134, 135, 146, 147, 148, 149, 177, 178, 287, 288, 301, 302, 677, 868, 871, 999, 1149, 1152, 1193, 1194, 1197, 1214, 1217, 1562, 1563, 1566, 1567, 1583, 1586], "01": [134, 135, 287, 288, 301, 302, 318, 342, 387, 391, 677, 868, 871, 943, 946, 948, 951, 999, 1149, 1152, 1193, 1194, 1197, 1214, 1217, 1311, 1408, 1412, 1567, 1578, 1581], "5e": [134, 135, 1193, 1214, 1217], "04": [134, 135, 287, 288, 332, 333, 431, 442, 445, 552, 588, 591, 677, 793, 796, 858, 861, 999, 1141, 1146, 1193, 1194, 1197, 1214, 1217, 1245, 1306, 1309], "0e": [134, 135, 287, 288, 1193, 1214, 1217], "lars_upd": [134, 135, 287, 288, 1193], "lar": [134, 135, 287, 288, 341, 1193, 1218, 1221], "optimizer_upd": [134, 135, 287, 288, 1193], "effective_grad": [134, 135, 287, 288, 1193, 1222, 1225], "3e": [134, 135, 287, 288, 1193, 1222, 1225], "preserve_typ": [134, 135, 287, 288, 1193, 1227, 1231], "preserv": [134, 135, 162, 165, 166, 167, 168, 287, 288, 333, 342, 354, 400, 402, 403, 1193, 1227, 1231, 1459, 1480, 1483], "variable_data": [134, 135, 287, 288, 1193], "intern": [134, 135, 165, 166, 287, 288, 317, 319, 322, 324, 330, 1193, 1239, 1243, 1544, 1545, 1554, 1555], "conv1d": [138, 139, 291, 292, 1245], "dilat": [138, 139, 263, 264, 291, 292, 1245, 1246, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1278, 1279, 1282], "convolut": [138, 139, 291, 292, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282, 1722, 1724], "fw": [138, 139, 291, 292, 332, 333, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282], "d_out": [138, 139, 291, 292, 1245, 1247, 1250, 1252, 1255, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277], "wio": [138, 139, 1245, 1247, 1250], "conv1d_transpos": [138, 139, 291, 292, 1245], "output_shap": [138, 139, 291, 292, 1245, 1246, 1252, 1255, 1262, 1264, 1271, 1274, 1277], "conv2d": [138, 139, 291, 292, 1245, 1714], "fh": [138, 139, 291, 292, 1245, 1257, 1260, 1262, 1264, 1266, 1269, 1271, 1274, 1276, 1277, 1279, 1282], "hwio": [138, 139, 1245, 1257, 1260], "conv3d": [138, 139, 291, 292, 1245], "ndhwc": [138, 139, 291, 292, 1245, 1266, 1269, 1271, 1274], "conv3d_transpos": [138, 139, 291, 292, 1245], "depthwise_conv2d": [138, 139, 291, 292, 1245, 1714], "255": [138, 139, 291, 292, 677, 743, 746], "random_norm": [138, 139, 148, 149, 291, 292, 301, 302, 1245, 1271, 1274, 1279, 1282, 1311, 1403, 1407, 1567, 1620, 1621, 1625], "std": [138, 139, 148, 149, 156, 157, 291, 292, 301, 302, 309, 310, 323, 1245, 1271, 1274, 1279, 1282, 1567, 1573, 1576, 1578, 1581, 1620, 1621, 1625, 1657], "dropout": [138, 139, 291, 292, 340, 1245], "prob": [138, 139, 291, 292, 301, 302, 1245, 1284, 1287, 1567, 1568, 1571], "scale": [138, 139, 287, 288, 291, 292, 396, 398, 643, 665, 666, 1193, 1218, 1221, 1245, 1284, 1287, 1301, 1304, 1306, 1309, 1724, 1726], "bia": [138, 139, 146, 147, 291, 292, 299, 300, 337, 341, 999, 1125, 1245, 1291, 1294, 1296, 1299, 1562, 1563, 1566], "transform": [138, 139, 291, 292, 342, 353, 1245, 1284, 1287, 1291, 1294, 1713, 1722, 1724, 1725, 1726], "outer_batch_shap": [138, 139, 291, 292, 1245, 1291, 1294], "inner_batch_shap": [138, 139, 291, 292, 1245, 1291, 1294], "in_featur": [138, 139, 291, 292, 1245, 1291, 1294], "out_featur": [138, 139, 291, 292, 1245, 1284, 1287, 1291, 1294], "84": [138, 139, 177, 178, 299, 300, 301, 302, 552, 599, 602, 643, 654, 1311, 1378, 1381, 1562, 1563, 1566, 1657, 1668, 1671], "133": [138, 139, 999, 1021, 1024], "134": [138, 139], "lstm_updat": [138, 139, 291, 292, 337, 1245], "init_h": [138, 139, 291, 292, 337, 1245, 1296, 1299], "init_c": [138, 139, 291, 292, 337, 1245, 1296, 1299], "recurrent_kernel": [138, 139, 291, 292, 337, 1245, 1296, 1299], "recurrent_bia": [138, 139, 291, 292, 337, 1245, 1296, 1299], "multi_head_attent": [138, 139, 291, 292, 330, 1245], "num_head": [138, 139, 291, 292, 1245, 1301, 1304], "mask": [138, 139, 291, 292, 335, 999, 1069, 1245, 1301, 1304, 1306, 1309], "to_q_fn": [138, 139, 291, 292, 1245, 1301, 1304], "to_kv_fn": [138, 139, 291, 292, 1245, 1301, 1304], "to_out_fn": [138, 139, 291, 292, 330, 1245, 1301, 1304], "to_q_v": [138, 139, 291, 292, 1245, 1301, 1304], "to_kv_v": [138, 139, 291, 292, 1245, 1301, 1304], "to_out_v": [138, 139, 291, 292, 1245, 1301, 1304], "scaled_dot_product_attent": [138, 139, 291, 292, 1245], "choleski": [140, 141, 293, 294, 330, 1311], "symmetr": [140, 141, 263, 264, 293, 294, 319, 387, 388, 389, 390, 391, 394, 1311, 1312, 1315, 1337, 1340, 1341, 1343, 1438, 1442], "625": [140, 141, 1311, 1312, 1315], "cross": [140, 141, 142, 143, 293, 294, 295, 296, 320, 1311, 1443, 1444, 1447, 1449, 1452, 1454, 1457, 1714], "vif": [140, 141, 293, 294, 1311, 1317, 1320], "det": [140, 141, 293, 294, 1311], "axis1": [140, 141, 144, 145, 293, 294, 297, 298, 1311, 1332, 1335, 1418, 1422, 1459, 1520, 1524], "axis2": [140, 141, 293, 294, 1311, 1332, 1335, 1418, 1422], "eigh": [140, 141, 293, 294, 1311], "eigvalsh": [140, 141, 1311], "inv": [140, 141, 293, 294, 1311, 1714], "adjoint": [140, 141, 293, 294, 1311, 1349, 1352, 1403, 1407], "matmul": [140, 141, 293, 294, 318, 333, 334, 337, 999, 1192, 1311, 1403, 1407, 1714], "matrix_norm": [140, 141, 293, 294, 1311], "ord": [140, 141, 293, 294, 1311, 1359, 1362, 1433, 1437], "fro": [140, 141, 293, 294, 1311, 1359, 1362], "liter": [140, 141, 293, 294, 326, 387, 394, 1311, 1359, 1362, 1433, 1437], "nuc": [140, 141, 293, 294, 1311, 1359, 1362], "matrix_rank": [140, 141, 293, 294, 1311], "atol": [140, 141, 293, 294, 1311, 1368, 1371], "rtol": [140, 141, 293, 294, 332, 1311, 1368, 1371, 1383, 1386], "rank": [140, 141, 144, 145, 158, 159, 293, 294, 297, 298, 311, 312, 387, 394, 470, 511, 514, 1311, 1317, 1320, 1327, 1330, 1368, 1371, 1388, 1391, 1398, 1401, 1418, 1422, 1428, 1432, 1433, 1437, 1459, 1470, 1473, 1475, 1478, 1515, 1518, 1530, 1534, 1535, 1539, 1594, 1610, 1613, 1702, 1703, 1706, 1708, 1711], "singular": [140, 141, 293, 294, 321, 1311, 1359, 1362, 1368, 1371, 1383, 1386, 1403, 1407, 1408, 1412], "toler": [140, 141, 293, 294, 316, 332, 1311, 1368, 1371, 1383, 1386, 1724], "small": [140, 141, 146, 147, 293, 294, 299, 300, 323, 328, 332, 335, 337, 341, 354, 677, 903, 906, 1311, 1368, 1371, 1383, 1386, 1562, 1563, 1566, 1725], "largest_singular_valu": [140, 141, 293, 294, 1311, 1368, 1371, 1383, 1386], "ep": [140, 141, 293, 294, 552, 588, 591, 1311, 1368, 1371, 1383, 1386], "defici": [140, 141, 1311, 1368, 1371], "matrix_transpos": [140, 141, 293, 294, 339, 1311], "pinv": [140, 141, 293, 294, 1311, 1714], "0426": [140, 141, 293, 294, 1567, 1578, 1581], "0964": [140, 141, 293, 294], "0605": [140, 141, 293, 294], "1368": [140, 141, 293, 294], "qr": [140, 141, 293, 294, 1311], "slogdet": [140, 141, 293, 294, 1311], "namedtupl": [140, 141, 152, 153, 293, 294, 305, 306, 1311, 1337, 1340, 1388, 1391, 1393, 1396, 1403, 1407, 1620, 1621, 1625, 1626, 1630, 1631, 1635], "logabsdet": [140, 141, 293, 294, 1311, 1393, 1396], "6931472": [140, 141, 1311, 1393, 1396], "solv": [140, 141, 293, 294, 316, 331, 338, 353, 1311, 1726], "svd": [140, 141, 293, 294, 1311, 1408, 1412, 1714], "compute_uv": [140, 141, 293, 294, 1311, 1403, 1407], "full_matric": [140, 141, 293, 294, 1311, 1403, 1407], "svdval": [140, 141, 293, 294, 1311], "tensordot": [140, 141, 293, 294, 321, 1311], "vander": [140, 141, 293, 294, 1311], "vandermond": [140, 141, 293, 294, 1311, 1423, 1427], "column": [140, 141, 293, 294, 370, 371, 400, 402, 403, 405, 470, 491, 492, 1311, 1337, 1340, 1359, 1362, 1388, 1391, 1398, 1401, 1403, 1407, 1423, 1427], "len": [140, 141, 293, 294, 319, 330, 331, 333, 339, 342, 470, 511, 514, 1311, 1423, 1427], "vecdot": [140, 141, 293, 294, 1311], "vector_norm": [140, 141, 293, 294, 1311], "vector_to_skew_symmetric_matrix": [140, 141, 293, 294, 1311, 1714], "binary_cross_entropi": [142, 143, 295, 296, 1443], "pred": [142, 143, 295, 296, 319, 328, 330, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "predict": [142, 143, 295, 296, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "amount": [142, 143, 295, 296, 322, 332, 643, 673, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "smooth": [142, 143, 295, 296, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "binari": [142, 143, 295, 296, 677, 723, 726, 738, 741, 748, 751, 888, 891, 1443, 1444, 1447], "entropi": [142, 143, 295, 296, 1443, 1444, 1447, 1449, 1452, 1454, 1457], "357": [142, 143, 295, 296, 1443, 1444, 1447, 1454, 1457], "223": [142, 143, 295, 296, 1443, 1444, 1447], "cross_entropi": [142, 143, 295, 296, 319, 328, 330, 1443, 1454, 1457], "3862944": [142, 143, 1443, 1449, 1452], "sparse_cross_entropi": [142, 143, 295, 296, 1443], "logit": [142, 143, 295, 296, 1443, 1454, 1457], "x_min": [144, 145, 297, 298, 342, 1459, 1460, 1463], "x_max": [144, 145, 297, 298, 342, 1459, 1460, 1463], "join": [144, 145, 165, 166, 325, 1459, 1465, 1468, 1515, 1518, 1714], "count": [144, 145, 152, 153, 158, 159, 297, 298, 305, 306, 311, 312, 319, 323, 340, 643, 661, 1311, 1428, 1432, 1459, 1465, 1468, 1480, 1483, 1620, 1621, 1625, 1626, 1630, 1702, 1703, 1706, 1708, 1711], "constant_pad": [144, 145, 297, 298, 1459], "expand_dim": [144, 145, 297, 298, 331, 337, 340, 1245, 1279, 1282, 1459, 1714], "permute_dim": [144, 145, 297, 298, 1459], "valueerror": [144, 145, 285, 286, 297, 298, 325, 999, 1159, 1163, 1459, 1495, 1498, 1510, 1513], "reus": [144, 145, 297, 298, 325, 333, 1459, 1495, 1498, 1729], "memori": [144, 145, 297, 298, 321, 322, 330, 331, 335, 337, 352, 354, 470, 511, 514, 643, 647, 662, 667, 673, 676, 1245, 1296, 1299, 1459, 1495, 1498, 1714, 1724, 1726, 1727, 1728], "buffer": [144, 145, 297, 298, 354, 1459, 1495, 1498], "roll": [144, 145, 297, 298, 319, 327, 1459], "larger": [144, 145, 156, 157, 297, 298, 309, 310, 333, 552, 588, 591, 1459, 1460, 1463, 1500, 1503, 1657, 1688, 1691, 1697, 1701, 1731], "restor": [144, 145, 297, 298, 1459, 1500, 1503], "num_or_size_split": [144, 145, 165, 166, 297, 298, 337, 1459, 1505, 1508], "with_remaind": [144, 145, 165, 166, 297, 298, 1459, 1505, 1508], "entri": [144, 145, 165, 166, 297, 298, 400, 402, 403, 470, 505, 506, 508, 509, 1459, 1505, 1508, 1544, 1557, 1724], "squeez": [144, 145, 297, 298, 1459, 1714, 1724], "swapax": [144, 145, 297, 298, 1459], "axis0": [144, 145, 297, 298, 1459, 1520, 1524], "swap_ax": [144, 145], "tile": [144, 145, 285, 286, 297, 298, 1459, 1714], "rep": [144, 145, 297, 298, 1459, 1525, 1529], "unpack": [144, 145, 297, 298, 326, 332, 333, 1459, 1530, 1534], "zero_pad": [144, 145, 297, 298, 1459, 1714], "layer_norm": [146, 147, 299, 300, 1562], "normalized_idx": [146, 147, 299, 300, 1562, 1563, 1566], "new_std": [146, 147, 299, 300, 1562, 1563, 1566], "learnabl": [146, 147, 299, 300, 342, 1562, 1563, 1566], "gamma": [146, 147, 299, 300, 1562, 1563, 1566], "0976": [146, 147, 1562, 1563, 1566], "3452": [146, 147, 1562, 1563, 1566], "2740": [146, 147, 1562, 1563, 1566], "1047": [146, 147, 1562, 1563, 1566], "5886": [146, 147, 1562, 1563, 1566], "2732": [146, 147, 1562, 1563, 1566], "7696": [146, 147, 1562, 1563, 1566], "7024": [146, 147, 1562, 1563, 1566], "2518": [146, 147, 1562, 1563, 1566], "826": [146, 147, 1562, 1563, 1566], "178": [146, 147, 1562, 1563, 1566], "981": [146, 147, 1562, 1563, 1566], "831": [146, 147, 1562, 1563, 1566], "421": [146, 147, 1562, 1563, 1566], "multinomi": [148, 149, 301, 302, 416, 417, 1567], "population_s": [148, 149, 301, 302, 1567, 1568, 1571], "num_sampl": [148, 149, 301, 302, 1567, 1568, 1571], "unnorm": [148, 149, 301, 302, 333, 1567, 1568, 1571], "popul": [148, 149, 156, 157, 165, 166, 301, 302, 309, 310, 321, 322, 333, 337, 1567, 1568, 1571, 1657, 1688, 1691, 1697, 1701, 1730], "uniform": [148, 149, 301, 302, 341, 1567, 1568, 1571, 1573, 1576, 1583, 1586, 1731], "batch_shap": [148, 149, 171, 172, 301, 302, 335, 337, 339, 470, 491, 492, 521, 524, 1245, 1296, 1299, 1301, 1304, 1306, 1309, 1311, 1438, 1442, 1567, 1568, 1571], "independ": [148, 149, 301, 302, 316, 321, 323, 329, 337, 342, 1311, 1317, 1320, 1398, 1401, 1567, 1568, 1571, 1722], "parameter": [148, 149, 301, 302, 1567, 1578, 1581, 1583, 1586], "highest": [148, 149, 301, 302, 1567, 1573, 1576], "low": [148, 149, 301, 302, 319, 331, 335, 337, 1567, 1573, 1576, 1583, 1586, 1720, 1722, 1724, 1725, 1726, 1728, 1730], "half": [148, 149, 301, 302, 335, 470, 472, 473, 1567, 1573, 1576, 1583, 1586], "int16": [148, 149, 173, 174, 301, 302, 321, 333, 337, 552, 570, 573, 581, 593, 594, 616, 619, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "int64": [148, 149, 150, 151, 154, 155, 173, 174, 301, 302, 303, 304, 307, 308, 309, 310, 321, 333, 337, 552, 570, 573, 581, 587, 593, 594, 599, 602, 621, 624, 635, 1594, 1595, 1598, 1600, 1603, 1641, 1647, 1650, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "44": [148, 149, 177, 178, 301, 302, 677, 703, 706, 943, 946, 963, 966, 968, 971, 999, 1015, 1311, 1378, 1381, 1544, 1552, 1594, 1615, 1619, 1657, 1668, 1671], "72": [148, 149, 287, 288, 677, 788, 791, 793, 796, 1193, 1204, 1207, 1311, 1378, 1381, 1657, 1668, 1671], "235": [148, 149], "float16": [148, 149, 301, 302, 321, 333, 374, 376, 552, 576, 588, 591, 596, 597], "49": [148, 149, 293, 294, 431, 457, 460, 677, 963, 966, 1657, 1668, 1671], "807": [148, 149], "42": [148, 149, 163, 164, 287, 288, 299, 300, 301, 302, 337, 342, 431, 462, 465, 677, 743, 746, 1193, 1194, 1197, 1204, 1207, 1311, 1359, 1362, 1378, 1381, 1562, 1563, 1566, 1567, 1588, 1657, 1658, 1661, 1668, 1671], "random_uniform": [148, 149, 301, 302, 322, 333, 341, 1567, 1714], "boundari": [148, 149, 301, 302, 1567, 1583, 1586, 1724], "86": [148, 149, 301, 302, 1193, 1194, 1197], "06": [148, 149, 177, 178, 287, 288, 333, 340, 431, 432, 435, 552, 588, 591, 1193, 1214, 1217], "53": [148, 149, 177, 178, 643, 673, 1193, 1203, 1213, 1233, 1562, 1563, 1566], "argmax": [150, 151, 303, 304, 1594, 1714], "output_dtyp": [150, 151, 303, 304, 1594, 1595, 1598, 1600, 1603], "insert": [150, 151, 303, 304, 1459, 1475, 1478, 1544, 1549, 1594, 1595, 1598, 1641, 1647, 1650], "occurr": [150, 151, 1594, 1595, 1598, 1600, 1603, 1620, 1621, 1625], "argmin": [150, 151, 303, 304, 1594, 1714], "singleton": [150, 151, 156, 157, 158, 159, 293, 294, 303, 304, 309, 310, 311, 312, 337, 1311, 1433, 1437, 1459, 1475, 1478, 1510, 1513, 1594, 1600, 1603, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "accordingli": [150, 151, 156, 157, 158, 159, 293, 294, 303, 304, 309, 310, 311, 312, 326, 331, 337, 470, 511, 514, 677, 793, 796, 858, 861, 1311, 1433, 1437, 1594, 1600, 1603, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1684, 1687, 1688, 1691, 1692, 1696, 1697, 1701, 1702, 1703, 1706, 1708, 1711], "argwher": [150, 151, 303, 304, 326, 1594], "nonzero": [150, 151, 303, 304, 677, 693, 696, 903, 906, 1594], "as_tupl": [150, 151, 303, 304, 1594, 1610, 1613], "fewer": [150, 151, 303, 304, 1594, 1610, 1613], "yield": [150, 151, 320, 326, 387, 394, 400, 408, 409, 1594, 1615, 1619], "unique_al": [152, 153, 305, 306, 1620], "unique_count": [152, 153, 305, 306, 1620], "field": [152, 153, 305, 306, 353, 1311, 1337, 1340, 1388, 1391, 1403, 1407, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1722, 1730], "unique_invers": [152, 153, 305, 306, 1620], "inverse_indic": [152, 153, 305, 306, 1620, 1621, 1625, 1631, 1635], "reconstruct": [152, 153, 305, 306, 1311, 1403, 1407, 1620, 1621, 1625, 1631, 1635], "unique_valu": [152, 153, 305, 306, 1620], "argsort": [154, 155, 307, 308, 1641, 1647, 1650], "descend": [154, 155, 307, 308, 1311, 1403, 1407, 1408, 1412, 1641, 1642, 1645, 1652, 1655], "ascend": [154, 155, 307, 308, 1641, 1642, 1645, 1647, 1650], "stabil": [154, 155, 307, 308, 321, 335, 999, 1149, 1152, 1154, 1157, 1641, 1642, 1645, 1652, 1655], "searchsort": [154, 155, 307, 308, 1641], "sorter": [154, 155, 307, 308, 1641, 1647, 1650], "ret_dtyp": [154, 155, 307, 308, 1641, 1647, 1650], "cumprod": [156, 157, 309, 310, 331, 342, 1657], "cumul": [156, 157, 309, 310, 353, 1657, 1658, 1661, 1663, 1666], "120": [156, 157, 162, 167, 168, 309, 310, 1311, 1378, 1381], "cumsum": [156, 157, 309, 310, 321, 1657, 1714], "einsum": [156, 157, 309, 310, 1657], "equat": [156, 157, 263, 264, 309, 310, 387, 388, 1311, 1398, 1401, 1657, 1668, 1671, 1724], "arithmet": [156, 157, 309, 310, 331, 677, 743, 746, 1657, 1676, 1679], "x_i": [156, 157, 177, 178, 324, 374, 383, 677, 678, 681, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 728, 731, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 818, 821, 823, 826, 828, 831, 833, 836, 848, 851, 853, 856, 858, 861, 863, 866, 878, 881, 908, 911, 943, 946, 948, 951, 953, 956, 958, 961, 963, 966, 968, 971, 978, 982, 983, 987, 988, 992, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701], "propag": [156, 157, 677, 743, 746, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691, 1692, 1696, 1697, 1701], "varianc": [156, 157, 309, 310, 1657, 1697, 1701], "freedom": [156, 157, 309, 310, 318, 1657, 1688, 1691, 1697, 1701], "constitut": [156, 157, 309, 310, 328, 337, 1657, 1688, 1691, 1697, 1701, 1725], "unbias": [156, 157, 309, 310, 1657, 1697, 1701], "commonli": [156, 157, 309, 310, 325, 328, 1657, 1688, 1691, 1697, 1701], "6666665": [156, 157, 340, 1657, 1697, 1701], "08": [156, 157, 301, 302, 677, 703, 706, 793, 796, 1245, 1306, 1309], "667": [156, 157, 285, 286, 677, 773, 776, 999, 1149, 1152, 1620, 1621, 1625, 1657, 1697, 1701], "AND": [158, 159, 311, 312, 677, 723, 726, 873, 876, 1702, 1703, 1706], "backward": [158, 159, 311, 312, 354, 677, 938, 941, 1311, 1428, 1432, 1702, 1703, 1706, 1708, 1711], "add_ivy_array_instance_method": 160, "cl": [160, 161, 313, 314], "to_ignor": [160, 161, 313, 314, 1544, 1555], "loop": [160, 161, 313, 314, 318, 326, 354, 1540, 1541, 1542, 1543], "_wrap_funct": [160, 161, 313, 314, 328, 329], "toi": [160, 161, 313, 314], "arrayexampl": [160, 161], "hasattr": [160, 161, 313, 314], "dict_in": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "queue": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 340, 999, 1078, 1144, 1185], "queue_load_s": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "container_combine_method": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "list_join": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "queue_timeout": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "print_limit": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "key_length_limit": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "print_ind": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "print_line_spac": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "ivyh": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "default_key_color": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "keyword_color_dict": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "rebuild_child_contain": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "types_to_iteratively_nest": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "alphabetical_kei": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "containerwithactiv": [162, 163, 167, 168], "containerwithconvers": [162, 167, 168, 169], "containerwithcr": [162, 167, 168, 171], "containerwithdatatyp": [162, 167, 168, 173], "containerwithdevic": [162, 167, 168, 175], "containerwithelementwis": [162, 167, 168, 177, 319], "containerwithgener": [162, 167, 168, 285], "containerwithgradi": [162, 167, 168, 287], "containerwithimag": [162, 167, 168, 289], "containerwithlay": [162, 167, 168, 291], "containerwithlinearalgebra": [162, 167, 168, 293], "containerwithloss": [162, 167, 168, 295], "containerwithnorm": [162, 167, 168, 299], "containerwithrandom": [162, 167, 168, 301], "containerwithsearch": [162, 167, 168, 303], "containerwithset": [162, 167, 168, 305], "containerwithsort": [162, 167, 168, 307], "containerwithstatist": [162, 167, 168, 309], "containerwithutil": [162, 167, 168, 311], "containerwithactivationextens": [162, 167, 168, 180], "containerwithconversionextens": [162, 167, 168, 247], "containerwithcreationextens": [162, 167, 168, 249], "containerwithdata_typeextens": [162, 167, 168, 251], "containerwithdeviceextens": [162, 167, 168, 253], "containerwithelementwiseextens": [162, 167, 168, 255], "containerwithgeneralextens": [162, 167, 168, 257], "containerwithgradientsextens": [162, 167, 168, 259], "containerwithimageextens": [162, 167, 168, 261], "containerwithlayersextens": [162, 167, 168, 263], "containerwithlinalgextens": [162, 167, 168, 265], "containerwithlossesextens": [162, 167, 168, 267], "containerwithmanipulationextens": [162, 167, 168, 269], "containerwithnormsextens": [162, 167, 168, 271], "containerwithrandomextens": [162, 167, 168, 273], "containerwithsearchingextens": [162, 167, 168, 275], "containerwithsetextens": [162, 167, 168, 277], "containerwithsortingextens": [162, 167, 168, 279], "containerwithstatisticalextens": [162, 167, 168, 281], "containerwithutilityextens": [162, 167, 168, 283], "dictionari": [162, 165, 166, 167, 168, 321, 340, 354, 643, 666, 1193, 1202], "multiprocess": [162, 165, 166, 167, 168, 340, 354, 999], "asynchron": [162, 165, 166, 167, 168, 1724], "arriv": [162, 165, 166, 167, 168, 335, 999, 1144], "timeout": [162, 165, 166, 167, 168, 999, 1078, 1144, 1185], "whitespac": [162, 165, 166, 167, 168], "indent": [162, 165, 166, 167, 168, 340], "extra": [162, 165, 166, 167, 168, 317, 321, 323, 329, 331, 332, 335, 337, 999, 1192, 1721, 1726], "newlin": [162, 165, 166, 167, 168, 324], "color": [162, 165, 166, 167, 168, 1774, 1775], "map": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 321, 327, 328, 331, 333, 334, 340, 353, 354, 999, 1192, 1544, 1551, 1552, 1556, 1557, 1713, 1725], "termcolor": [162, 165, 166, 167, 168], "constructor": [162, 165, 166, 167, 168, 321, 322, 339, 999, 1006], "alphabet": [162, 165, 166, 167, 168], "rshift": [162, 167, 168], "43": [162, 167, 168, 301, 302, 677, 743, 746, 1567, 1578, 1581, 1583, 1586, 1594, 1615, 1619], "143": [162, 167, 168, 177, 178, 323, 677, 978, 982], "containerbas": [163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319], "key_chain": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 1544, 1557], "to_appli": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 1544, 1557], "prune_unappli": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 1544, 1557], "map_sequ": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 249, 250, 255, 256, 263, 264, 265, 266, 269, 270, 273, 274, 279, 280, 281, 282, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312], "formul": [163, 164], "chain": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 319, 331, 341, 342, 354, 1540, 1541, 1542, 1544, 1557, 1724], "prune": [163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 255, 256, 269, 270, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 1544, 1557, 1558, 1559], "slope": [163, 164, 431, 437, 440], "leaki": [163, 164, 431, 437, 440], "371": [163, 164], "rectifi": [163, 164, 431, 437, 440, 447, 450], "revert": [163, 164, 431, 462, 465], "535": [163, 164, 431, 462, 465], "948": [163, 164], "static_gelu": [163, 164], "static_leaky_relu": [163, 164], "static_log_softmax": [163, 164], "static_relu": [163, 164], "static_sigmoid": [163, 164], "static_softmax": [163, 164], "static_softplu": [163, 164], "__getitem__": [165, 166, 319], "queri": [165, 166, 319, 321, 339, 643, 654, 666, 999, 1069, 1245, 1301, 1304, 1306, 1309, 1724], "slice": [165, 166, 285, 286, 370, 371, 999, 1056, 1059, 1061, 1064, 1069, 1544, 1553, 1724], "__setitem__": [165, 166, 317, 319, 339], "all_fals": [165, 166], "assert_is_bool": [165, 166], "all_key_chain": [165, 166], "include_empti": [165, 166], "all_tru": [165, 166, 319, 340], "as_bool": [165, 166], "assert_contains_sub_contain": [165, 166], "sub_cont": [165, 166], "diff": [165, 166, 319, 323, 340], "assert_contains_sub_structur": [165, 166], "assert_ident": [165, 166], "check_typ": [165, 166], "same_arrai": [165, 166, 340], "arrays_equ": [165, 166], "assert_identical_structur": [165, 166], "at_key_chain": [165, 166], "ignore_key_error": [165, 166], "ignore_non": [165, 166], "at_kei": [165, 166], "ignor": [165, 166, 320, 323, 333, 354, 470, 511, 514, 1544, 1555, 1730], "substr": [165, 166], "duplic": [165, 166, 318, 324, 326, 329, 332, 341, 1730], "container_rightmost": [165, 166], "common_key_chain": [165, 166, 319], "cont_inplace_upd": [165, 166], "contains_sub_contain": [165, 166], "contains_sub_structur": [165, 166], "create_if_abs": [165, 166], "noth": [165, 166, 335, 1730], "cutoff_at_depth": [165, 166], "depth_cutoff": [165, 166], "cutoff_at_height": [165, 166], "height_cutoff": [165, 166], "deep_copi": [165, 166, 340], "dev_str": [165, 166], "diff_kei": [165, 166], "detect_key_diff": [165, 166], "detect_value_diff": [165, 166], "detect_shape_diff": [165, 166], "treat": [165, 166, 333, 338, 342, 374, 382, 467, 468], "container0": [165, 166], "duplicate_array_keychain": [165, 166], "find_sub_contain": [165, 166], "sub_cont_to_find": [165, 166], "exsit": [165, 166], "find_sub_structur": [165, 166], "sub_struc_to_find": [165, 166], "flatten_key_chain": [165, 166, 340], "__": [165, 166, 323, 340], "above_height": [165, 166, 340], "below_depth": [165, 166, 340], "format_key_chain": [165, 166], "format_fn": [165, 166], "string": [165, 166, 318, 321, 322, 325, 326, 337, 340, 387, 394, 552, 553, 554, 583, 585, 605, 642, 643, 645, 646, 647, 648, 654, 662, 668, 672, 673, 676, 999, 1027], "from_disk_as_hdf5": [165, 166, 340], "h5_obj_or_filepath": [165, 166], "slice_obj": [165, 166], "load": [165, 166, 354, 1723, 1730], "disk": [165, 166, 340, 1723], "h5py": [165, 166], "hdf5": [165, 166, 340], "h5": [165, 166], "from_disk_as_json": [165, 166, 340], "json_filepath": [165, 166], "from_disk_as_pickl": [165, 166, 340], "pickle_filepath": [165, 166], "pickl": [165, 166, 319, 340], "from_flat_list": [165, 166], "flat_list": [165, 166], "flat": [165, 166, 999, 1129, 1132, 1459, 1490, 1493], "h5_file_s": [165, 166], "handle_inplac": [165, 166], "prime": [165, 166], "overwritten": [165, 166, 317, 318], "has_kei": [165, 166], "query_kei": [165, 166], "somewher": [165, 166], "has_key_chain": [165, 166], "identical_array_shap": [165, 166], "identical_config": [165, 166], "identical_structur": [165, 166], "if_exist": [165, 166], "key_chains_contain": [165, 166], "sub_str": [165, 166], "list_stack": [165, 166, 340], "map_cont": [165, 166], "include_self": [165, 166], "possibi": [165, 166], "max_depth": [165, 166, 999, 1079, 1544, 1556], "multi_map": [165, 166, 319], "map_nest": [165, 166], "leftmost": [165, 166, 1544, 1557], "multi_map_in_static_method": [165, 166, 319], "fn_name": [165, 166, 318, 332, 333], "num_arrai": [165, 166, 332, 333], "overwrite_at_key_chain": [165, 166], "target_dict": [165, 166], "return_dict": [165, 166], "prune_empti": [165, 166], "keep_non": [165, 166], "prune_key_chain": [165, 166], "key1": [165, 166, 341], "key2": [165, 166], "key3": [165, 166], "prune_key_from_key_chain": [165, 166], "prune_kei": [165, 166], "prune_keys_from_key_chain": [165, 166], "remove_key_length_limit": [165, 166], "remove_print_limit": [165, 166], "reshape_lik": [165, 166], "leading_shap": [165, 166], "return_cont": [165, 166], "restructur": [165, 166], "keep_orig": [165, 166], "restructure_key_chain": [165, 166], "keychain_map": [165, 166], "set_at_key_chain": [165, 166], "set_at_kei": [165, 166], "attribut": [165, 166, 319, 321, 324, 329, 330, 338, 339, 340, 341, 552, 588, 591, 593, 594, 596, 597, 599, 602, 643, 655, 656, 663, 999, 1054, 1055], "shared_shap": [165, 166], "show_sub_contain": [165, 166], "sub_cont_or_keychain": [165, 166], "shuffle_h5_fil": [165, 166], "seed_valu": [165, 166, 1567, 1588], "dataset": [165, 166, 340, 352, 1714], "size_ordered_arrai": [165, 166], "keychain": [165, 166], "slice_kei": [165, 166], "key_slic": [165, 166], "all_depth": [165, 166], "slice_via_kei": [165, 166], "sort_by_kei": [165, 166], "split_cont": [165, 166], "constitu": [165, 166, 342], "structural_diff": [165, 166], "to_dict": [165, 166], "to_disk_as_hdf5": [165, 166, 340], "starting_index": [165, 166], "max_batch_s": [165, 166], "to_disk_as_json": [165, 166, 340], "to_disk_as_pickl": [165, 166, 340], "to_flat_list": [165, 166], "to_iter": [165, 166, 319], "leaf_keys_onli": [165, 166], "to_iterator_kei": [165, 166], "to_iterator_valu": [165, 166], "to_json": [165, 166], "to_nested_list": [165, 166], "to_raw": [165, 166], "raw": [165, 166, 324, 1725], "trim_kei": [165, 166], "max_length": [165, 166], "trim": [165, 166], "try_kc": [165, 166], "tri": [165, 166], "concatten": [165, 166, 643, 667], "unstack_cont": [165, 166], "dim_siz": [165, 166, 1245, 1278], "update_config": [165, 166], "with_default_key_color": [165, 166], "with_entries_as_list": [165, 166], "with_ivy_backend": [165, 166], "ivy_backend": [165, 166], "with_key_length_limit": [165, 166, 340], "with_print_ind": [165, 166, 340], "with_print_limit": [165, 166, 340], "with_print_line_spac": [165, 166], "static_to_ivi": [169, 170], "static_to_n": [169, 170], "2324": [171, 172, 470, 500, 503], "234": [171, 172, 470, 500, 503, 1245, 1291, 1294], "123": [171, 172, 333, 470, 500, 503, 999, 1046, 1048], "static_arang": [171, 172], "static_asarrai": [171, 172], "static_empty_lik": [171, 172], "static_ey": [171, 172], "n_row": [171, 172, 249, 250, 370, 371, 470, 491, 492], "n_col": [171, 172, 249, 250, 370, 371, 470, 491, 492], "static_from_dlpack": [171, 172], "static_full_lik": [171, 172], "static_linspac": [171, 172], "endpoint": [171, 172, 327, 470, 505, 506], "static_logspac": [171, 172], "static_meshgrid": [171, 172], "static_native_arrai": [171, 172], "static_one_hot": [171, 172], "static_on": [171, 172], "static_ones_lik": [171, 172], "static_tril": [171, 172], "static_triu": [171, 172], "static_zero": [171, 172], "static_zeros_lik": [171, 172], "718": [173, 174, 177, 178, 552, 555, 558, 677, 883, 886], "618": [173, 174, 177, 178, 552, 555, 558, 677, 883, 886], "broadcats": [173, 174], "1800": [173, 174, 552, 599, 602], "32768": [173, 174], "32767": [173, 174], "2147483648": [173, 174, 552, 599, 602], "2147483647": [173, 174, 552, 599, 602], "static_astyp": [173, 174], "static_broadcast_arrai": [173, 174], "And": [173, 174, 333], "static_broadcast_to": [173, 174], "static_can_cast": [173, 174], "from_": [173, 174, 552, 570, 573], "static_default_float_dtyp": [173, 174], "float_dtyp": [173, 174, 552, 578, 579, 634], "static_dtyp": [173, 174], "static_finfo": [173, 174], "static_function_supported_dtyp": [173, 174], "static_function_unsupported_dtyp": [173, 174], "static_iinfo": [173, 174], "static_is_bool_dtyp": [173, 174], "dtype_in": [173, 174, 552, 553, 554, 587, 605, 606, 609, 611, 614, 616, 619, 621, 624, 642], "static_is_float_dtyp": [173, 174], "roughli": [173, 174, 1727], "static_is_int_dtyp": [173, 174], "static_is_uint_dtyp": [173, 174], "static_result_typ": [173, 174], "static_dev": [175, 176], "static_to_devic": [175, 176], "__dlpack__": [175, 176, 470, 494, 497, 643, 668, 672], "caveat": [175, 176, 643, 668, 672], "portabl": [175, 176, 643, 668, 672, 1714, 1722], "524": [177, 178, 677, 698, 701], "644": [177, 178, 341, 677, 698, 701], "305": [177, 178, 291, 292, 677, 698, 701], "915": [177, 178, 677, 713, 716], "29": [177, 178, 285, 286, 287, 288, 301, 302, 677, 713, 716, 999, 1036, 1039, 1193, 1214, 1217], "983": [177, 178, 677, 713, 716], "75": [177, 178, 285, 286, 291, 292, 301, 302, 387, 389, 677, 703, 706, 713, 716, 773, 776, 848, 851, 999, 1087, 1090, 1311, 1349, 1352, 1378, 1381, 1544, 1552, 1567, 1583, 1586], "978": [177, 178, 431, 452, 455, 677, 713, 716], "696": [177, 178, 301, 302, 677, 713, 716], "993": [177, 178, 677, 713, 716], "203": [177, 178, 299, 300, 1562, 1563, 1566], "34": [177, 178, 285, 286, 301, 302, 552, 599, 602, 677, 748, 751, 868, 871, 963, 966, 999, 1015, 1036, 1039, 1567, 1583, 1586], "52": [177, 178, 285, 286, 287, 288, 301, 302, 677, 713, 716, 773, 776, 999, 1036, 1039, 1092, 1095, 1193, 1194, 1197, 1245, 1291, 1294, 1311, 1378, 1381, 1620, 1621, 1625, 1657, 1668, 1671], "351": [177, 178, 677, 768, 771], "50": [177, 178, 265, 266, 285, 286, 339, 677, 768, 771, 928, 931, 963, 966, 999, 1061, 1064, 1087, 1090, 1092, 1095, 1134, 1137, 1149, 1152, 1311, 1349, 1352, 1378, 1381, 1544, 1546, 1594, 1610, 1613, 1657, 1668, 1671], "00613": [177, 178], "0154": [177, 178], "0262": [177, 178, 677, 768, 771, 928, 931], "873": [177, 178, 677, 768, 771, 928, 931], "333": [177, 178, 677, 773, 776, 999, 1021, 1024, 1245, 1279, 1282], "thefunct": [177, 178], "649": [177, 178], "220": [177, 178], "959": [177, 178, 677, 953, 956], "865": [177, 178], "metho": [177, 178], "999999999999": [177, 178, 677, 818, 821], "7j": [177, 178, 677, 833, 836], "3j": [177, 178, 677, 833, 836], "0j": [177, 178, 677, 833, 836], "898": [177, 178, 677, 853, 856], "0414": [177, 178, 677, 853, 856], "956": [177, 178], "65": [177, 178, 287, 288, 301, 302, 677, 743, 746, 999, 1087, 1090, 1193, 1194, 1197, 1311, 1378, 1381, 1657, 1668, 1671], "2860": [177, 178], "413": [177, 178], "recirpoc": [177, 178], "300": [177, 178, 285, 286, 333, 677, 943, 946, 999, 1061, 1064, 1134, 1137, 1311, 1349, 1352], "527": [177, 178, 677, 943, 946], "301": [177, 178, 677, 943, 946], "757": [177, 178, 677, 953, 956], "279": [177, 178, 677, 953, 956, 999, 1016, 1019], "835": [177, 178], "347": [177, 178], "721": [177, 178], "static_ab": [177, 178], "static_aco": [177, 178], "static_acosh": [177, 178], "static_add": [177, 178, 319, 323, 324], "static_asin": [177, 178], "412": [177, 178, 291, 292, 677, 698, 701], "201": [177, 178, 677, 698, 701], "static_asinh": [177, 178], "static_atan": [177, 178], "static_atan2": [177, 178], "static_atanh": [177, 178], "static_bitwise_and": [177, 178], "static_bitwise_invert": [177, 178], "static_bitwise_left_shift": [177, 178], "static_bitwise_or": [177, 178], "static_bitwise_right_shift": [177, 178], "static_bitwise_xor": [177, 178], "static_ceil": [177, 178], "static_co": [177, 178], "static_cosh": [177, 178], "static_deg2rad": [177, 178], "static_divid": [177, 178], "static_equ": [177, 178], "static_erf": [177, 178], "static_exp": [177, 178], "static_expm1": [177, 178, 677, 793, 796], "areal": [177, 178], "static_floor": [177, 178], "static_floor_divid": [177, 178], "static_great": [177, 178], "static_greater_equ": [177, 178], "static_isfinit": [177, 178], "static_isinf": [177, 178, 677, 823, 826], "static_isnan": [177, 178, 677, 828, 831], "static_isr": [177, 178], "23j": [177, 178], "9j": [177, 178, 677, 833, 836], "static_less": [177, 178], "static_less_equ": [177, 178], "static_log": [177, 178], "static_log10": [177, 178], "static_log1p": [177, 178, 677, 858, 861], "static_log2": [177, 178], "static_logaddexp": [177, 178], "static_logical_and": [177, 178], "static_logical_not": [177, 178], "static_logical_or": [177, 178, 677, 883, 886], "static_logical_xor": [177, 178], "static_maximum": [177, 178], "static_minimum": [177, 178], "static_multipli": [177, 178], "static_neg": [177, 178], "static_not_equ": [177, 178], "static_posit": [177, 178], "static_pow": [177, 178], "static_rad2deg": [177, 178], "5160": [177, 178], "10300": [177, 178, 677, 928, 931], "15500": [177, 178], "20600": [177, 178], "static_reciproc": [177, 178], "static_remaind": [177, 178], "static_round": [177, 178], "thevfunct": [177, 178], "static_sign": [177, 178], "static_sin": [177, 178], "static_sinh": [177, 178], "static_sqrt": [177, 178], "static_squar": [177, 178], "static_subtract": [177, 178], "static_tan": [177, 178, 319, 323], "38": [177, 178, 301, 302, 323, 552, 588, 591, 677, 978, 982], "static_tanh": [177, 178], "995": [177, 178, 677, 983, 987], "9999": [177, 178], "static_trapz": [177, 178], "static_trunc": [177, 178], "static_trunc_divid": [177, 178], "static_triu_indic": [249, 250], "triu_indic": [249, 250, 370], "1080": [255, 256], "1550": [255, 256], "130": [255, 256], "0707": [255, 256, 374, 383], "0579": [255, 256, 374, 383], "static_exp2": [255, 256], "static_float_pow": [255, 256], "static_fmax": [255, 256], "static_fmod": [255, 256], "static_gcd": [255, 256], "static_isposinf": [255, 256], "static_lcm": [255, 256], "static_nansum": [255, 256], "static_sinc": [255, 256], "636": [255, 256], "090": [255, 256], "070": [255, 256], "057": [255, 256], "hamming_window": [263, 264, 387], "lenght": [263, 264], "coeffici": [263, 264, 387, 388, 1311, 1398, 1401], "ham": [263, 264, 387, 388], "8000": [263, 264, 387, 388], "2000": [263, 264, 387, 388], "4180": [263, 264], "8180": [263, 264], "hann_window": [263, 264, 387], "hann": [263, 264, 387, 389], "7500": [263, 264], "3455": [263, 264], "9045": [263, 264], "kaiser_bessel_derived_window": [263, 264, 387], "spectral": [263, 264, 387, 390, 391], "analysi": [263, 264, 387, 390, 391, 1724, 1725], "kaiser": [263, 264, 387, 390, 391], "70710677": [263, 264, 387, 390], "18493208": [263, 264, 387, 390], "9827513": [263, 264, 387, 390], "kaiser_window": [263, 264, 387], "static_kaiser_window": [263, 264], "2049": [263, 264], "8712": [263, 264], "0367": [263, 264, 387, 391], "7753": [263, 264], "static_flatten": [263, 264], "static_hamming_window": [263, 264], "static_hann_window": [263, 264], "window_length": [263, 264, 387, 388, 389, 390, 391, 395], "static_hann": [263, 264], "static_kaiser_bessel_derived_window": [263, 264], "static_max_pool1d": [263, 264], "static_max_pool2d": [263, 264], "max_pool2dd": [263, 264], "static_pad": [263, 264], "450": [265, 266], "static_diagflat": [265, 266], "static_kron": [265, 266], "kroneck": [265, 266, 396, 398], "30192195": [269, 270], "static_fliplr": [269, 270], "static_flipud": [269, 270], "static_heavisid": [269, 270], "static_hstack": [269, 270], "static_i0": [269, 270], "static_moveaxi": [269, 270, 281, 282], "static_rot90": [269, 270], "static_top_k": [269, 270], "static_vstack": [269, 270], "43643127": [273, 274], "32325703": [273, 274], "24031169": [273, 274], "34251311": [273, 274], "31692529": [273, 274], "3405616": [273, 274], "5319725": [273, 274], "22458365": [273, 274], "24344385": [273, 274], "26588406": [273, 274], "61075421": [273, 274], "12336174": [273, 274], "51142915": [273, 274], "25041268": [273, 274], "23815817": [273, 274], "64042903": [273, 274], "25763214": [273, 274], "10193883": [273, 274], "31624692": [273, 274], "46567987": [273, 274], "21807321": [273, 274], "37677699": [273, 274], "39914594": [273, 274], "22407707": [273, 274], "static_dirichlet": [273, 274], "static_msort": [279, 280], "static_median": [281, 282], "static_all_equ": [285, 286], "833": [285, 286], "200": [285, 286, 340, 677, 743, 746, 999, 1061, 1064, 1134, 1137], "400": [285, 286, 999, 1061, 1064, 1134, 1137, 1311, 1349, 1352], "500": [285, 286, 999, 1061, 1064], "600": [285, 286], "700": [285, 286], "static_assert_supports_inplac": [285, 286], "static_clip_matrix_norm": [285, 286], "849": [285, 286, 999, 1016, 1019, 1021, 1024], "static_clip_vector_norm": [285, 286], "static_einops_rearrang": [285, 286], "static_einops_reduc": [285, 286], "93": [285, 286, 301, 302, 643, 654, 677, 963, 966, 999, 1036, 1039], "66": [285, 286, 287, 288, 677, 748, 751, 999, 1036, 1039, 1193, 1204, 1207, 1311, 1378, 1381, 1657, 1668, 1671], "static_einops_repeat": [285, 286], "static_fourier_encod": [285, 286], "static_gath": [285, 286], "static_gather_nd": [285, 286], "static_get_num_dim": [285, 286], "static_has_nan": [285, 286], "leafwis": [285, 286], "static_inplace_decr": [285, 286], "static_inplace_incr": [285, 286], "static_inplace_upd": [285, 286], "static_is_arrai": [285, 286], "static_is_ivy_arrai": [285, 286], "static_is_ivy_contain": [285, 286], "static_is_native_arrai": [285, 286], "static_scatter_flat": [285, 286], "ref": [285, 286, 293, 294, 324, 337, 677, 838, 841, 913, 916, 938, 941, 973, 977, 1459, 1515, 1518], "static_scatter_nd": [285, 286], "static_stable_divid": [285, 286], "22222222": [285, 286], "11111111": [285, 286], "857": [285, 286, 999, 1149, 1152, 1620, 1621, 1625], "444": [285, 286], "static_stable_pow": [285, 286], "static_supports_inplace_upd": [285, 286], "static_to_list": [285, 286], "static_to_numpi": [285, 286], "static_to_scalar": [285, 286], "static_value_is_nan": [285, 286], "452": [285, 286], "425": [285, 286], "87": [287, 288, 677, 743, 746, 858, 861, 1193, 1194, 1197], "976": [287, 288, 677, 983, 987, 1193, 1194, 1197], "49e": [287, 288, 1193, 1194, 1197], "74e": [287, 288, 1193, 1194, 1197], "95e": [287, 288, 1193, 1194, 1197], "024": [287, 288, 1193, 1194, 1197], "096": [287, 288, 677, 768, 771, 1193, 1194, 1197], "216": [287, 288, 293, 294, 1193, 1194, 1197], "384": [287, 288, 1193, 1194, 1197], "626": [287, 288, 1193, 1194, 1197], "en": [287, 288, 1193, 1194, 1197, 1198, 1201, 1311, 1438, 1442], "wikipedia": [287, 288, 1193, 1194, 1197, 1198, 1201, 1311, 1438, 1442], "wiki": [287, 288, 1193, 1194, 1197, 1198, 1201, 1311, 1438, 1442], "stochastic_gradient_desc": [287, 288, 1193, 1194, 1197, 1198, 1201], "w_new": [287, 288, 1193, 1204, 1207], "88": [287, 288, 301, 302, 431, 437, 440, 677, 748, 751, 1193, 1204, 1207, 1311, 1378, 1381, 1408, 1412, 1567, 1583, 1586, 1657, 1668, 1671], "708": [287, 288, 1193, 1214, 1217], "445": [287, 288, 1193, 1214, 1217], "6e": [287, 288, 1193, 1214, 1217], "00036": [287, 288, 1193, 1214, 1217], "00016": [287, 288, 1193, 1214, 1217], "00049": [287, 288, 1193, 1214, 1217], "layerwis": [287, 288, 1193, 1218, 1221], "static_is_vari": [287, 288], "static_stop_gradi": [287, 288], "static_vari": [287, 288], "static_variable_data": [287, 288], "ey": [291, 292, 335, 342, 470, 1245, 1257, 1260, 1279, 1282], "conv2d_transpos": [291, 292, 1245], "inp": [291, 292, 1245, 1279, 1282], "278": [291, 292, 1245, 1291, 1294], "105": [291, 292, 1245, 1291, 1294, 1311, 1378, 1381, 1443, 1444, 1447], "352": [291, 292, 1245, 1291, 1294], "195": [291, 292], "static_conv1d": [291, 292], "static_conv1d_transpos": [291, 292], "static_conv2d": [291, 292], "static_conv2d_transpos": [291, 292], "static_conv3d": [291, 292], "static_conv3d_transpos": [291, 292], "static_depthwise_conv2d": [291, 292], "static_dropout": [291, 292], "static_linear": [291, 292], "static_lstm_upd": [291, 292], "static_multi_head_attent": [291, 292], "static_scaled_dot_product_attent": [291, 292], "73": [293, 294, 333, 677, 963, 966, 1311, 1312, 1315, 1567, 1578, 1581], "577": [293, 294, 1311, 1312, 1315], "707": [293, 294, 1311, 1312, 1315], "matrix_pow": [293, 294, 1311], "pseudo": [293, 294, 1311, 1383, 1386], "static_choleski": [293, 294], "static_rol": [293, 294, 297, 298, 319, 323], "static_cross": [293, 294], "static_det": [293, 294], "static_diag": [293, 294], "static_diagon": [293, 294], "static_inn": [293, 294], "static_inv": [293, 294, 1311, 1349, 1352], "static_matmul": [293, 294], "matul": [293, 294], "static_matrix_norm": [293, 294], "deimens": [293, 294], "static_matrix_pow": [293, 294], "static_matrix_rank": [293, 294], "static_matrix_transpos": [293, 294], "static_out": [293, 294], "static_pinv": [293, 294], "static_qr": [293, 294], "static_slogdet": [293, 294], "static_solv": [293, 294], "static_svd": [293, 294], "static_svdv": [293, 294], "static_tensordot": [293, 294], "static_trac": [293, 294], "static_vand": [293, 294], "343": [293, 294, 677, 943, 946], "512": [293, 294], "729": [293, 294, 341], "static_vecdot": [293, 294], "static_vector_norm": [293, 294], "mathemat": [293, 294, 321, 331, 335, 469, 677, 693, 696, 713, 716, 793, 796, 858, 861, 903, 906, 1311, 1359, 1362, 1433, 1437, 1724, 1730], "l1": [293, 294, 319, 340, 1311, 1433, 1437], "manhattan": [293, 294, 1311, 1433, 1437], "l2": [293, 294, 319, 1311, 1433, 1437], "euclidean": [293, 294, 1311, 1433, 1437], "static_vector_to_skew_symmetric_matrix": [293, 294], "511": [295, 296, 1443, 1444, 1447], "5108256": [295, 296], "609438": [295, 296], "static_binary_cross_entropi": [295, 296], "static_cross_entropi": [295, 296], "20397282": [295, 296], "83258148": [295, 296], "60943794": [295, 296], "static_sparse_cross_entropi": [295, 296], "static_stack": [297, 298], "static_clip": [297, 298], "static_concat": [297, 298], "static_constant_pad": [297, 298], "static_expand_dim": [297, 298], "container_axi": [297, 298, 1459, 1475, 1478], "static_flip": [297, 298], "static_permute_dim": [297, 298], "static_repeat": [297, 298], "static_reshap": [297, 298], "positivclip": [297, 298], "static_split": [297, 298], "static_squeez": [297, 298], "static_swapax": [297, 298], "static_til": [297, 298], "static_unstack": [297, 298], "static_zero_pad": [297, 298], "classivi": [297, 298, 305, 306, 1459, 1505, 1508, 1620, 1626, 1630], "342": [299, 300, 1562, 1563, 1566], "0427": [299, 300, 1562, 1563, 1566], "299": [299, 300, 1562, 1563, 1566], "241": [299, 300], "102": [301, 302], "431": [301, 302], "68": [301, 302, 431, 442, 445, 470, 499, 677, 703, 706, 713, 716, 1562, 1563, 1566], "83": [301, 302, 677, 963, 966, 1245, 1291, 1294], "274": [301, 302], "91": [301, 302, 677, 748, 751, 1245, 1291, 1294, 1311, 1378, 1381, 1567, 1578, 1581, 1657, 1668, 1671], "static_multinomi": [301, 302], "static_randint": [301, 302], "static_random_norm": [301, 302], "651": [301, 302], "static_random_uniform": [301, 302], "481": [301, 302], "0999": [301, 302], "static_shuffl": [301, 302], "static_argmax": [303, 304], "static_argmin": [303, 304], "static_argwher": [303, 304], "static_nonzero": [303, 304], "static_wher": [303, 304], "static_unique_al": [305, 306], "static_unique_count": [305, 306], "static_unique_invers": [305, 306], "static_unique_valu": [305, 306], "static_argsort": [307, 308], "static_searchsort": [307, 308], "static_sort": [307, 308], "static_cumprod": [309, 310], "static_cumsum": [309, 310], "static_sum": [309, 310], "static_var": [309, 310], "12666667": [309, 310, 1657, 1697, 1701], "11555555": [309, 310, 1657, 1697, 1701], "contian": [309, 310], "6666667": [309, 310, 1657, 1697, 1701], "static_al": [311, 312], "static_ani": [311, 312], "add_ivy_container_instance_method": 313, "containerexampl": [313, 314], "who": [315, 336, 354, 1724, 1726], "hood": [315, 319, 323, 328, 331, 333, 335, 336, 337, 340, 342, 1731], "weed": [315, 336], "tour": 315, "primari": [315, 318, 321, 330, 331, 333, 335, 354, 370, 371, 1713], "superset": [315, 354], "goe": [315, 335], "dynam": [315, 321, 322, 330, 331, 337, 467, 468, 1724, 1728], "runtim": [315, 333, 335, 643, 1724], "borrow": 315, "conjunct": 316, "establish": [316, 1726], "2020": [316, 1724], "group": [316, 319, 328, 331, 332, 1720, 1723, 1729], "intend": [316, 327, 1657, 1692, 1696, 1722, 1724, 1728, 1729], "popular": [316, 1724], "sens": [316, 323, 331, 339], "unconnect": 316, "decis": [316, 319, 321, 331, 335, 337, 339, 1724], "initialis": [316, 333, 643], "checkout": [316, 333], "everytim": [316, 321], "init": [316, 342], "thoroughli": 316, "ci": [316, 321, 326, 333, 354], "insert_chosen_backend": 316, "test_linalg": 316, "test_set_funct": 316, "test_signatur": 316, "excess": [316, 318, 323], "explicitli": [316, 317, 318, 319, 321, 324, 325, 328, 329, 330, 333, 337, 354, 1311, 1337, 1340, 1341, 1343, 1724], "array_modul": 316, "vv": 316, "test_manipulation_funct": 316, "test_concat": [316, 333], "typic": [316, 328, 1641, 1647, 1650, 1723, 1731], "nb": 316, "varieti": [316, 320, 321, 322, 333, 1720, 1722, 1726, 1727, 1730, 1731], "known": [316, 321, 331, 333], "test_asarray_arrai": 316, "test_floor_divid": 316, "health": 316, "test_iop": 316, "__imod__": 316, "x1_i": [316, 677, 693, 696, 713, 716, 723, 726, 733, 736, 738, 741, 743, 746, 748, 751, 773, 776, 778, 781, 803, 806, 808, 811, 813, 816, 838, 841, 843, 846, 868, 871, 873, 876, 883, 886, 888, 891, 903, 906, 913, 916, 923, 926, 938, 941, 973, 977], "isequ": 316, "test_matrix_norm": 316, "alter": 316, "tweak": 316, "array_api_methods_to_test": 316, "identifi": [316, 320, 333, 335], "202": [316, 677, 763, 766], "test_trac": 316, "latter": [316, 318, 321, 324, 331], "hand": [316, 321, 328, 333, 354], "scheme": [316, 341, 1724], "edg": [316, 333, 387, 394, 1459, 1460, 1463, 1470, 1473, 1535, 1539, 1714, 1724, 1726, 1730], "test_special_cas": 316, "__ipow__": 316, "is_integ": 316, "unskip": 316, "temporarili": [316, 334], "straightforward": [316, 340], "tf": [317, 321, 322, 327, 330, 331, 333, 334, 335, 337, 342, 354, 1713, 1714, 1724], "wrapper": [317, 319, 321, 329, 330, 339, 1713, 1720, 1724], "_data": [317, 331, 339], "meta": [317, 334, 1541, 1542, 1543, 1724], "organiz": [317, 319, 331], "inherit": [317, 319, 325, 339, 354, 1713], "bear": [317, 319, 321, 331], "necessarili": [317, 319], "although": [317, 319, 331, 1722, 1724], "underpin": [317, 319, 337], "programmat": [317, 319, 1725], "backup": [317, 319], "accident": [317, 319, 331], "readabl": [317, 319, 325, 327, 334, 339, 340], "absent": [317, 319], "perk": [317, 319], "auto": [317, 319, 340], "__mul__": [317, 319, 323, 327, 335, 339], "__truediv__": [317, 319, 323], "throw": [317, 321, 325, 339, 1724], "imposs": 317, "inputs_to_native_arrai": [317, 329, 355], "outputs_to_ivy_arrai": [317, 321, 322, 327, 329, 355], "firstli": [317, 321, 323, 324, 325, 328, 329, 330, 335, 340, 1720, 1730], "anywai": [317, 329, 331], "secondli": [317, 321], "permit": [317, 327, 331, 333, 335], "dictat": [317, 323, 327, 330], "implicit_backend": [318, 337], "ivy_original_dict": [318, 337], "unmodifi": [318, 321], "opt": [318, 321, 330, 333, 334, 335], "fallback": 318, "layout": [318, 331, 335], "requires_grad": [318, 332], "memory_format": 318, "preserve_format": 318, "weren": 318, "break": [318, 321, 326, 327, 334, 354, 1714], "Not": [318, 332, 340, 341, 354, 374, 382, 469], "vast": [318, 321, 1724], "minor": [318, 335, 337, 354], "fn_name_v_1p12_and_abov": 318, "similarli": [318, 321, 331, 335, 339, 370, 371, 470, 511, 514, 1730], "fn_name_v_1p01_to_1p1": 318, "inclus": [318, 330, 331, 335, 470, 472, 473, 1567, 1573, 1576], "vari": [319, 323, 331, 333, 339, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "five": [319, 340], "recap": [319, 323, 341], "arbitrarili": [319, 329, 340], "__repr__": 319, "control": [319, 321, 330, 331, 335, 339, 340, 353, 370, 371, 1311, 1327, 1330, 1713, 1724, 1730], "__getattr__": 319, "underli": [319, 335, 677, 723, 726, 738, 741, 748, 751, 888, 891, 1724], "__setattr__": 319, "__contains__": 319, "__getstate__": 319, "__setstate__": 319, "unpickl": 319, "num_dim": [319, 342], "__len__": 319, "restrict": [319, 331, 337, 1721], "enforc": [319, 339], "extern": [319, 327, 331, 333, 334], "flexibl": [319, 327, 334, 1724], "c1": 319, "lefthand": 319, "righthand": 319, "operand": [319, 324, 331, 374, 383, 677, 683, 686, 688, 691, 693, 696, 698, 701, 703, 706, 708, 711, 713, 716, 748, 751, 753, 756, 758, 761, 763, 766, 788, 791, 793, 796, 798, 801, 848, 851, 853, 856, 858, 861, 863, 866, 868, 871, 903, 906, 923, 926, 938, 941, 943, 946, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 988, 992, 1657, 1668, 1671, 1672, 1675, 1680, 1683, 1692, 1696], "decor": [319, 321, 322, 328, 329, 330, 331, 332, 333, 999, 1015], "handle_nest": [319, 328, 329, 337, 355], "addition": [319, 330, 331, 1730], "counterpart": [319, 329], "behavior": [319, 321, 331, 332, 333, 335, 337, 354, 677, 923, 926, 938, 941, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640, 1721], "presenc": [319, 330], "absenc": [319, 327, 1724], "implicitli": [319, 337], "themselv": [319, 321, 322, 324, 328, 331, 341, 1544, 1545, 1721, 1730], "log_pr": [319, 328, 330], "intuit": [319, 340, 341, 1720], "chronolog": 319, "concurr": [319, 328, 1724], "had": [319, 330, 1724, 1725], "consum": [319, 327, 332, 333], "sequenti": [319, 341], "But": [319, 324, 329, 330, 342], "flow": [319, 353, 1724, 1725], "compil": [319, 331, 334, 335, 336, 338, 354, 1713, 1714, 1720, 1723, 1724, 1725, 1728, 1731], "implic": 319, "whatsoev": [319, 328, 1713, 1730], "implicit": [319, 324, 331, 333, 337, 1724], "eager": [319, 354, 1724], "children": 319, "shallowest": 319, "deepest": 319, "event": [320, 333], "ex": 320, "reopen": 320, "review_request": 320, "yml": 320, "dispatch": [320, 354, 1724, 1727], "pair": [320, 400, 408, 677, 713, 716, 1245, 1306, 1309, 1311, 1317, 1320], "test_nn": 320, "yellow": 320, "dot": [320, 1245, 1301, 1304, 1306, 1309, 1311, 1428, 1432], "queu": 320, "redirect": 320, "book": 320, "procedur": [320, 323], "decoupl": [320, 341], "ran": 320, "badg": 320, "clickabl": 320, "uint8": [321, 333, 552, 570, 573, 582, 593, 594, 621, 624, 628, 631, 636, 641], "uint16": [321, 333, 337, 552, 576, 582, 596, 597, 599, 602, 621, 624, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "uint32": [321, 333, 337, 552, 582, 596, 597, 599, 602, 604, 641, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "uint64": [321, 333, 337, 552, 582, 596, 597, 604, 605, 628, 631, 633, 636, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "bfloat16": [321, 331, 333, 552, 593, 594], "all_dtyp": 321, "all_numeric_dtyp": 321, "all_int_dtyp": 321, "all_float_dtyp": 321, "replic": [321, 323, 331, 335], "four": [321, 323, 327, 328, 333, 335, 340], "thirdli": 321, "native_float32": 321, "importantli": [321, 339, 342, 353], "conveni": [321, 322, 327, 332, 338, 340, 341, 1713, 1730], "set_default_dtyp": [321, 328, 552, 638], "default_dtyp": [321, 328, 552], "arguabl": [321, 322, 331], "promote_typ": [321, 552], "type_promote_arrai": [321, 552], "promote_types_of_input": [321, 552], "jaxarrai": [321, 322, 327, 330, 334, 337], "jnp": [321, 322, 327, 330, 332, 334, 337, 342, 1714], "_handle_0_dim_output": [321, 330], "experiment": [321, 334, 337, 1724], "subtli": [321, 330], "On": [321, 331, 333, 338, 342], "promote_types_frontend_nam": 321, "promote_types_of_frontend_name_input": 321, "frontend_nam": 321, "demonstr": [321, 323, 339], "accuraci": 321, "precis": [321, 331, 335, 374, 376, 552, 588, 591, 677, 903, 906, 963, 966, 1728], "upcast": 321, "instabl": 321, "underflow": 321, "nearli": [321, 327, 329, 1724], "downcast": 321, "footprint": 321, "constraint": 321, "concret": 321, "compound": 321, "infer_dtyp": [321, 322, 327, 329, 355], "default_int_dtyp": [321, 552, 635], "default_float_dtyp": [321, 552], "settabl": [321, 322], "set_default_int_dtyp": [321, 552, 581, 604], "set_default_float_dtyp": [321, 552, 604], "irrelev": [321, 323], "handle_out_argu": [321, 322, 327, 329, 330, 337, 355], "infer_devic": [321, 322, 327, 329, 355], "deleg": [321, 1731], "shape_to_tupl": 321, "with_supported_dtyp": [321, 355], "with_unsupported_dtyp": [321, 355], "unment": 321, "backend_vers": 321, "_cast_for_unary_op": 321, "target_typ": 321, "function_supported_dtyp": [321, 552], "function_unsupported_dtyp": [321, 552], "discov": 321, "unsupported_dtyp": 321, "invalid_dtyp": [321, 552], "former": [321, 324, 331], "uint": [321, 332, 552, 581, 582, 621, 624, 636, 641], "lack": [321, 330, 1724, 1731], "rang": [321, 325, 333, 337, 340, 341, 342, 470, 472, 473, 505, 506, 508, 509, 999, 1192, 1193, 1232, 1620, 1621, 1625, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696, 1714, 1724, 1730], "patch": [321, 1724], "achiev": [321, 326, 329, 333, 340, 342, 1713], "subtl": [321, 334, 1730], "unsign": [321, 332, 337, 1657, 1658, 1661, 1663, 1666, 1684, 1687, 1692, 1696], "offici": [321, 337], "inconsist": [321, 325], "unexpect": [321, 552, 627], "84530": 321, "unwarr": 321, "risk": [321, 1730], "needlessli": 321, "bloat": 321, "undergo": [321, 354], "supported_dtyp": [321, 331], "unsupported_devic": 321, "supported_devic": 321, "slight": [321, 341], "downsid": 321, "coverag": [321, 333], "inflat": 321, "idx": [322, 339, 999, 1005], "tpu": [322, 643, 665, 674, 1724, 1727], "get_all_ivy_arrays_on_dev": [322, 643], "aliv": [322, 643, 657, 661, 663, 999, 1066, 1127, 1128], "num_gpu": [322, 333, 643], "total_mem_on_dev": [322, 643], "dev_util": [322, 643], "num_cpu_cor": [322, 643], "default_devic": [322, 325, 643, 661, 664, 665, 675], "outsid": [322, 326, 328, 339, 1459, 1460, 1463, 1515, 1518, 1729], "dual": 322, "categor": [322, 328, 331], "thrown": [322, 325, 354, 999, 1097, 1100], "far": [322, 323, 338, 1544, 1545, 1555, 1729, 1730], "set_default_devic": [322, 643, 675], "eight": [323, 336], "func_nam": [323, 324, 328, 331], "static_func_nam": 323, "op_nam": 323, "__r": 323, "combinatori": 323, "variat": [323, 333], "grid": [323, 333, 353, 470, 511, 514], "unus": [323, 326, 330, 467, 468], "okai": [323, 335, 337], "showcas": [323, 353], "meant": 323, "imaginari": 323, "spec": [323, 324], "my_func": [323, 334], "some_flag": 323, "another_flag": 323, "jointli": 323, "x0": [323, 999, 1007, 1009], "5574077": 323, "1850398": 323, "5463025": 323, "8422884": 323, "91601413": 323, "9647598": 323, "3738229": 323, "1597457": 323, "0963247": 323, "9955841": 323, "3278579": 323, "multi": [323, 336, 354, 1245, 1301, 1304, 1311, 1317, 1320, 1714, 1720, 1722, 1724, 1728], "pars": [323, 354], "satisfi": [323, 333], "asid": [323, 353], "increasingli": 323, "14254655": 323, "1578213": 323, "380515": 323, "trivial": 323, "exlud": 323, "failing_fn_nam": 323, "onlin": [323, 324], "minutest": 323, "suffici": 323, "segment": 323, "fault": [323, 1724], "contrast": [324, 327, 331, 1730], "instanti": 324, "templat": [324, 333, 1714], "array_api": 324, "preview": 324, "render": 324, "incorrectli": 324, "domain": [324, 374, 383, 677, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 788, 791, 793, 796, 848, 851, 853, 856, 863, 866, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987, 1722, 1724], "codomain": [324, 374, 383, 677, 683, 686, 688, 691, 698, 701, 703, 706, 708, 711, 713, 716, 758, 761, 763, 766, 788, 791, 793, 796, 848, 851, 853, 856, 863, 866, 953, 956, 958, 961, 963, 966, 978, 982, 983, 987], "needless": [324, 332], "info": [324, 333, 1714], "subset": [324, 327, 331, 333, 337, 1724], "renam": 324, "judgment": 324, "beyond": [324, 331, 1459, 1500, 1503, 1730], "pure": [324, 327, 331, 335, 339, 342, 354, 1724, 1730, 1731], "operator_nam": 324, "succinct": 324, "contstructor": 324, "_forward": [324, 337, 340, 341, 1714], "docst": 324, "ivyexcept": [325, 331, 1193, 1226, 1244], "super": [325, 337, 340, 341, 342], "ivybackendexcept": 325, "_default": 325, "current_backend_str": [325, 337, 339, 999], "_delimit": 325, "indexerror": [325, 1193, 1232, 1459, 1475, 1478], "ivyerror": 325, "repetit": [325, 1459, 1490, 1493, 1525, 1529], "caught": 325, "functool": [325, 331, 339], "new_fn": [325, 331], "__name__": [325, 999, 1181], "comparison": 325, "error_stack": 325, "axiserror": 325, "bound": [325, 333, 337, 1730], "got": [325, 1714], "assertionerror": [325, 333], "elif": [325, 330, 331], "polici": [325, 333, 353], "moreov": 325, "cleaner": [325, 340], "lesser": 325, "set_split_factor": [325, 643], "split_factor": [325, 643, 665], "met": 325, "flake8": 326, "undefin": [326, 387, 394], "statement": [326, 330, 333, 335, 354], "handler": [326, 336, 338, 342, 1713, 1714], "annot": [326, 327], "star": 326, "byte": [326, 1729, 1730], "notimpl": 326, "notimplementederror": 326, "unsuccess": 326, "reformat": 326, "exceed": 326, "black": 326, "disobei": 326, "taken": [326, 334, 342, 1311, 1332, 1335, 1725], "successfulli": 326, "inde": [326, 327, 335, 354, 1722], "adress": 327, "revisit": 327, "dedic": [327, 339, 341, 1193, 1239, 1243], "to_native_arrays_and_back": [327, 329, 337, 355], "usabl": [327, 334], "sole": [327, 334, 1723, 1724, 1725], "strictli": [327, 330], "linspac": [327, 335, 337, 470, 472, 473, 1714, 1731], "rational": 327, "__div__": [327, 335], "dicat": 327, "futher": 327, "pep": 327, "484": 327, "brittl": 327, "freeli": 327, "technic": [327, 330, 354, 1724, 1726], "original_typ": 327, "cumbersom": 327, "omit": [327, 330, 331, 677, 943, 946, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "venn": 328, "diagram": [328, 1730], "light": [328, 331, 354, 1713, 1725, 1730], "array_arg": 328, "cache_fn": [328, 999], "cach": [328, 333, 643, 647, 999, 1015], "deal": [328, 332, 354], "modif": [328, 1724], "briefli": [328, 333, 340], "get_all_arrays_on_dev": 328, "nested_map": [328, 1544], "index_nest": [328, 1544], "inputs_to_ivy_arrai": [329, 355], "heavili": [329, 331, 354], "facilit": 329, "integer_array_to_float": 329, "handle_cmd_line_arg": [329, 332, 333], "as_vari": [329, 332, 333], "with_out": [329, 332, 333], "instance_method": [329, 333], "test_gradi": 329, "topic": [329, 339, 1724], "suffic": [329, 333], "program": [330, 1721, 1722, 1724, 1727, 1728, 1731], "ration": [330, 335], "speak": 330, "x_nativ": 330, "val_n": 330, "unspecifi": [330, 677, 923, 926, 938, 941, 1311, 1337, 1340, 1459, 1515, 1518], "predominantli": [330, 334, 353], "support_native_out": 330, "math": [330, 331, 333, 342, 1714, 1722], "mx": 330, "nd": 330, "_wrap_fn": 330, "dim0": 330, "dim1": 330, "maxim": [330, 335, 337, 1721, 1722, 1726, 1727, 1728], "third": [330, 354, 1311, 1403, 1407, 1620, 1621, 1625, 1723, 1724, 1730], "leverag": [330, 1722, 1724], "capabl": [330, 335], "input_arrai": 330, "plai": [331, 333, 342, 1724, 1727], "tf_frontend": 331, "lax": [331, 332, 335, 342, 354], "neither": [331, 335, 677, 693, 696, 903, 906, 1193, 1226, 1244], "fn_tree": [331, 332], "wrong": [331, 335], "carefulli": [331, 1722, 1727], "acceler": [331, 1714, 1722, 1726, 1727, 1728, 1729], "algebra": [331, 1722, 1723, 1724, 1727, 1731], "xla": [331, 354, 1713, 1724], "decompos": 331, "dynamic": 331, "extent": 331, "mimic": 331, "arithmetic_oper": 331, "same_kind": 331, "subok": [331, 332, 335], "as_ivy_dtyp": [331, 552], "recov": 331, "obtain": 331, "unhandl": 331, "seek": 331, "subclass": [331, 335], "trigonometric_funct": 331, "from_zero_dim_arrays_to_float": [331, 355], "pointwise_op": 331, "preferred_element_typ": 331, "conv_general_dil": [331, 1245], "finer": 331, "nor": [331, 677, 693, 696, 903, 906, 1193, 1226, 1244, 1728], "margin": 331, "fit": [331, 337, 1459, 1490, 1493, 1720, 1721, 1724], "meet": 331, "criteria": 331, "incorpor": [331, 340, 1724], "omiss": 331, "sensibl": 331, "deem": 331, "reserv": 331, "resum": 331, "possibli": [331, 333, 354, 999, 1165, 1169], "straight": [331, 333, 339, 1714], "ahead": [331, 1724], "heavi": [331, 332, 335, 1725], "logicaland": 331, "truth": [331, 333, 677, 778, 781, 808, 811, 813, 816, 838, 841, 843, 846, 913, 916], "np_frontend": 331, "radd": 331, "_init_data": 331, "isinst": [331, 333, 334, 341, 342], "_process_str_data": 331, "2d": 331, "_shape": [331, 339], "_dtype": [331, 339], "govern": 331, "promote_types_of_": 331, "_input": 331, "promote_types_of_tensorflow_input": 331, "saniti": 331, "handle_numpy_cast": 331, "func_wrapp": [331, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "to_ivy_arrays_and_back": [331, 332], "handle_numpy_casting_speci": 331, "equiv": 331, "safe": 331, "unsaf": 331, "array_type_test": 331, "watch": 331, "youtub": 331, "seri": [331, 333, 1724, 1726], "jump": 332, "knowledg": 332, "test_frontend_funct": 332, "lift": [332, 1725], "get_dtyp": [332, 333], "dtype_and_valu": [332, 333], "num_positional_arg": [332, 333], "get_shap": [332, 333], "np_frontend_help": 332, "nn": [332, 335, 342, 470, 511, 514, 1714, 1725], "test_jax": 332, "test_jax_lax_oper": 332, "dtype_and_x": [332, 333], "available_dtyp": [332, 333], "test_jax_lax_tan": 332, "input_dtyp": [332, 333], "as_variable_flag": [332, 333], "native_array_flag": [332, 333], "test_numpi": 332, "test_mathematical_funct": 332, "test_np_trigonometric_funct": 332, "test_numpy_tan": 332, "handle_where_and_array_bool": 332, "test_tensorflow": 332, "test_math": 332, "test_tensorflow_tan": 332, "test_torch": 332, "test_non_linear_activation_funct": 332, "st": [332, 333], "min_valu": [332, 333], "max_valu": [332, 333], "with_inplac": 332, "test_torch_leaky_relu": 332, "negative_slop": 332, "_fill_valu": 332, "allow_non": [332, 333], "min_num_dim": [332, 333], "max_num_dim": [332, 333], "min_dim_s": [332, 333], "max_dim_s": 332, "test_jax_lax_ful": 332, "test_from_shape_or_valu": 332, "test_numpy_ful": 332, "test_tf_funct": 332, "test_tensorflow_ful": 332, "discrep": 332, "test_creation_op": 332, "_requires_grad": 332, "test_torch_ful": 332, "accommod": 332, "walkthrough": 332, "torch_frontend": 332, "gt": [332, 337], "comparison_op": 332, "promote_types_of_torch_input": 332, "test_comparison_op": 332, "dtype_and_input": 332, "allow_inf": [332, 333], "shared_dtyp": 332, "test_torch_great": 332, "has_alias": 332, "all_alias": 332, "test_frontend_instance_method": 332, "frontend_class": 332, "test_jax_devicearrai": 332, "test_jax_instance_add": 332, "test_frontend_array_instance_method": 332, "test_ndarrai": 332, "test_numpy_ndarray_add": 332, "test_frontend_method": 332, "input_dtypes_init": 332, "as_variable_flags_init": 332, "num_positional_args_init": 332, "native_array_flags_init": 332, "all_as_kwargs_np_init": 332, "input_dtypes_method": 332, "as_variable_flags_method": 332, "num_positional_args_method": 332, "native_array_flags_method": 332, "all_as_kwargs_np_method": 332, "class_nam": 332, "method_nam": 332, "test_tensor": 332, "test_tensorflow_instance_add": 332, "1e04": 332, "1e06": 332, "allow_infin": 332, "test_torch_instance_add": 332, "somewhat": [332, 354, 1724], "value_test": 332, "dtype_x": 332, "test_jax_special_add": 332, "ret_gt": 332, "flatten_and_to_np": 332, "zip": [332, 337], "ret_from_gt": 332, "ground_truth_backend": 332, "_arrays_idx_n_dtyp": 332, "test_manipul": [332, 333], "surprisingli": 332, "cat": [332, 335, 337, 342], "closest_relevant_group": 332, "strive": [332, 333, 335, 354, 1726], "cycl": 333, "exhaust": [333, 1721, 1730], "fixtur": 333, "hit": [333, 337], "eleg": [333, 1724], "intellig": [333, 335, 1726], "unexplor": 333, "repeatedli": [333, 1544, 1553], "upload": 333, "artifact": 333, "parametr": [333, 1724], "impli": [333, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "bespok": 333, "_array_or_typ": 333, "standalon": [333, 1713, 1720, 1725, 1730, 1731], "test_default_int_dtyp": 333, "clariti": [333, 335, 1724], "print_hypothesis_exampl": 333, "searchstrategi": 333, "custom_strategi": 333, "sampled_from": 333, "randomis": 333, "simplist": 333, "intricaci": 333, "one_of": 333, "datum": 333, "pipe": 333, "overload": 333, "shorthand": 333, "isclos": 333, "flatmap": 333, "suppos": 333, "scaler": 333, "array_or_scal": 333, "len_of_arrai": 333, "interact": [333, 1714, 1723, 1724, 1729], "bodi": 333, "reusabl": [333, 354, 1722, 1724], "snippet": 333, "container_flag": 333, "thankfulli": 333, "advis": 333, "seamlessli": 333, "encount": 333, "criterion": 333, "array_valu": 333, "valid_ax": 333, "craft": 333, "hoc": 333, "intersect": [333, 353], "44758124e": 333, "308": [333, 552, 588, 591], "11228": 333, "456": [333, 1620, 1621, 1625], "268": 333, "wherev": 333, "dtype_values_axi": 333, "9622": 333, "28136": 333, "6375": 333, "12720": 333, "21354": 333, "900e": 333, "00": [333, 677, 793, 796], "955e": 333, "exclude_min": 333, "large_abs_safety_factor": 333, "safety_factor_scal": 333, "57384": 333, "25687": 333, "248": 333, "array_dtyp": 333, "min_siz": 333, "max_siz": 333, "array_bool": 333, "na": 333, "test_devic": 333, "array_shap": 333, "common_shap": 333, "test_lay": 333, "size_bound": 333, "reshape_shap": 333, "stand": 333, "fashion": 333, "some_sequ": 333, "allow_nan": 333, "allow_subnorm": 333, "get_bound": 333, "arrays_valu": 333, "36418": 333, "213": 333, "21716926": 333, "none_or_list_of_float": 333, "get_prob": 333, "get_mean_std": 333, "103515625e": 333, "099609375": 333, "probabilist": 333, "get_axi": 333, "number_positional_argu": 333, "unreproduc": 333, "test_valu": 333, "enough": [333, 339, 340, 341], "report": 333, "valid_float_dtyp": 333, "test_demo": 333, "falsifi": 333, "failing_test": 333, "traceback": 333, "file_nam": [333, 334], "shrink": 333, "prescrib": 333, "closest": [333, 335, 552, 576, 677, 753, 756, 798, 801, 803, 806, 943, 946, 988, 992], "scratch": 333, "databas": 333, "therebi": 333, "test_gelu": 333, "test_fil": 333, "brief": 333, "phase": [333, 354, 1724], "notabl": [333, 1724], "verbos": [333, 337, 1714, 1775], "newer": 333, "max_exampl": 333, "impact": [333, 341, 1726], "deadlin": 333, "weird": 333, "systemat": 333, "safeguard": 333, "inabl": 333, "test_result_typ": 333, "9090909090909091": 333, "judgement": 334, "some_namespac": 334, "some_backend": 334, "another_backend": 334, "refactor": 334, "ongo": 334, "cooler": 334, "something_cool": 334, "clean": [334, 335, 337, 338, 340], "_assert_fill_value_and_dtype_are_compat": 334, "_to_devic": 334, "focus": [334, 353, 1722, 1723, 1724, 1730, 1731], "prior": [334, 416, 417], "older": 334, "grow": [334, 1714, 1724], "unbound": 334, "battl": 334, "face": [335, 337, 1724, 1730], "answer": [335, 339, 354], "contradict": 335, "entail": 335, "sacrif": 335, "dimems": 335, "conv": [335, 1245], "jacfwd": 335, "jacrev": 335, "banner": 335, "pointwis": 335, "unnecessari": 335, "fuse": 335, "tensorrt": 335, "highli": [335, 1724], "expens": 335, "incredibli": [335, 340, 354, 1727], "six": 335, "__gt__": 335, "price": 335, "pai": 335, "intrus": 335, "x_beta": 335, "equip": 335, "deliber": [335, 677, 943, 946], "priorit": 335, "simplif": 335, "allevi": 335, "ineffici": [335, 354, 1724], "fledg": [337, 338], "syntact": [337, 342], "logspac": [337, 470], "construct": [337, 341, 342, 1459, 1525, 1529, 1722, 1724, 1731], "power_seq": 337, "backend_stack": 337, "cprint": [337, 1774], "_determine_backend_from_arg": 337, "importlib": 337, "import_modul": 337, "_backend_dict": 337, "illustr": [337, 353], "un": [337, 552, 605], "unrol": [337, 340, 1245, 1296, 1299], "lstm": [337, 1245, 1296, 1299, 1724], "cell": [337, 1245, 1296, 1299], "hidden": [337, 341, 1245, 1296, 1299], "recurr": [337, 1245, 1296, 1299, 1724, 1728], "timestep": [337, 1245, 1296, 1299], "x_shape": 337, "input_channel": [337, 341], "x_flat": 337, "wi": 337, "wi_x": 337, "wii_x": 337, "wif_x": 337, "wig_x": 337, "wio_x": 337, "wh": 337, "ht": 337, "ct": 337, "hts_list": 337, "wii_xt": 337, "wif_xt": 337, "wig_xt": 337, "wio_xt": 337, "htm1": 337, "ctm1": 337, "wh_htm1": 337, "whi_htm1": 337, "whf_htm1": 337, "whg_htm1": 337, "who_htm1": 337, "ft": 337, "ot": 337, "reliabl": 337, "sacrific": 337, "hear": 337, "virtu": [337, 1721], "pure_ivi": 337, "compile_graph": [337, 342], "pure_torch": 337, "backbon": [337, 340], "_layer": 337, "random_unifrom": 337, "unclean": 337, "wx": 337, "temp": [337, 999, 1146], "ivy_func": 337, "emphas": 337, "torchscript": [337, 1713, 1731], "example_input": [337, 467, 468], "static_argnum": [337, 467, 468], "static_argnam": [337, 467, 468], "jit": [337, 354, 1724], "primit": [338, 354, 1722, 1724], "upcom": 338, "hierarch": [338, 340, 341, 1724], "_init": 339, "_size": 339, "mul": 339, "_devic": 339, "_dev_str": 339, "as_ivy_dev": [339, 643], "_pre_repr": 339, "_post_repr": 339, "framework_str": 339, "noinspect": 339, "pypep8nam": 339, "typeerror": 339, "immut": 339, "claim": 339, "truli": 339, "_native_wrapp": 339, "attributeerror": 339, "genuin": 339, "some_method": 339, "rewritten": 339, "__pow__": 339, "strang": 339, "compartment": 339, "public": [339, 999, 1026, 1727], "newshap": 339, "new_shap": 339, "tidi": 339, "shorter": 339, "crystal": 339, "ton": 340, "ado": [340, 341], "soup": 340, "walk": [340, 341], "dct": 340, "cnt": 340, "combo": 340, "1000": [340, 677, 963, 966], "3333335": 340, "grad": [340, 341, 342, 1193, 1194, 1197, 1714], "delimit": 340, "autocomplet": 340, "midwai": 340, "agent": 340, "total_spe": 340, "total_height": 340, "total_width": 340, "ag": 340, "tot": 340, "total_": 340, "total_h": 340, "cnt0": 340, "cnt1": 340, "diff_0": 340, "diff_1": 340, "config0": 340, "config1": 340, "decod": 340, "l0": 340, "truncat": 340, "decoder__l0": 340, "decoder__l1": 340, "encoder__l0": 340, "encoder__l1": 340, "height": 340, "l0__b": 340, "l0__w": 340, "l1__b": 340, "l1__w": 340, "printabl": 340, "obviou": [340, 1724], "foresight": 340, "untidili": 340, "update_ag": 340, "normalize_img": 340, "img": 340, "img_max": 340, "reduce_max": [340, 1714], "img_min": 340, "reduce_min": [340, 1714], "img_rang": 340, "agent_posit": 340, "agent_veloc": 340, "agent_cam_front_rgb": 340, "agent_cam_front_depth": 340, "agent_cam_rear_rgb": 340, "agent_cam_rear_depth": 340, "agent_cam_lidar": 340, "camera": 340, "front_rgb": 340, "front_depth": 340, "rear_rgb": 340, "rear_depth": 340, "lidar": 340, "rgb": 340, "rear": 340, "veloc": 340, "cam": 340, "cam_max": 340, "cam_min": 340, "cam_rang": 340, "Of": [340, 1729, 1730], "perman": 340, "thread": [340, 1724], "pretti": [340, 1730], "dataload": [340, 352, 1714], "_cnt": 340, "img_": 340, "_dataset_s": 340, "_batch_siz": 340, "_count": [340, 341], "__next__": 340, "filenam": 340, "img_fnam": 340, "fname": 340, "loaded_img": 340, "cv2": 340, "imread": 340, "from_numpi": 340, "loader": [340, 354], "batch_slic": 340, "model": [340, 341, 1713, 1714, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731], "mymodel": [340, 1714], "linear0": [340, 341, 1714], "linear1": [340, 341, 1714], "x_in": [340, 341, 342, 1714], "loss_fn": [340, 341, 342, 1714], "reduce_mean": [340, 341, 342, 1714], "execute_with_gradi": [340, 341, 342, 354, 1193, 1714], "0145": 340, "grad_fn": [340, 1193, 1203, 1233], "addbackward0": 340, "_create_vari": 341, "output_channel": 341, "with_bia": 341, "_input_channel": 341, "_output_channel": 341, "_w_shape": 341, "_b_shape": 341, "_with_bia": 341, "396": 341, "764": 341, "872": 341, "211": 341, "439": 341, "nightmar": 341, "overcom": 341, "fc": 341, "v0": 341, "v1": 341, "key0": 341, "linear3": 341, "v2": 341, "counter": 341, "fed": [341, 643, 667], "weight_initi": 341, "glorotuniform": 341, "bias_initi": 341, "_w_init": 341, "_b_init": 341, "create_vari": 341, "var_shap": 341, "fan_out": 341, "fan_in": 341, "fan_mod": 341, "fan_sum": 341, "misnom": 341, "saw": 341, "vanilla": [341, 1540, 1542, 1724], "compile_on_next_step": [341, 999, 1006], "_beta1": 341, "_beta2": 341, "_epsilon": 341, "_mw": 341, "_vw": 341, "_first_pass": 341, "_should_compil": 341, "_step": 341, "new_v": 341, "_lr": 341, "_inplac": 341, "_stop_gradi": 341, "set_stat": 341, "clamp": 342, "clip_by_valu": 342, "captur": [342, 1725], "sparse_funct": 342, "num_class": 342, "new_axi": 342, "_linear": 342, "jax_graph": 342, "to_backend": 342, "to_ivy_modul": 342, "thinli": 342, "whilst": [342, 1713, 1724], "to_haiku_modul": 342, "hk": 342, "loss_fn_t": 342, "without_apply_rng": 342, "rng": 342, "prngkei": 342, "update_rul": 342, "tree_multimap": 342, "mechan": [352, 354, 1714], "robot": [352, 1714], "perfect": 353, "3d": 353, "differenti": [353, 1724], "orient": 353, "pose": 353, "euler": [353, 469], "quaternion": 353, "ivy_mech": 353, "target_facing_rotation_matrix": 353, "polar_to_cartesian_coord": 353, "ordin": [353, 1311, 1398, 1401], "warp": 353, "optic": 353, "voxel": 353, "ivy_vis": 353, "coords_to_voxel_grid": 353, "render_pixel_coord": 353, "neural": [353, 1245, 1714, 1720, 1722, 1723, 1724, 1728, 1730, 1731], "radianc": 353, "nerf": 353, "trajectori": 353, "motion": 353, "plan": [353, 1714], "mobil": [353, 1724], "sample_spline_path": 353, "rigidmobil": 353, "sample_bodi": 353, "drone": 353, "sample_link": 353, "openai": 353, "swimmer": 353, "reward": 353, "supervis": 353, "reinforc": 353, "door": [353, 354], "cartpol": 353, "mountain_car": 353, "pendulum": 353, "reacher": 353, "learnt": 353, "ture": 353, "ntm": 353, "egospher": 353, "spatial": 353, "esm": 353, "ivy_memori": 353, "egocentr": 353, "room": 353, "inspir": 353, "doubt": 354, "grate": 354, "probe": 354, "remark": 354, "surpris": 354, "lock": 354, "gold": 354, "dex": 354, "ye": 354, "scan": 354, "tricki": [354, 1713], "predictor": 354, "tight": 354, "driver": 354, "schedul": [354, 1724, 1731], "Will": 354, "ast": 354, "cond": 354, "jacobian": [354, 1193, 1213, 1724], "checkpoint": 354, "autodiff": 354, "shine": 354, "merci": 354, "autograd": 354, "cluster": [354, 1724], "compet": [354, 1724], "paradigm": [354, 1724], "parallelis": 354, "spmd": 354, "mixtur": 354, "expert": 354, "sophist": 354, "depart": 354, "routin": [354, 1724], "hundr": 354, "thousand": 354, "deepli": [354, 1544, 1546, 1724], "broadli": [354, 1730], "supplementari": 354, "fanci": [354, 1724], "fusion": [354, 1728], "lose": 354, "vmap": [354, 999, 1724], "pmap": 354, "overhead": [354, 1727], "eventu": 354, "supplement": 354, "backdoor": 354, "callback": 354, "record": [354, 1725], "metric": 354, "outsourc": 354, "integer_arrays_to_float": 355, "with_supported_device_and_dtyp": 355, "version_dict": 355, "with_supported_devic": 355, "with_unsupported_device_and_dtyp": 355, "with_unsupported_devic": 355, "row": [370, 371, 400, 403, 412, 470, 491, 492, 1311, 1359, 1362, 1398, 1401, 1403, 1407, 1423, 1427, 1567, 1568, 1571, 1594, 1610, 1613], "col": [370, 371], "retain": [370, 371, 1193, 1202, 1713], "upward": [370, 371], "downward": [370, 371], "2xn": [370, 371], "subarrai": [370, 371], "position": [374, 376], "inexact": [374, 376], "greatest": [374, 379, 677, 798, 801, 803, 806], "princip": [374, 383, 677, 683, 686, 698, 701, 708, 711], "217234": [374, 383], "0800": [387, 388], "3979": [387, 388], "9121": [387, 388], "5400": [387, 388], "han": [387, 389], "taper": [387, 389], "00713103": [387, 390], "99997455": [387, 390], "kaiser_derived_window": [387, 390], "00726415": [387, 390], "9999736": [387, 390], "2773e": [387, 391], "0172e": [387, 391], "9294e": [387, 391], "4149": [387, 391], "9138": [387, 391], "5529": [387, 391], "dimensio": [387, 393], "before_1": [387, 394, 1459, 1470, 1473, 1535, 1539], "after_1": [387, 394, 1459, 1470, 1473, 1535, 1539], "before_n": [387, 394, 1459, 1470, 1473, 1535, 1539], "after_n": [387, 394, 1459, 1470, 1473, 1535, 1539], "width": [387, 394], "linear_ramp": [387, 394], "suppli": [387, 394], "ramp": [387, 394], "padding_func": [387, 394], "iaxis_pad_width": [387, 394], "iaxi": [387, 394], "unalt": [387, 394], "vorbis_window": 387, "vorbi": [387, 395], "complementari": [387, 395, 1722, 1730], "38268346": [387, 395], "38268352": [387, 395], "14943586": [387, 395], "8563191": [387, 395], "14943568": [387, 395], "th": [396, 397], "superdiagon": [396, 397, 1311, 1327, 1330], "subdiagon": [396, 397, 1311, 1327, 1330], "manipulation_funct": [400, 401], "horizot": [400, 405], "ndenumer": 400, "multidimension": [400, 408, 409, 1724], "ndindex": 400, "multivari": [416, 417], "conjug": [416, 417], "bayesian": [416, 417], "sparse_arrai": [422, 423, 424, 425, 426], "nativesparsearrai": 422, "sparsearrai": 422, "coo_indic": [422, 425], "csr_crow_indic": [422, 425], "csr_col_indic": [422, 425], "dense_shap": [422, 425], "to_dense_arrai": 422, "is_ivy_sparse_arrai": 422, "is_native_sparse_arrai": 422, "native_sparse_arrai": 422, "native_sparse_array_to_indices_values_and_shap": 422, "gaussian": [431, 432, 435], "138": [431, 432, 435], "165": [431, 432, 435, 1245, 1291, 1294], "126": [431, 432, 435, 677, 928, 931, 1657, 1668, 1671], "166": [431, 432, 435, 1620, 1621, 1625], "159": [431, 432, 435, 1245, 1291, 1294], "703": [431, 442, 445], "683": [431, 442, 445], "408": [431, 442, 445], "313": [431, 442, 445], "437": [431, 442, 445], "214": [431, 452, 455], "891": [431, 452, 455], "0768": [431, 457, 460, 677, 768, 771], "231": [431, 457, 460], "363": [431, 457, 460], "invoc": [467, 468], "718281828459045": 469, "newaxi": 469, "pi": 469, "141592653589793": 469, "nestedsequ": [470, 475, 477], "protocol": [470, 471], "_t_co": [470, 471], "ml_framework": [470, 472, 473], "distanc": [470, 472, 473], "adjac": [470, 472, 473], "obj": [470, 475, 477], "typevar": [470, 475, 477], "supportsbufferprotocol": [470, 475, 477], "asarray_handle_nest": 470, "asarray_infer_devic": 470, "asarray_to_native_arrays_and_back": 470, "static_copy_arrai": [470, 482, 484], "interchang": [470, 494, 497, 1459, 1520, 1524], "conserv": [470, 511, 514], "cartesian": [470, 511, 514], "ij": [470, 511, 514, 1657, 1668, 1671], "ni": [470, 511, 514], "xi": [470, 511, 514], "n1": [470, 511, 514], "n2": [470, 511, 514], "n3": [470, 511, 514], "xv": [470, 511, 514], "yv": [470, 511, 514], "y1": [470, 547, 551], "y2": [470, 547, 551], "y3": [470, 547, 551], "intdtyp": [470, 547, 551, 552, 581, 621, 624, 635], "defaultdtyp": 552, "defaultfloatdtyp": 552, "defaultintdtyp": 552, "defaultuintdtyp": 552, "uint_dtyp": [552, 582, 636], "as_native_dtyp": 552, "incompat": [552, 565, 568], "data_type_funct": [552, 570, 573], "check_float": 552, "closest_valid_dtyp": 552, "xtype": [552, 576], "ytype": [552, 576], "native_uint16": [552, 576], "floatdtyp": [552, 578, 579], "int_dtyp": [552, 581, 635], "4294967346": [552, 581, 582], "default_uint_dtyp": [552, 636, 641], "uintdtyp": [552, 582, 621, 624, 636, 641], "defualt": [552, 582], "set_default_uint_dtyp": [552, 582, 604, 641], "dtype_bit": 552, "native_bool": [552, 587], "followng": [552, 588, 591], "smallest_norm": [552, 588, 591], "4028235e": [552, 588, 591], "7976931348623157e": [552, 588, 591], "55040e": [552, 588, 591], "encapsul": [552, 599, 602], "314": [552, 599, 602], "9223372036854775808": [552, 599, 602], "9223372036854775807": [552, 599, 602], "65535": [552, 599, 602], "4294967295": [552, 599, 602], "infer_default_dtyp": 552, "native_uint8": [552, 605], "type1": [552, 626], "type2": [552, 626], "array_api_promot": [552, 626, 627], "default_dtype_stack": [552, 633, 638], "unset_default_dtyp": [552, 633], "native_uint64": [552, 633], "ret1": [552, 637], "ret2": [552, 637], "reset": [552, 638, 641, 643, 675, 999, 1182, 1183, 1184, 1185, 1186], "unset_default_float_dtyp": 552, "unset_default_int_dtyp": 552, "unset_default_uint_dtyp": 552, "valid_dtyp": 552, "native_float16": [552, 642], "defaultdevic": 643, "__enter__": 643, "_dev": 643, "__exit__": 643, "exc_typ": 643, "exc_val": 643, "exc_tb": 643, "exit": 643, "profil": 643, "save_dir": [643, 644], "as_native_dev": [643, 662], "clear_mem_on_dev": 643, "function_supported_devic": 643, "function_unsupported_devic": 643, "139740789224448": [643, 657], "gpu_is_avail": 643, "physic": [643, 659], "num_ivy_arrays_on_dev": 643, "x4": [643, 661], "percent_used_mem_on_dev": 643, "process_specif": [643, 662, 676], "percentag": [643, 662], "ram": [643, 662, 673, 676], "036902561555": [643, 662], "7024003467681645": [643, 662], "7095597456708771": [643, 662], "print_all_ivy_arrays_on_dev": 643, "attr_onli": [643, 663], "chunk": [643, 665, 666, 667], "split_func_cal": 643, "max_chunk_s": [643, 667], "chunk_siz": [643, 667], "input_ax": [643, 667], "output_ax": [643, 667], "feed": [643, 667, 1724, 1725], "fist": [643, 667], "gb": [643, 673, 676], "66700032": [643, 673], "589934592": [643, 673], "tpu_is_avail": 643, "unset_default_devic": 643, "used_mem_on_dev": 643, "219563008": [643, 676], "902400346": [643, 676], "525205504": [643, 676], "magnitud": [677, 678, 681, 693, 696, 903, 906, 1311, 1403, 1407, 1408, 1412], "nearest": [677, 693, 696, 903, 906, 943, 946], "2019": [677, 693, 696, 793, 796, 858, 861, 903, 906, 1724, 1727], "commut": [677, 693, 696], "809": [677, 703, 706], "199": [677, 703, 706], "569": [677, 703, 706], "733": [677, 703, 706], "notat": [677, 713, 716, 1657, 1668, 1671], "denot": [677, 713, 716, 1193, 1226, 1244], "quadrant": [677, 713, 716], "3\u03c0": [677, 713, 716], "588": [677, 713, 716], "719": [677, 713, 716], "197": [677, 713, 716], "bitwis": [677, 723, 726, 738, 741, 748, 751, 888, 891], "invert": [677, 728, 731, 1311, 1364, 1366], "170": [677, 743, 746], "243": [677, 743, 746], "225": [677, 743, 746], "xor": [677, 748, 751, 888, 891], "77": [677, 748, 751, 1311, 1378, 1381, 1657, 1668, 1671], "654": [677, 758, 761], "368": [677, 763, 766], "670": [677, 763, 766], "548": [677, 763, 766, 958, 961], "1490": [677, 763, 766], "0192": [677, 768, 771], "0384": [677, 768, 771], "0576": [677, 768, 771], "115": [677, 768, 771, 928, 931], "698": [677, 773, 776], "accur": [677, 793, 796, 858, 861], "fdlibm": [677, 793, 796, 858, 861], "compliant": [677, 793, 796, 858, 861, 878, 881, 883, 886, 1657, 1672, 1675, 1676, 1679, 1680, 1683, 1688, 1691], "85e": [677, 793, 796], "632": [677, 793, 796], "20e": [677, 793, 796], "72e": [677, 793, 796], "22000": [677, 793, 796], "442000": [677, 793, 796], "742": [677, 858, 861], "y_i": [677, 908, 911], "versu": [677, 923, 926], "189": [677, 928, 931], "252": [677, 928, 931], "315": [677, 928, 931], "378": [677, 928, 931], "1150": [677, 928, 931], "2890": [677, 928, 931], "172": [677, 928, 931], "229": [677, 928, 931], "487": [677, 928, 931, 1245, 1291, 1294], "344": [677, 928, 931], "decim": [677, 943, 946, 988, 992], "imprecis": [677, 943, 946], "5654": [677, 943, 946], "034": [677, 943, 946], "433": [677, 943, 946, 1193, 1203, 1213, 1233], "124": [677, 948, 951, 1245, 1291, 1294], "932": [677, 953, 956], "746": [677, 953, 956], "443": [677, 953, 956], "657": [677, 953, 956, 999, 1021, 1024], "253": [677, 958, 961], "indistinguish": [677, 963, 966], "infinit": [677, 963, 966], "32455532": [677, 963, 966], "89897949": [677, 963, 966], "169": [677, 963, 966], "546": [677, 978, 982, 1245, 1291, 1294], "842": [677, 978, 982], "916": [677, 978, 982, 1443, 1444, 1447], "996": [677, 978, 982], "328": [677, 978, 982], "462": [677, 983, 987], "604": [677, 983, 987], "984": [677, 983, 987], "997": [677, 983, 987], "arg_info": 999, "inspect": [999, 1005], "arg_nam": 999, "recalcul": [999, 1015], "my_sum": [999, 1015], "val1": [999, 1015], "val2": [999, 1015], "cached_sum": [999, 1015], "line_eq": [999, 1015], "slp": [999, 1015], "itc": [999, 1015], "cached_line_eq": [999, 1015], "0353": [999, 1016, 1019], "424": [999, 1016, 1019], "58": [999, 1016, 1019, 1620, 1621, 1625], "176": [999, 1016, 1019, 1620, 1621, 1625], "339": [999, 1016, 1019], "271": [999, 1016, 1019], "135": [999, 1016, 1019], "406": [999, 1016, 1019], "168": [999, 1016, 1019], "391": [999, 1016, 1019], "417": [999, 1021, 1024], "583": [999, 1021, 1024], "0667": [999, 1021, 1024], "267": [999, 1021, 1024], "131": [999, 1021, 1024], "263": [999, 1021, 1024], "394": [999, 1021, 1024, 1567, 1589, 1592], "526": [999, 1021, 1024], "788": [999, 1021, 1024], "container_typ": 999, "default_str": [999, 1028, 1030], "405": [999, 1036, 1039], "fourier": [999, 1049, 1052], "function_supported_devices_and_dtyp": 999, "function_unsupported_devices_and_dtyp": 999, "get_all_arrays_in_memori": [999, 1128], "get_array_mod": [999, 1139, 1182], "array_mod": [999, 1067], "set_array_mod": [999, 1067, 1182], "get_exception_trace_mod": [999, 1072, 1140, 1183], "exception_trace_mod": [999, 1068], "set_exception_trace_mod": [999, 1068, 1183], "get_item": 999, "get_min_bas": [999, 1141], "get_min_denomin": [999, 1142], "get_nestable_mod": [999, 1143, 1184], "set_nestable_mod": [999, 1072, 1184], "get_queue_timeout": [999, 1144, 1185], "set_queue_timeout": [999, 1078, 1185], "get_referrers_recurs": 999, "seen_set": [999, 1079], "local_set": [999, 1079], "get_tmp_dir": [999, 1146], "inplace_arrays_support": 999, "inplace_variables_support": 999, "is_frontend_arrai": 999, "isscalar": 999, "match_kwarg": 999, "allow_dupl": [999, 1125], "forkserv": [999, 1126], "spawn": [999, 1126], "num_arrays_in_memori": 999, "print_all_arrays_in_memori": 999, "garbag": [999, 1128], "collector": [999, 1128], "set_min_bas": 999, "set_min_denomin": 999, "set_shape_array_mod": [999, 1148, 1186], "shape_array_mod": [999, 1145, 1186], "set_tmp_dir": 999, "tmp_dr": [999, 1146], "tmp": [999, 1146], "my_tmp": [999, 1146], "49999999999975": [999, 1149, 1152], "5015015015010504": [999, 1149, 1152], "000444502911705e": [999, 1149, 1152], "9999999999995j": [999, 1149, 1152], "to_ivy_shap": 999, "100000023841858": [999, 1165, 1169], "200000047683716": [999, 1165, 1169], "299999952316284": [999, 1165, 1169], "400000095367432": [999, 1165, 1169], "599999904632568": [999, 1165, 1169], "to_native_shap": 999, "try_else_non": 999, "dictionai": [999, 1181], "hemant": [999, 1181], "unset_array_mod": 999, "unset_shape_array_mod": [999, 1182, 1185], "unset_exception_trace_mod": 999, "unset_nestable_mod": 999, "unset_queue_timeout": 999, "451": [999, 1187, 1191], "in_ax": [999, 1192], "out_ax": [999, 1192], "thereof": [999, 1192], "fun": [999, 1192, 1544, 1555], "summaris": [999, 1192], "gradienttrack": 1193, "with_grad": [1193, 1226, 1232], "0125": [1193, 1194, 1197], "171": [1193, 1194, 1197], "retain_grad": [1193, 1202], "xs_grad_idx": [1193, 1202], "ret_grad_idx": [1193, 1202], "func_ret": [1193, 1202], "933": [1193, 1203, 1213, 1233], "jac": 1193, "jac_fn": [1193, 1213], "639": [1193, 1214, 1217], "361": [1193, 1214, 1217, 1567, 1578, 1581], "set_with_grad": [1193, 1232, 1244], "with_grads_stack": [1193, 1226, 1232, 1244], "unset_with_grad": 1193, "value_and_grad": 1193, "value_grad": [1193, 1233], "423332": [1193, 1233], "channel_last": [1245, 1246, 1276, 1277], "feature_group_count": [1245, 1246, 1276, 1277], "x_dilat": [1245, 1246, 1276], "fd": [1245, 1266, 1269, 1271, 1274, 1276, 1277], "ncdhw": [1245, 1266, 1269, 1271, 1274], "dhwio": [1245, 1266, 1269], "258": [1245, 1271, 1274], "channel_first": [1245, 1276, 1277, 1289], "conv_general_transpos": 1245, "deconv_length": 1245, "stride_s": [1245, 1278], "kernel_s": [1245, 1278], "depthwis": [1245, 1279, 1282], "hwi": [1245, 1279, 1282], "randomli": [1245, 1284, 1287], "bernoulli": [1245, 1284, 1287], "get_x_data_format": 1245, "handle_pad": 1245, "incom": [1245, 1291, 1294], "666": [1245, 1291, 1294, 1311, 1359, 1362], "4269": [1245, 1291, 1294], "911": [1245, 1291, 1294], "157": [1245, 1291, 1294], "753": [1245, 1291, 1294], "101": [1245, 1291, 1294, 1311, 1349, 1352, 1544, 1550], "545": [1245, 1291, 1294, 1567, 1583, 1586], "547": [1245, 1291, 1294], "852": [1245, 1291, 1294], "963": [1245, 1291, 1294], "108": [1245, 1291, 1294, 1657, 1668, 1671], "196": [1245, 1291, 1294], "306": [1245, 1291, 1294], "num_queri": [1245, 1301, 1304, 1306, 1309], "query_dim": [1245, 1301, 1304], "measur": [1245, 1301, 1304], "num_kei": [1245, 1301, 1304, 1306, 1309], "cont_feat_dim": [1245, 1301, 1304], "numhead": [1245, 1301, 1304], "head_dim": [1245, 1301, 1304], "out_feat_dim": [1245, 1301, 1304], "feat_dim": [1245, 1306, 1309], "score": [1245, 1306, 1309], "axisa": [1311, 1317, 1320], "axisb": [1311, 1317, 1320], "axisc": [1311, 1317, 1320], "293": [1311, 1322, 1325], "46997": [1311, 1322, 1325], "uplo": [1311, 1337, 1340, 1341, 1343], "eigendecomposit": [1311, 1337, 1340], "qlq\u1d40": [1311, 1337, 1340], "orthogon": [1311, 1337, 1340], "eig": [1311, 1337, 1340, 1341, 1343], "hermitian": [1311, 1337, 1340, 1341, 1343, 1403, 1407], "eigenvalu": [1311, 1337, 1340, 1341, 1343], "eigenvector": [1311, 1337, 1340], "array_lik": [1311, 1344, 1347, 1378, 1381], "0012": [1311, 1349, 1352], "00342": [1311, 1349, 1352], "000565": [1311, 1349, 1352], "0104": [1311, 1349, 1352], "0003": [1311, 1349, 1352], "000981": [1311, 1349, 1352], "00282": [1311, 1349, 1352], "000766": [1311, 1349, 1352], "0322": [1311, 1349, 1352], "00237": [1311, 1349, 1352], "000151": [1311, 1349, 1352], "00101": [1311, 1349, 1352], "00019": [1311, 1349, 1352], "0214": [1311, 1349, 1352], "00171": [1311, 1349, 1352], "0107": [1311, 1349, 1352], "0167": [1311, 1349, 1352], "0472": [1311, 1349, 1352], "0536": [1311, 1349, 1352], "0177": [1311, 1349, 1352], "000429": [1311, 1349, 1352], "00762": [1311, 1349, 1352], "transpose_a": [1311, 1354, 1357], "transpose_b": [1311, 1354, 1357], "prepend": [1311, 1354, 1357, 1459, 1475, 1478], "frobeniu": [1311, 1359, 1362], "nuclear": [1311, 1359, 1362], "induc": [1311, 1359, 1362], "47722558": [1311, 1359, 1362], "776": [1311, 1359, 1362], "6000004": [1311, 1359, 1362], "112": [1311, 1378, 1381, 1657, 1668, 1671], "104": [1311, 1378, 1381, 1657, 1668, 1671], "moor": [1311, 1383, 1386], "penros": [1311, 1383, 1386], "orthonorm": [1311, 1388, 1391, 1403, 1407], "usvh": [1311, 1403, 1407], "vh": [1311, 1403, 1407], "et": [1311, 1403, 1407], "cetera": [1311, 1403, 1407], "reconstructed_x": [1311, 1403, 1407], "ss": [1311, 1408, 1412], "615": [1311, 1408, 1412, 1620, 1621, 1625], "866": [1311, 1408, 1412], "864": [1311, 1408, 1412], "contract": [1311, 1413, 1417, 1657, 1668, 1671], "0x": [1311, 1423, 1427], "alexandr": [1311, 1423, 1427], "theophil": [1311, 1423, 1427], "skew": [1311, 1438, 1442], "symmetric_matrix": [1311, 1438, 1442], "cross_product": [1311, 1438, 1442], "discret": [1443, 1449, 1452], "35667497": [1443, 1449, 1452], "793291": [1443, 1454, 1457], "512926": [1443, 1454, 1457], "squeezabl": [1459, 1510, 1513], "famili": [1459, 1515, 1518], "intxx": [1459, 1515, 1518], "floatxx": [1459, 1515, 1518], "retwaitin": [1459, 1525, 1529], "fomaml_step": 1540, "inner_cost_fn": [1540, 1541, 1542], "outer_cost_fn": [1540, 1541, 1542], "inner_grad_step": [1540, 1541, 1542, 1543], "inner_learning_r": [1540, 1541, 1542, 1543], "inner_optimization_step": [1540, 1541, 1542, 1543], "inner_batch_fn": [1540, 1541, 1542], "outer_batch_fn": [1540, 1541, 1542], "average_across_step": [1540, 1541, 1542], "inner_v": [1540, 1541, 1542], "keep_inner_v": [1540, 1541, 1542], "outer_v": [1540, 1541, 1542], "keep_outer_v": [1540, 1541, 1542], "return_inner_v": [1540, 1541, 1542, 1543], "num_task": [1540, 1541, 1542, 1543], "maml": [1540, 1541, 1542], "recev": [1540, 1541, 1542], "0x7fde6f142e50": [1540, 1541, 1542, 1543], "maml_step": 1540, "rece": [1540, 1542], "reptile_step": 1540, "cost_fn": [1540, 1543], "reptil": [1540, 1543], "receivng": [1540, 1543], "all_nested_indic": 1544, "include_nest": [1544, 1545], "_index": [1544, 1545, 1555], "_base": [1544, 1545, 1554, 1555], "copy_nest": 1544, "to_mut": [1544, 1546, 1556], "mutabl": [1544, 1546, 1556], "copied_nest": [1544, 1546], "1337": [1544, 1546], "insert_into_nest_at_index": 1544, "insert_into_nest_at_indic": 1544, "special_squar": [1544, 1550], "6666666666666667": [1544, 1550], "special_pow": [1544, 1550], "linear_model": [1544, 1550], "map_nest_at_index": 1544, "hh": [1544, 1551], "map_nest_at_indic": 1544, "ub": [1544, 1552], "tb": [1544, 1552], "multi_index_nest": 1544, "nested_ani": 1544, "check_nest": [1544, 1554, 1555], "conditon": [1544, 1554, 1555], "nested_argwher": 1544, "stop_after_n_found": [1544, 1555], "nested_indic": [1544, 1555], "_depth": [1544, 1556], "_tuple_check_fn": [1544, 1556], "_list_check_fn": [1544, 1556], "_dict_check_fn": [1544, 1556], "nested_multi_map": 1544, "nest0": [1544, 1557], "ivy_arrai": [1544, 1557], "funciton": [1544, 1557], "prune_nest_at_index": 1544, "prune_nest_at_indic": 1544, "set_nest_at_index": 1544, "set_nest_at_indic": 1544, "111": [1544, 1561], "xyz": [1544, 1561], "pqr": [1544, 1561], "mini": [1562, 1563, 1566], "217": [1562, 1563, 1566], "uniformli": [1567, 1573, 1576, 1583, 1586], "22346112": [1567, 1578, 1581], "0922": [1567, 1578, 1581], "515": [1567, 1578, 1581], "596": [1567, 1578, 1581], "247": [1567, 1578, 1581], "627": [1567, 1578, 1581], "9213753": [1567, 1578, 1581], "12818667": [1567, 1578, 1581], "799": [1567, 1578, 1581], "469": [1567, 1578, 1581], "287": [1567, 1578, 1581], "0366": [1567, 1578, 1581], "26431865": [1567, 1583, 1586], "475": [1567, 1583, 1586], "878": [1567, 1583, 1586], "861": [1567, 1583, 1586], "929": [1567, 1583, 1586], "789": [1567, 1583, 1586], "519": [1567, 1583, 1586], "0435": [1567, 1583, 1586], "381": [1567, 1583, 1586, 1620, 1621, 1625], "4608004": [1567, 1583, 1586], "8458502": [1567, 1583, 1586], "x_j": [1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "aggreg": [1620, 1621, 1625], "fourth": [1620, 1621, 1625], "607": [1620, 1621, 1625], "735": [1620, 1621, 1625], "0396": [1620, 1621, 1625], "828": [1620, 1621, 1625], "144": [1620, 1621, 1625], "40501155": [1620, 1621, 1625], "77361575": [1620, 1621, 1625], "97776199": [1620, 1621, 1625], "36831157": [1620, 1621, 1625], "89148434": [1620, 1621, 1625], "9512272": [1620, 1621, 1625], "67542176": [1620, 1621, 1625], "41985657": [1620, 1621, 1625], "23478023": [1620, 1621, 1625], "1141": [1620, 1621, 1625], "8101": [1620, 1621, 1625], "9298": [1620, 1621, 1625], "8460": [1620, 1621, 1625], "2119": [1620, 1621, 1625], "3519": [1620, 1621, 1625], "6252": [1620, 1621, 1625], "4033": [1620, 1621, 1625], "7443": [1620, 1621, 1625], "2577": [1620, 1621, 1625], "3707": [1620, 1621, 1625], "0545": [1620, 1621, 1625], "3238": [1620, 1621, 1625], "5944": [1620, 1621, 1625], "0775": [1620, 1621, 1625], "4327": [1620, 1621, 1625], "889": [1620, 1621, 1625], "175": [1620, 1621, 1625], "763": [1620, 1621, 1625], "071": [1620, 1621, 1625], "262": [1620, 1621, 1625], "114": [1620, 1621, 1625], "349": [1620, 1621, 1625], "594": [1620, 1621, 1625], "335": [1620, 1621, 1625], "457": [1620, 1621, 1625], "827": [1620, 1621, 1625], "209": [1620, 1621, 1625], "einstein": [1657, 1668, 1671], "summat": [1657, 1668, 1671], "seq": [1657, 1668, 1671], "jk": [1657, 1668, 1671], "ik": [1657, 1668, 1671], "510": [1657, 1668, 1671], "117": [1657, 1668, 1671], "sentinel": [1657, 1672, 1675, 1680, 1683], "90000004": [1657, 1676, 1679], "statistical_funct": [1657, 1688, 1691], "8164966": [1657, 1688, 1691], "07472222": [1657, 1697, 1701], "simplicit": [1702, 1703, 1706, 1708, 1711], "nail": 1713, "funtion": 1713, "asset": 1713, "functiona": 1713, "scientist": 1713, "deploi": [1713, 1722, 1723, 1724, 1726, 1730], "correl": 1713, "analyz": 1713, "ai": [1714, 1722, 1726], "colab": 1714, "sharp": 1714, "favorit": 1714, "jax_concat": 1714, "tf_concat": 1714, "np_concat": 1714, "torch_concat": 1714, "get_devic": 1714, "reduce_prod": 1714, "reduce_sum": 1714, "gradient_imag": 1714, "indices_wher": 1714, "bilinear_resampl": 1714, "stack_imag": 1714, "neural_net": 1714, "floormod": 1714, "articl": 1714, "lenton2021ivi": 1714, "inter": 1714, "lenton": 1714, "daniel": 1714, "pardo": 1714, "fabio": 1714, "falck": 1714, "fabian": 1714, "jame": 1714, "stephen": 1714, "clark": 1714, "ronald": 1714, "journal": 1714, "arxiv": 1714, "preprint": 1714, "2102": 1714, "02886": 1714, "2021": 1714, "conceptu": [1720, 1725], "broken": [1720, 1724], "tracer": 1720, "infrastructur": [1720, 1726, 1727], "vendor": [1720, 1726], "complimentari": [1720, 1730], "acycl": [1720, 1725], "insert_numb": 1721, "insert_t": 1721, "scaffold": [1722, 1730], "heart": 1722, "toolchain": [1722, 1727], "intermedi": [1722, 1723, 1724, 1725, 1730], "ir": [1722, 1725, 1730], "assembli": [1722, 1729, 1730], "idl": 1722, "middl": 1722, "emit": 1722, "gnu": [1722, 1727], "gcc": [1722, 1729], "broader": 1722, "heterogen": 1722, "aid": 1722, "coprocessor": 1722, "programm": [1722, 1729], "gate": 1722, "onednn": 1722, "awai": [1722, 1724], "sit": [1722, 1725, 1730], "tandem": 1722, "possess": 1722, "underneath": 1722, "export": [1723, 1730], "signal": [1723, 1724], "khrono": [1723, 1729], "appl": 1723, "coremltool": 1723, "albeit": 1723, "promin": 1724, "abbrevi": 1724, "laboratori": 1724, "proprietari": [1724, 1728, 1729], "mathwork": 1724, "commerci": 1724, "1984": 1724, "plot": 1724, "toolbox": 1724, "mupad": 1724, "engin": [1724, 1726, 1727], "simulink": 1724, "graphic": [1724, 1728, 1729], "simul": 1724, "embed": 1724, "million": [1724, 1727], "worldwid": 1724, "scienc": [1724, 1726], "econom": 1724, "2001": 1724, "scientif": 1724, "interpol": 1724, "od": 1724, "solver": 1724, "fortran": [1724, 1728], "cython": 1724, "friendli": 1724, "2002": 1724, "lua": 1724, "luajit": 1724, "idiap": 1724, "epfl": 1724, "2005": 1724, "numarrai": 1724, "cpython": 1724, "partli": 1724, "2007": 1724, "classif": 1724, "regress": [1724, 1731], "forest": 1724, "boost": 1724, "dbscan": 1724, "inbuilt": 1724, "esqu": 1724, "aesara": 1724, "2008": 1724, "datafram": 1724, "critic": [1724, 1730], "2012": 1724, "Its": 1724, "polymorph": 1724, "parallel": [1724, 1728, 1729], "mpi": 1724, "openmp": 1724, "glue": 1724, "jaot": 1724, "nasa": 1724, "cern": 1724, "climat": 1724, "allianc": 1724, "influenti": 1724, "2014": 1724, "analyt": [1724, 1726, 1730], "scala": 1724, "ship": 1724, "forgiv": 1724, "decemb": 1724, "announc": 1724, "transit": 1724, "mainten": 1724, "v7": 1724, "meaning": 1724, "2016": 1724, "imper": 1724, "fast": 1724, "amazon": 1724, "traction": 1724, "cognit": [1724, 1731], "toolkit": [1724, 1725, 1731], "grade": 1724, "realiz": 1724, "dnn": 1724, "cnn": 1724, "rnn": 1724, "stochast": 1724, "sgd": 1724, "backpropag": 1724, "succumb": 1724, "came": 1724, "monitor": 1724, "practition": [1724, 1728, 1729, 1730], "hobbyist": 1724, "tremend": 1724, "ecosystem": 1724, "gear": 1724, "batteri": 1724, "zygot": 1724, "jl": 1724, "workload": 1724, "daggerflux": 1724, "frontier": 1724, "hessian": 1724, "2018": 1724, "lightweight": [1724, 1731], "shortcom": 1724, "eas": 1724, "barrier": 1724, "inexperienc": 1724, "underdevelop": 1724, "fanat": 1724, "ounc": 1724, "infanc": 1724, "emerg": 1724, "nich": 1724, "introduct": 1724, "lite": 1724, "enterpris": 1724, "reinvent": [1724, 1726], "inertia": 1724, "haven": 1724, "creator": [1724, 1726], "paszk": 1724, "hi": 1724, "safeti": 1724, "bulk": 1724, "haskel": 1724, "dataflow": 1725, "distil": 1725, "essenc": [1725, 1730], "enclos": 1725, "scope": [1725, 1729], "trace_modul": 1725, "scriptfunct": 1725, "scriptmodul": 1725, "fake": 1725, "proxi": 1725, "site": 1725, "graphmodul": 1725, "travi": 1726, "oliph": 1726, "leader": 1726, "led": 1726, "cornerston": 1726, "numba": 1726, "numfocu": 1726, "pydata": 1726, "confer": 1726, "consult": 1726, "servic": 1726, "expertis": 1726, "devop": 1726, "mlop": 1726, "dashboard": 1726, "startup": 1726, "mlir": [1726, 1727, 1730], "Their": 1726, "held": 1726, "privileg": 1726, "presum": 1726, "llvm": [1726, 1729], "founder": 1726, "tvm": [1726, 1730], "sustain": 1726, "empow": 1726, "har": 1726, "burden": 1726, "benchmark": 1726, "convention": 1727, "precompil": 1727, "executor": 1727, "exploit": 1727, "julia": [1727, 1730], "fsf": 1727, "gpl": 1727, "biggest": [1727, 1730], "nvidia": [1728, 1729], "conduct": 1728, "throughput": 1728, "autotun": 1728, "consumpt": 1728, "gpgpu": 1728, "talk": 1729, "classic": 1729, "sycl": 1729, "dpc": 1729, "processor": 1729, "x86": 1729, "oneapi": 1729, "ia": 1729, "aka": 1729, "xeon": 1729, "gen9": 1729, "xe": 1729, "card": 1729, "arria": 1729, "gx": 1729, "fpga": 1729, "tune": [1729, 1730], "lofti": 1730, "ambit": 1730, "realm": 1730, "bedrock": 1730, "flux": 1730, "bite": 1730, "chew": 1730, "eagerpi": 1730, "tensorli": 1730, "thinc": 1730, "neuropod": 1730, "exhibit": 1730, "emploi": 1730, "fx": 1730, "retrain": 1730, "wider": 1730, "closer": 1730, "greatli": 1730, "challeng": 1730, "modular": 1730, "anywher": 1730, "switch": 1731, "theano": 1731, "plaidml": 1731, "partial_svd": 1731, "tucker_mode_dot": 1731, "excel": 1731, "subsystem": 1731}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [47, 0, 0, "-", "array"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [62, 0, 0, "-", "extensions"], [132, 0, 0, "-", "general"], [134, 0, 0, "-", "gradients"], [136, 0, 0, "-", "image"], [138, 0, 0, "-", "layers"], [140, 0, 0, "-", "linear_algebra"], [142, 0, 0, "-", "losses"], [144, 0, 0, "-", "manipulation"], [146, 0, 0, "-", "norms"], [148, 0, 0, "-", "random"], [150, 0, 0, "-", "searching"], [152, 0, 0, "-", "set"], [154, 0, 0, "-", "sorting"], [156, 0, 0, "-", "statistical"], [158, 0, 0, "-", "utility"], [160, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.array": [[48, 1, 1, "", "Array"]], "ivy.array.array.Array": [[48, 3, 1, "", "T"], [48, 2, 1, "", "__add__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__le__"], [48, 2, 1, "", "__radd__"], [48, 2, 1, "", "__rrshift__"], [48, 2, 1, "", "__rshift__"], [48, 2, 1, "", "__rsub__"], [48, 2, 1, "", "__sub__"], [48, 3, 1, "", "data"], [48, 3, 1, "", "device"], [48, 3, 1, "", "dtype"], [48, 3, 1, "", "mT"], [48, 3, 1, "", "ndim"], [48, 3, 1, "", "shape"], [48, 3, 1, "", "size"]], "ivy.array.conversions": [[50, 4, 1, "", "args_to_ivy"], [51, 4, 1, "", "args_to_native"], [52, 4, 1, "", "to_ivy"], [53, 4, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[63, 0, 0, "-", "activations"], [94, 0, 0, "-", "conversions"], [96, 0, 0, "-", "creation"], [98, 0, 0, "-", "data_type"], [100, 0, 0, "-", "device"], [102, 0, 0, "-", "elementwise"], [104, 0, 0, "-", "general"], [106, 0, 0, "-", "gradients"], [108, 0, 0, "-", "image"], [110, 0, 0, "-", "layers"], [112, 0, 0, "-", "linear_algebra"], [114, 0, 0, "-", "losses"], [116, 0, 0, "-", "manipulation"], [118, 0, 0, "-", "norms"], [120, 0, 0, "-", "random"], [122, 0, 0, "-", "searching"], [124, 0, 0, "-", "set"], [126, 0, 0, "-", "sorting"], [128, 0, 0, "-", "statistical"], [130, 0, 0, "-", "utility"]], "ivy.array.extensions.activations": [[64, 1, 1, "", "ArrayWithActivationsExtensions"]], "ivy.array.extensions.conversions": [[95, 1, 1, "", "ArrayWithConversionsExtensions"]], "ivy.array.extensions.creation": [[97, 1, 1, "", "ArrayWithCreationExtensions"]], "ivy.array.extensions.data_type": [[99, 1, 1, "", "ArrayWithData_typeExtensions"]], "ivy.array.extensions.device": [[101, 1, 1, "", "ArrayWithDeviceExtensions"]], "ivy.array.extensions.elementwise": [[103, 1, 1, "", "ArrayWithElementWiseExtensions"]], "ivy.array.extensions.elementwise.ArrayWithElementWiseExtensions": [[103, 2, 1, "", "exp2"], [103, 2, 1, "", "float_power"], [103, 2, 1, "", "fmax"], [103, 2, 1, "", "fmod"], [103, 2, 1, "", "gcd"], [103, 2, 1, "", "isposinf"], [103, 2, 1, "", "lcm"], [103, 2, 1, "", "nansum"], [103, 2, 1, "", "sinc"], [103, 2, 1, "", "trapz"]], "ivy.array.extensions.general": [[105, 1, 1, "", "ArrayWithGeneralExtensions"]], "ivy.array.extensions.gradients": [[107, 1, 1, "", "ArrayWithGradientsExtensions"]], "ivy.array.extensions.image": [[109, 1, 1, "", "ArrayWithImageExtension"]], "ivy.array.extensions.layers": [[111, 1, 1, "", "ArrayWithLayersExtensions"]], "ivy.array.extensions.layers.ArrayWithLayersExtensions": [[111, 2, 1, "", "flatten"], [111, 2, 1, "", "max_pool1d"], [111, 2, 1, "", "max_pool2d"], [111, 2, 1, "", "pad"]], "ivy.array.extensions.linear_algebra": [[113, 1, 1, "", "ArrayWithLinalgExtensions"]], "ivy.array.extensions.linear_algebra.ArrayWithLinalgExtensions": [[113, 2, 1, "", "diagflat"], [113, 2, 1, "", "kron"]], "ivy.array.extensions.losses": [[115, 1, 1, "", "ArrayWithLossesExtensions"]], "ivy.array.extensions.manipulation": [[117, 1, 1, "", "ArrayWithManipulationExtensions"]], "ivy.array.extensions.manipulation.ArrayWithManipulationExtensions": [[117, 2, 1, "", "fliplr"], [117, 2, 1, "", "flipud"], [117, 2, 1, "", "heaviside"], [117, 2, 1, "", "hstack"], [117, 2, 1, "", "i0"], [117, 2, 1, "", "moveaxis"], [117, 2, 1, "", "rot90"], [117, 2, 1, "", "top_k"], [117, 2, 1, "", "vstack"]], "ivy.array.extensions.norms": [[119, 1, 1, "", "ArrayWithNormsExtensions"]], "ivy.array.extensions.random": [[121, 1, 1, "", "ArrayWithRandomExtensions"]], "ivy.array.extensions.random.ArrayWithRandomExtensions": [[121, 2, 1, "", "dirichlet"]], "ivy.array.extensions.searching": [[123, 1, 1, "", "ArrayWithSearchingExtensions"]], "ivy.array.extensions.set": [[125, 1, 1, "", "ArrayWithSetExtensions"]], "ivy.array.extensions.sorting": [[127, 1, 1, "", "ArrayWithSortingExtensions"]], "ivy.array.extensions.sorting.ArrayWithSortingExtensions": [[127, 2, 1, "", "msort"]], "ivy.array.extensions.statistical": [[129, 1, 1, "", "ArrayWithStatisticalExtensions"]], "ivy.array.extensions.statistical.ArrayWithStatisticalExtensions": [[129, 2, 1, "", "median"]], "ivy.array.extensions.utility": [[131, 1, 1, "", "ArrayWithUtilityExtensions"]], "ivy.array.general": [[133, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[133, 2, 1, "", "all_equal"], [133, 2, 1, "", "array_equal"], [133, 2, 1, "", "assert_supports_inplace"], [133, 2, 1, "", "clip_matrix_norm"], [133, 2, 1, "", "clip_vector_norm"], [133, 2, 1, "", "default"], [133, 2, 1, "", "einops_rearrange"], [133, 2, 1, "", "einops_reduce"], [133, 2, 1, "", "einops_repeat"], [133, 2, 1, "", "exists"], [133, 2, 1, "", "fourier_encode"], [133, 2, 1, "", "gather"], [133, 2, 1, "", "gather_nd"], [133, 2, 1, "", "get_num_dims"], [133, 2, 1, "", "has_nans"], [133, 2, 1, "", "inplace_decrement"], [133, 2, 1, "", "inplace_increment"], [133, 2, 1, "", "inplace_update"], [133, 2, 1, "", "is_array"], [133, 2, 1, "", "is_ivy_array"], [133, 2, 1, "", "is_ivy_container"], [133, 2, 1, "", "is_native_array"], [133, 2, 1, "", "scatter_flat"], [133, 2, 1, "", "scatter_nd"], [133, 2, 1, "", "stable_divide"], [133, 2, 1, "", "stable_pow"], [133, 2, 1, "", "supports_inplace_updates"], [133, 2, 1, "", "to_list"], [133, 2, 1, "", "to_numpy"], [133, 2, 1, "", "to_scalar"], [133, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[135, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[135, 2, 1, "", "adam_step"], [135, 2, 1, "", "adam_update"], [135, 2, 1, "", "gradient_descent_update"], [135, 2, 1, "", "is_variable"], [135, 2, 1, "", "lamb_update"], [135, 2, 1, "", "lars_update"], [135, 2, 1, "", "optimizer_update"], [135, 2, 1, "", "stop_gradient"], [135, 2, 1, "", "variable"], [135, 2, 1, "", "variable_data"]], "ivy.array.image": [[137, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[139, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[139, 2, 1, "", "conv1d"], [139, 2, 1, "", "conv1d_transpose"], [139, 2, 1, "", "conv2d"], [139, 2, 1, "", "conv3d"], [139, 2, 1, "", "conv3d_transpose"], [139, 2, 1, "", "depthwise_conv2d"], [139, 2, 1, "", "dropout"], [139, 2, 1, "", "linear"], [139, 2, 1, "", "lstm_update"], [139, 2, 1, "", "multi_head_attention"], [139, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[141, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[141, 2, 1, "", "cholesky"], [141, 2, 1, "", "cross"], [141, 2, 1, "", "det"], [141, 2, 1, "", "diag"], [141, 2, 1, "", "diagonal"], [141, 2, 1, "", "eigh"], [141, 2, 1, "", "eigvalsh"], [141, 2, 1, "", "inner"], [141, 2, 1, "", "inv"], [141, 2, 1, "", "matmul"], [141, 2, 1, "", "matrix_norm"], [141, 2, 1, "", "matrix_rank"], [141, 2, 1, "", "matrix_transpose"], [141, 2, 1, "", "outer"], [141, 2, 1, "", "pinv"], [141, 2, 1, "", "qr"], [141, 2, 1, "", "slogdet"], [141, 2, 1, "", "solve"], [141, 2, 1, "", "svd"], [141, 2, 1, "", "svdvals"], [141, 2, 1, "", "tensordot"], [141, 2, 1, "", "trace"], [141, 2, 1, "", "vander"], [141, 2, 1, "", "vecdot"], [141, 2, 1, "", "vector_norm"], [141, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[143, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[143, 2, 1, "", "binary_cross_entropy"], [143, 2, 1, "", "cross_entropy"], [143, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[145, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[145, 2, 1, "", "clip"], [145, 2, 1, "", "concat"], [145, 2, 1, "", "constant_pad"], [145, 2, 1, "", "expand_dims"], [145, 2, 1, "", "flip"], [145, 2, 1, "", "permute_dims"], [145, 2, 1, "", "repeat"], [145, 2, 1, "", "reshape"], [145, 2, 1, "", "roll"], [145, 2, 1, "", "split"], [145, 2, 1, "", "squeeze"], [145, 2, 1, "", "stack"], [145, 2, 1, "", "swapaxes"], [145, 2, 1, "", "tile"], [145, 2, 1, "", "unstack"], [145, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[147, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[147, 2, 1, "", "layer_norm"]], "ivy.array.random": [[149, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[149, 2, 1, "", "multinomial"], [149, 2, 1, "", "randint"], [149, 2, 1, "", "random_normal"], [149, 2, 1, "", "random_uniform"], [149, 2, 1, "", "shuffle"]], "ivy.array.searching": [[151, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[151, 2, 1, "", "argmax"], [151, 2, 1, "", "argmin"], [151, 2, 1, "", "argwhere"], [151, 2, 1, "", "nonzero"], [151, 2, 1, "", "where"]], "ivy.array.set": [[153, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[153, 2, 1, "", "unique_all"], [153, 2, 1, "", "unique_counts"], [153, 2, 1, "", "unique_inverse"], [153, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[155, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[155, 2, 1, "", "argsort"], [155, 2, 1, "", "searchsorted"], [155, 2, 1, "", "sort"]], "ivy.array.statistical": [[157, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[157, 2, 1, "", "cumprod"], [157, 2, 1, "", "cumsum"], [157, 2, 1, "", "einsum"], [157, 2, 1, "", "max"], [157, 2, 1, "", "mean"], [157, 2, 1, "", "min"], [157, 2, 1, "", "prod"], [157, 2, 1, "", "std"], [157, 2, 1, "", "sum"], [157, 2, 1, "", "var"]], "ivy.array.utility": [[159, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[159, 2, 1, "", "all"], [159, 2, 1, "", "any"]], "ivy.array.wrapping": [[161, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [19, 0, 0, "-", "backend_handler"], [355, 0, 0, "-", "func_wrapper"], [1774, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_inplace_sizes_valid"], [14, 4, 1, "", "check_isinstance"], [15, 4, 1, "", "check_less"], [16, 4, 1, "", "check_one_way_broadcastable"], [17, 4, 1, "", "check_shape"], [18, 4, 1, "", "check_true"]], "ivy.backend_handler": [[19, 1, 1, "", "ContextManager"], [20, 4, 1, "", "choose_random_backend"], [21, 4, 1, "", "clear_backend_stack"], [22, 4, 1, "", "current_backend"], [23, 4, 1, "", "fn_name_from_version_specific_fn_name"], [24, 4, 1, "", "get_backend"], [25, 4, 1, "", "set_backend"], [26, 4, 1, "", "set_backend_to_specific_version"], [27, 4, 1, "", "set_jax_backend"], [28, 4, 1, "", "set_numpy_backend"], [29, 4, 1, "", "set_tensorflow_backend"], [30, 4, 1, "", "set_torch_backend"], [31, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[19, 2, 1, "", "__init__"]], "ivy.container": [[163, 0, 0, "-", "activations"], [165, 0, 0, "-", "base"], [167, 0, 0, "-", "container"], [169, 0, 0, "-", "conversions"], [171, 0, 0, "-", "creation"], [173, 0, 0, "-", "data_type"], [175, 0, 0, "-", "device"], [177, 0, 0, "-", "elementwise"], [179, 0, 0, "-", "extensions"], [285, 0, 0, "-", "general"], [287, 0, 0, "-", "gradients"], [289, 0, 0, "-", "image"], [291, 0, 0, "-", "layers"], [293, 0, 0, "-", "linear_algebra"], [295, 0, 0, "-", "losses"], [297, 0, 0, "-", "manipulation"], [299, 0, 0, "-", "norms"], [301, 0, 0, "-", "random"], [303, 0, 0, "-", "searching"], [305, 0, 0, "-", "set"], [307, 0, 0, "-", "sorting"], [309, 0, 0, "-", "statistical"], [311, 0, 0, "-", "utility"], [313, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[164, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[164, 2, 1, "", "gelu"], [164, 2, 1, "", "leaky_relu"], [164, 2, 1, "", "log_softmax"], [164, 2, 1, "", "relu"], [164, 2, 1, "", "sigmoid"], [164, 2, 1, "", "softmax"], [164, 2, 1, "", "softplus"], [164, 2, 1, "", "static_gelu"], [164, 2, 1, "", "static_leaky_relu"], [164, 2, 1, "", "static_log_softmax"], [164, 2, 1, "", "static_relu"], [164, 2, 1, "", "static_sigmoid"], [164, 2, 1, "", "static_softmax"], [164, 2, 1, "", "static_softplus"]], "ivy.container.base": [[166, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__init__"], [166, 2, 1, "", "__setitem__"], [166, 2, 1, "", "all_false"], [166, 2, 1, "", "all_key_chains"], [166, 2, 1, "", "all_true"], [166, 2, 1, "", "as_bools"], [166, 2, 1, "", "assert_contains_sub_container"], [166, 2, 1, "", "assert_contains_sub_structure"], [166, 2, 1, "", "assert_identical"], [166, 2, 1, "", "assert_identical_structure"], [166, 2, 1, "", "at_key_chain"], [166, 2, 1, "", "at_key_chains"], [166, 2, 1, "", "at_keys"], [166, 2, 1, "", "combine"], [166, 2, 1, "", "common_key_chains"], [166, 3, 1, "", "config"], [166, 2, 1, "", "cont_inplace_update"], [166, 2, 1, "", "contains_sub_container"], [166, 2, 1, "", "contains_sub_structure"], [166, 2, 1, "", "copy"], [166, 2, 1, "", "create_if_absent"], [166, 2, 1, "", "cutoff_at_depth"], [166, 2, 1, "", "cutoff_at_height"], [166, 2, 1, "", "deep_copy"], [166, 3, 1, "", "dev"], [166, 3, 1, "", "dev_str"], [166, 2, 1, "", "diff"], [166, 2, 1, "", "duplicate_array_keychains"], [166, 2, 1, "", "find_sub_container"], [166, 2, 1, "", "find_sub_structure"], [166, 2, 1, "", "flatten_key_chain"], [166, 2, 1, "", "flatten_key_chains"], [166, 2, 1, "", "format_key_chains"], [166, 2, 1, "", "from_disk_as_hdf5"], [166, 2, 1, "", "from_disk_as_json"], [166, 2, 1, "", "from_disk_as_pickled"], [166, 2, 1, "", "from_flat_list"], [166, 2, 1, "", "h5_file_size"], [166, 2, 1, "", "handle_inplace"], [166, 2, 1, "", "has_key"], [166, 2, 1, "", "has_key_chain"], [166, 2, 1, "", "identical"], [166, 2, 1, "", "identical_array_shapes"], [166, 2, 1, "", "identical_configs"], [166, 2, 1, "", "identical_structure"], [166, 2, 1, "", "if_exists"], [166, 3, 1, "", "ivy"], [166, 2, 1, "", "key_chains_containing"], [166, 2, 1, "", "list_join"], [166, 2, 1, "", "list_stack"], [166, 2, 1, "", "map"], [166, 2, 1, "", "map_conts"], [166, 3, 1, "", "max_depth"], [166, 2, 1, "", "multi_map"], [166, 2, 1, "", "multi_map_in_static_method"], [166, 2, 1, "", "num_arrays"], [166, 2, 1, "", "overwrite_at_key_chain"], [166, 2, 1, "", "overwrite_at_key_chains"], [166, 2, 1, "", "prune_empty"], [166, 2, 1, "", "prune_key_chain"], [166, 2, 1, "", "prune_key_chains"], [166, 2, 1, "", "prune_key_from_key_chains"], [166, 2, 1, "", "prune_keys"], [166, 2, 1, "", "prune_keys_from_key_chains"], [166, 2, 1, "", "reduce"], [166, 2, 1, "", "remove_key_length_limit"], [166, 2, 1, "", "remove_print_limit"], [166, 2, 1, "", "reshape_like"], [166, 2, 1, "", "restructure"], [166, 2, 1, "", "restructure_key_chains"], [166, 2, 1, "", "set_at_key_chain"], [166, 2, 1, "", "set_at_key_chains"], [166, 2, 1, "", "set_at_keys"], [166, 3, 1, "", "shapes"], [166, 3, 1, "", "shared_shape"], [166, 2, 1, "", "show"], [166, 2, 1, "", "show_sub_container"], [166, 2, 1, "", "shuffle_h5_file"], [166, 2, 1, "", "size_ordered_arrays"], [166, 2, 1, "", "slice_keys"], [166, 2, 1, "", "slice_via_key"], [166, 2, 1, "", "sort_by_key"], [166, 2, 1, "", "split_conts"], [166, 2, 1, "", "structural_diff"], [166, 2, 1, "", "to_dict"], [166, 2, 1, "", "to_disk_as_hdf5"], [166, 2, 1, "", "to_disk_as_json"], [166, 2, 1, "", "to_disk_as_pickled"], [166, 2, 1, "", "to_flat_list"], [166, 2, 1, "", "to_iterator"], [166, 2, 1, "", "to_iterator_keys"], [166, 2, 1, "", "to_iterator_values"], [166, 2, 1, "", "to_jsonable"], [166, 2, 1, "", "to_nested_list"], [166, 2, 1, "", "to_raw"], [166, 2, 1, "", "trim_key"], [166, 2, 1, "", "try_kc"], [166, 2, 1, "", "unify"], [166, 2, 1, "", "unstack_conts"], [166, 2, 1, "", "update_config"], [166, 2, 1, "", "with_default_key_color"], [166, 2, 1, "", "with_entries_as_lists"], [166, 2, 1, "", "with_ivy_backend"], [166, 2, 1, "", "with_key_length_limit"], [166, 2, 1, "", "with_print_indent"], [166, 2, 1, "", "with_print_limit"], [166, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[168, 1, 1, "", "Container"]], "ivy.container.container.Container": [[168, 2, 1, "", "__add__"], [168, 2, 1, "", "__init__"], [168, 2, 1, "", "__radd__"], [168, 2, 1, "", "__rrshift__"], [168, 2, 1, "", "__rshift__"], [168, 2, 1, "", "__rsub__"], [168, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[170, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[170, 2, 1, "", "static_to_ivy"], [170, 2, 1, "", "static_to_native"], [170, 2, 1, "", "to_ivy"], [170, 2, 1, "", "to_native"]], "ivy.container.creation": [[172, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[172, 2, 1, "", "empty_like"], [172, 2, 1, "", "from_dlpack"], [172, 2, 1, "", "full_like"], [172, 2, 1, "", "meshgrid"], [172, 2, 1, "", "native_array"], [172, 2, 1, "", "one_hot"], [172, 2, 1, "", "ones_like"], [172, 2, 1, "", "static_arange"], [172, 2, 1, "", "static_asarray"], [172, 2, 1, "", "static_empty_like"], [172, 2, 1, "", "static_eye"], [172, 2, 1, "", "static_from_dlpack"], [172, 2, 1, "", "static_full_like"], [172, 2, 1, "", "static_linspace"], [172, 2, 1, "", "static_logspace"], [172, 2, 1, "", "static_meshgrid"], [172, 2, 1, "", "static_native_array"], [172, 2, 1, "", "static_one_hot"], [172, 2, 1, "", "static_ones"], [172, 2, 1, "", "static_ones_like"], [172, 2, 1, "", "static_tril"], [172, 2, 1, "", "static_triu"], [172, 2, 1, "", "static_zeros"], [172, 2, 1, "", "static_zeros_like"], [172, 2, 1, "", "tril"], [172, 2, 1, "", "triu"], [172, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[174, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[174, 2, 1, "", "astype"], [174, 2, 1, "", "broadcast_arrays"], [174, 2, 1, "", "broadcast_to"], [174, 2, 1, "", "can_cast"], [174, 2, 1, "", "dtype"], [174, 2, 1, "", "finfo"], [174, 2, 1, "", "iinfo"], [174, 2, 1, "", "is_bool_dtype"], [174, 2, 1, "", "is_float_dtype"], [174, 2, 1, "", "is_int_dtype"], [174, 2, 1, "", "is_uint_dtype"], [174, 2, 1, "", "result_type"], [174, 2, 1, "", "static_astype"], [174, 2, 1, "", "static_broadcast_arrays"], [174, 2, 1, "", "static_broadcast_to"], [174, 2, 1, "", "static_can_cast"], [174, 2, 1, "", "static_default_float_dtype"], [174, 2, 1, "", "static_dtype"], [174, 2, 1, "", "static_finfo"], [174, 2, 1, "", "static_function_supported_dtypes"], [174, 2, 1, "", "static_function_unsupported_dtypes"], [174, 2, 1, "", "static_iinfo"], [174, 2, 1, "", "static_is_bool_dtype"], [174, 2, 1, "", "static_is_float_dtype"], [174, 2, 1, "", "static_is_int_dtype"], [174, 2, 1, "", "static_is_uint_dtype"], [174, 2, 1, "", "static_result_type"]], "ivy.container.device": [[176, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[176, 2, 1, "", "dev"], [176, 2, 1, "", "static_dev"], [176, 2, 1, "", "static_to_device"], [176, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[178, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[178, 2, 1, "", "abs"], [178, 2, 1, "", "acos"], [178, 2, 1, "", "acosh"], [178, 2, 1, "", "add"], [178, 2, 1, "", "asin"], [178, 2, 1, "", "asinh"], [178, 2, 1, "", "atan"], [178, 2, 1, "", "atan2"], [178, 2, 1, "", "atanh"], [178, 2, 1, "", "bitwise_and"], [178, 2, 1, "", "bitwise_invert"], [178, 2, 1, "", "bitwise_left_shift"], [178, 2, 1, "", "bitwise_or"], [178, 2, 1, "", "bitwise_right_shift"], [178, 2, 1, "", "bitwise_xor"], [178, 2, 1, "", "ceil"], [178, 2, 1, "", "cos"], [178, 2, 1, "", "cosh"], [178, 2, 1, "", "deg2rad"], [178, 2, 1, "", "divide"], [178, 2, 1, "", "equal"], [178, 2, 1, "", "erf"], [178, 2, 1, "", "exp"], [178, 2, 1, "", "expm1"], [178, 2, 1, "", "floor"], [178, 2, 1, "", "floor_divide"], [178, 2, 1, "", "greater"], [178, 2, 1, "", "greater_equal"], [178, 2, 1, "", "isfinite"], [178, 2, 1, "", "isinf"], [178, 2, 1, "", "isnan"], [178, 2, 1, "", "isreal"], [178, 2, 1, "", "less"], [178, 2, 1, "", "less_equal"], [178, 2, 1, "", "log"], [178, 2, 1, "", "log10"], [178, 2, 1, "", "log1p"], [178, 2, 1, "", "log2"], [178, 2, 1, "", "logaddexp"], [178, 2, 1, "", "logical_and"], [178, 2, 1, "", "logical_not"], [178, 2, 1, "", "logical_or"], [178, 2, 1, "", "logical_xor"], [178, 2, 1, "", "maximum"], [178, 2, 1, "", "minimum"], [178, 2, 1, "", "multiply"], [178, 2, 1, "", "negative"], [178, 2, 1, "", "not_equal"], [178, 2, 1, "", "positive"], [178, 2, 1, "", "pow"], [178, 2, 1, "", "rad2deg"], [178, 2, 1, "", "reciprocal"], [178, 2, 1, "", "remainder"], [178, 2, 1, "", "round"], [178, 2, 1, "", "sign"], [178, 2, 1, "", "sin"], [178, 2, 1, "", "sinh"], [178, 2, 1, "", "sqrt"], [178, 2, 1, "", "square"], [178, 2, 1, "", "static_abs"], [178, 2, 1, "", "static_acos"], [178, 2, 1, "", "static_acosh"], [178, 2, 1, "", "static_add"], [178, 2, 1, "", "static_asin"], [178, 2, 1, "", "static_asinh"], [178, 2, 1, "", "static_atan"], [178, 2, 1, "", "static_atan2"], [178, 2, 1, "", "static_atanh"], [178, 2, 1, "", "static_bitwise_and"], [178, 2, 1, "", "static_bitwise_invert"], [178, 2, 1, "", "static_bitwise_left_shift"], [178, 2, 1, "", "static_bitwise_or"], [178, 2, 1, "", "static_bitwise_right_shift"], [178, 2, 1, "", "static_bitwise_xor"], [178, 2, 1, "", "static_ceil"], [178, 2, 1, "", "static_cos"], [178, 2, 1, "", "static_cosh"], [178, 2, 1, "", "static_deg2rad"], [178, 2, 1, "", "static_divide"], [178, 2, 1, "", "static_equal"], [178, 2, 1, "", "static_erf"], [178, 2, 1, "", "static_exp"], [178, 2, 1, "", "static_expm1"], [178, 2, 1, "", "static_floor"], [178, 2, 1, "", "static_floor_divide"], [178, 2, 1, "", "static_greater"], [178, 2, 1, "", "static_greater_equal"], [178, 2, 1, "", "static_isfinite"], [178, 2, 1, "", "static_isinf"], [178, 2, 1, "", "static_isnan"], [178, 2, 1, "", "static_isreal"], [178, 2, 1, "", "static_less"], [178, 2, 1, "", "static_less_equal"], [178, 2, 1, "", "static_log"], [178, 2, 1, "", "static_log10"], [178, 2, 1, "", "static_log1p"], [178, 2, 1, "", "static_log2"], [178, 2, 1, "", "static_logaddexp"], [178, 2, 1, "", "static_logical_and"], [178, 2, 1, "", "static_logical_not"], [178, 2, 1, "", "static_logical_or"], [178, 2, 1, "", "static_logical_xor"], [178, 2, 1, "", "static_maximum"], [178, 2, 1, "", "static_minimum"], [178, 2, 1, "", "static_multiply"], [178, 2, 1, "", "static_negative"], [178, 2, 1, "", "static_not_equal"], [178, 2, 1, "", "static_positive"], [178, 2, 1, "", "static_pow"], [178, 2, 1, "", "static_rad2deg"], [178, 2, 1, "", "static_reciprocal"], [178, 2, 1, "", "static_remainder"], [178, 2, 1, "", "static_round"], [178, 2, 1, "", "static_sign"], [178, 2, 1, "", "static_sin"], [178, 2, 1, "", "static_sinh"], [178, 2, 1, "", "static_sqrt"], [178, 2, 1, "", "static_square"], [178, 2, 1, "", "static_subtract"], [178, 2, 1, "", "static_tan"], [178, 2, 1, "", "static_tanh"], [178, 2, 1, "", "static_trapz"], [178, 2, 1, "", "static_trunc"], [178, 2, 1, "", "static_trunc_divide"], [178, 2, 1, "", "subtract"], [178, 2, 1, "", "tan"], [178, 2, 1, "", "tanh"], [178, 2, 1, "", "trapz"], [178, 2, 1, "", "trunc"], [178, 2, 1, "", "trunc_divide"]], "ivy.container.extensions": [[180, 0, 0, "-", "activations"], [247, 0, 0, "-", "conversions"], [249, 0, 0, "-", "creation"], [251, 0, 0, "-", "data_type"], [253, 0, 0, "-", "device"], [255, 0, 0, "-", "elementwise"], [257, 0, 0, "-", "general"], [259, 0, 0, "-", "gradients"], [261, 0, 0, "-", "image"], [263, 0, 0, "-", "layers"], [265, 0, 0, "-", "linear_algebra"], [267, 0, 0, "-", "losses"], [269, 0, 0, "-", "manipulation"], [271, 0, 0, "-", "norms"], [273, 0, 0, "-", "random"], [275, 0, 0, "-", "searching"], [277, 0, 0, "-", "set"], [279, 0, 0, "-", "sorting"], [281, 0, 0, "-", "statistical"], [283, 0, 0, "-", "utility"]], "ivy.container.extensions.activations": [[181, 1, 1, "", "ContainerWithActivationExtensions"]], "ivy.container.extensions.conversions": [[248, 1, 1, "", "ContainerWithConversionExtensions"]], "ivy.container.extensions.creation": [[250, 1, 1, "", "ContainerWithCreationExtensions"]], "ivy.container.extensions.creation.ContainerWithCreationExtensions": [[250, 2, 1, "", "static_triu_indices"], [250, 2, 1, "", "triu_indices"]], "ivy.container.extensions.data_type": [[252, 1, 1, "", "ContainerWithData_typeExtensions"]], "ivy.container.extensions.device": [[254, 1, 1, "", "ContainerWithDeviceExtensions"]], "ivy.container.extensions.elementwise": [[256, 1, 1, "", "ContainerWithElementWiseExtensions"]], "ivy.container.extensions.elementwise.ContainerWithElementWiseExtensions": [[256, 2, 1, "", "exp2"], [256, 2, 1, "", "float_power"], [256, 2, 1, "", "fmax"], [256, 2, 1, "", "fmod"], [256, 2, 1, "", "gcd"], [256, 2, 1, "", "isposinf"], [256, 2, 1, "", "lcm"], [256, 2, 1, "", "nansum"], [256, 2, 1, "", "sinc"], [256, 2, 1, "", "static_exp2"], [256, 2, 1, "", "static_float_power"], [256, 2, 1, "", "static_fmax"], [256, 2, 1, "", "static_fmod"], [256, 2, 1, "", "static_gcd"], [256, 2, 1, "", "static_isposinf"], [256, 2, 1, "", "static_lcm"], [256, 2, 1, "", "static_nansum"], [256, 2, 1, "", "static_sinc"]], "ivy.container.extensions.general": [[258, 1, 1, "", "ContainerWithGeneralExtensions"]], "ivy.container.extensions.gradients": [[260, 1, 1, "", "ContainerWithGradientsExtensions"]], "ivy.container.extensions.image": [[262, 1, 1, "", "ContainerWithImageExtensions"]], "ivy.container.extensions.layers": [[264, 1, 1, "", "ContainerWithLayersExtensions"]], "ivy.container.extensions.layers.ContainerWithLayersExtensions": [[264, 2, 1, "", "flatten"], [264, 2, 1, "", "hamming_window"], [264, 2, 1, "", "hann_window"], [264, 2, 1, "", "kaiser_bessel_derived_window"], [264, 2, 1, "", "kaiser_window"], [264, 2, 1, "", "max_pool1d"], [264, 2, 1, "", "max_pool2d"], [264, 2, 1, "", "pad"], [264, 2, 1, "", "static_flatten"], [264, 2, 1, "", "static_hamming_window"], [264, 2, 1, "", "static_hann_window"], [264, 2, 1, "", "static_kaiser_bessel_derived_window"], [264, 2, 1, "", "static_kaiser_window"], [264, 2, 1, "", "static_max_pool1d"], [264, 2, 1, "", "static_max_pool2d"], [264, 2, 1, "", "static_pad"]], "ivy.container.extensions.linear_algebra": [[266, 1, 1, "", "ContainerWithLinalgExtensions"]], "ivy.container.extensions.linear_algebra.ContainerWithLinalgExtensions": [[266, 2, 1, "", "diagflat"], [266, 2, 1, "", "kron"], [266, 2, 1, "", "static_diagflat"], [266, 2, 1, "", "static_kron"]], "ivy.container.extensions.losses": [[268, 1, 1, "", "ContainerWithLossesExtensions"]], "ivy.container.extensions.manipulation": [[270, 1, 1, "", "ContainerWithManipulationExtensions"]], "ivy.container.extensions.manipulation.ContainerWithManipulationExtensions": [[270, 2, 1, "", "fliplr"], [270, 2, 1, "", "flipud"], [270, 2, 1, "", "heaviside"], [270, 2, 1, "", "hstack"], [270, 2, 1, "", "i0"], [270, 2, 1, "", "moveaxis"], [270, 2, 1, "", "rot90"], [270, 2, 1, "", "static_fliplr"], [270, 2, 1, "", "static_flipud"], [270, 2, 1, "", "static_heaviside"], [270, 2, 1, "", "static_hstack"], [270, 2, 1, "", "static_i0"], [270, 2, 1, "", "static_moveaxis"], [270, 2, 1, "", "static_rot90"], [270, 2, 1, "", "static_top_k"], [270, 2, 1, "", "static_vstack"], [270, 2, 1, "", "top_k"], [270, 2, 1, "", "vstack"]], "ivy.container.extensions.norms": [[272, 1, 1, "", "ContainerWithNormsExtensions"]], "ivy.container.extensions.random": [[274, 1, 1, "", "ContainerWithRandomExtensions"]], "ivy.container.extensions.random.ContainerWithRandomExtensions": [[274, 2, 1, "", "dirichlet"], [274, 2, 1, "", "static_dirichlet"]], "ivy.container.extensions.searching": [[276, 1, 1, "", "ContainerWithSearchingExtensions"]], "ivy.container.extensions.set": [[278, 1, 1, "", "ContainerWithSetExtensions"]], "ivy.container.extensions.sorting": [[280, 1, 1, "", "ContainerWithSortingExtensions"]], "ivy.container.extensions.sorting.ContainerWithSortingExtensions": [[280, 2, 1, "", "msort"], [280, 2, 1, "", "static_msort"]], "ivy.container.extensions.statistical": [[282, 1, 1, "", "ContainerWithStatisticalExtensions"]], "ivy.container.extensions.statistical.ContainerWithStatisticalExtensions": [[282, 2, 1, "", "median"], [282, 2, 1, "", "static_median"]], "ivy.container.extensions.utility": [[284, 1, 1, "", "ContainerWithUtilityExtensions"]], "ivy.container.general": [[286, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[286, 2, 1, "", "all_equal"], [286, 2, 1, "", "assert_supports_inplace"], [286, 2, 1, "", "clip_matrix_norm"], [286, 2, 1, "", "clip_vector_norm"], [286, 2, 1, "", "einops_rearrange"], [286, 2, 1, "", "einops_reduce"], [286, 2, 1, "", "einops_repeat"], [286, 2, 1, "", "fourier_encode"], [286, 2, 1, "", "gather"], [286, 2, 1, "", "gather_nd"], [286, 2, 1, "", "get_num_dims"], [286, 2, 1, "", "has_nans"], [286, 2, 1, "", "inplace_decrement"], [286, 2, 1, "", "inplace_increment"], [286, 2, 1, "", "inplace_update"], [286, 2, 1, "", "is_array"], [286, 2, 1, "", "is_ivy_array"], [286, 2, 1, "", "is_ivy_container"], [286, 2, 1, "", "is_native_array"], [286, 2, 1, "", "scatter_flat"], [286, 2, 1, "", "scatter_nd"], [286, 2, 1, "", "stable_divide"], [286, 2, 1, "", "stable_pow"], [286, 2, 1, "", "static_all_equal"], [286, 2, 1, "", "static_assert_supports_inplace"], [286, 2, 1, "", "static_clip_matrix_norm"], [286, 2, 1, "", "static_clip_vector_norm"], [286, 2, 1, "", "static_einops_rearrange"], [286, 2, 1, "", "static_einops_reduce"], [286, 2, 1, "", "static_einops_repeat"], [286, 2, 1, "", "static_fourier_encode"], [286, 2, 1, "", "static_gather"], [286, 2, 1, "", "static_gather_nd"], [286, 2, 1, "", "static_get_num_dims"], [286, 2, 1, "", "static_has_nans"], [286, 2, 1, "", "static_inplace_decrement"], [286, 2, 1, "", "static_inplace_increment"], [286, 2, 1, "", "static_inplace_update"], [286, 2, 1, "", "static_is_array"], [286, 2, 1, "", "static_is_ivy_array"], [286, 2, 1, "", "static_is_ivy_container"], [286, 2, 1, "", "static_is_native_array"], [286, 2, 1, "", "static_scatter_flat"], [286, 2, 1, "", "static_scatter_nd"], [286, 2, 1, "", "static_stable_divide"], [286, 2, 1, "", "static_stable_pow"], [286, 2, 1, "", "static_supports_inplace_updates"], [286, 2, 1, "", "static_to_list"], [286, 2, 1, "", "static_to_numpy"], [286, 2, 1, "", "static_to_scalar"], [286, 2, 1, "", "static_value_is_nan"], [286, 2, 1, "", "supports_inplace_updates"], [286, 2, 1, "", "to_list"], [286, 2, 1, "", "to_numpy"], [286, 2, 1, "", "to_scalar"], [286, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[288, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[288, 2, 1, "", "adam_step"], [288, 2, 1, "", "adam_update"], [288, 2, 1, "", "gradient_descent_update"], [288, 2, 1, "", "is_variable"], [288, 2, 1, "", "lamb_update"], [288, 2, 1, "", "lars_update"], [288, 2, 1, "", "optimizer_update"], [288, 2, 1, "", "static_is_variable"], [288, 2, 1, "", "static_stop_gradient"], [288, 2, 1, "", "static_variable"], [288, 2, 1, "", "static_variable_data"], [288, 2, 1, "", "stop_gradient"], [288, 2, 1, "", "variable"], [288, 2, 1, "", "variable_data"]], "ivy.container.image": [[290, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[292, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[292, 2, 1, "", "conv1d"], [292, 2, 1, "", "conv1d_transpose"], [292, 2, 1, "", "conv2d"], [292, 2, 1, "", "conv2d_transpose"], [292, 2, 1, "", "conv3d"], [292, 2, 1, "", "conv3d_transpose"], [292, 2, 1, "", "depthwise_conv2d"], [292, 2, 1, "", "dropout"], [292, 2, 1, "", "linear"], [292, 2, 1, "", "lstm_update"], [292, 2, 1, "", "multi_head_attention"], [292, 2, 1, "", "scaled_dot_product_attention"], [292, 2, 1, "", "static_conv1d"], [292, 2, 1, "", "static_conv1d_transpose"], [292, 2, 1, "", "static_conv2d"], [292, 2, 1, "", "static_conv2d_transpose"], [292, 2, 1, "", "static_conv3d"], [292, 2, 1, "", "static_conv3d_transpose"], [292, 2, 1, "", "static_depthwise_conv2d"], [292, 2, 1, "", "static_dropout"], [292, 2, 1, "", "static_linear"], [292, 2, 1, "", "static_lstm_update"], [292, 2, 1, "", "static_multi_head_attention"], [292, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[294, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[294, 2, 1, "", "cholesky"], [294, 2, 1, "", "cross"], [294, 2, 1, "", "det"], [294, 2, 1, "", "diag"], [294, 2, 1, "", "diagonal"], [294, 2, 1, "", "eigh"], [294, 2, 1, "", "inner"], [294, 2, 1, "", "inv"], [294, 2, 1, "", "matmul"], [294, 2, 1, "", "matrix_norm"], [294, 2, 1, "", "matrix_power"], [294, 2, 1, "", "matrix_rank"], [294, 2, 1, "", "matrix_transpose"], [294, 2, 1, "", "outer"], [294, 2, 1, "", "pinv"], [294, 2, 1, "", "qr"], [294, 2, 1, "", "slogdet"], [294, 2, 1, "", "solve"], [294, 2, 1, "", "static_cholesky"], [294, 2, 1, "", "static_cross"], [294, 2, 1, "", "static_det"], [294, 2, 1, "", "static_diag"], [294, 2, 1, "", "static_diagonal"], [294, 2, 1, "", "static_inner"], [294, 2, 1, "", "static_inv"], [294, 2, 1, "", "static_matmul"], [294, 2, 1, "", "static_matrix_norm"], [294, 2, 1, "", "static_matrix_power"], [294, 2, 1, "", "static_matrix_rank"], [294, 2, 1, "", "static_matrix_transpose"], [294, 2, 1, "", "static_outer"], [294, 2, 1, "", "static_pinv"], [294, 2, 1, "", "static_qr"], [294, 2, 1, "", "static_slogdet"], [294, 2, 1, "", "static_solve"], [294, 2, 1, "", "static_svd"], [294, 2, 1, "", "static_svdvals"], [294, 2, 1, "", "static_tensordot"], [294, 2, 1, "", "static_trace"], [294, 2, 1, "", "static_vander"], [294, 2, 1, "", "static_vecdot"], [294, 2, 1, "", "static_vector_norm"], [294, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [294, 2, 1, "", "svd"], [294, 2, 1, "", "svdvals"], [294, 2, 1, "", "tensordot"], [294, 2, 1, "", "trace"], [294, 2, 1, "", "vander"], [294, 2, 1, "", "vecdot"], [294, 2, 1, "", "vector_norm"], [294, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[296, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[296, 2, 1, "", "binary_cross_entropy"], [296, 2, 1, "", "cross_entropy"], [296, 2, 1, "", "sparse_cross_entropy"], [296, 2, 1, "", "static_binary_cross_entropy"], [296, 2, 1, "", "static_cross_entropy"], [296, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[298, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[298, 2, 1, "", "clip"], [298, 2, 1, "", "concat"], [298, 2, 1, "", "constant_pad"], [298, 2, 1, "", "expand_dims"], [298, 2, 1, "", "flip"], [298, 2, 1, "", "permute_dims"], [298, 2, 1, "", "repeat"], [298, 2, 1, "", "reshape"], [298, 2, 1, "", "roll"], [298, 2, 1, "", "split"], [298, 2, 1, "", "squeeze"], [298, 2, 1, "", "stack"], [298, 2, 1, "", "static_clip"], [298, 2, 1, "", "static_concat"], [298, 2, 1, "", "static_constant_pad"], [298, 2, 1, "", "static_expand_dims"], [298, 2, 1, "", "static_flip"], [298, 2, 1, "", "static_permute_dims"], [298, 2, 1, "", "static_repeat"], [298, 2, 1, "", "static_reshape"], [298, 2, 1, "", "static_roll"], [298, 2, 1, "", "static_split"], [298, 2, 1, "", "static_squeeze"], [298, 2, 1, "", "static_stack"], [298, 2, 1, "", "static_swapaxes"], [298, 2, 1, "", "static_tile"], [298, 2, 1, "", "static_unstack"], [298, 2, 1, "", "static_zero_pad"], [298, 2, 1, "", "swapaxes"], [298, 2, 1, "", "tile"], [298, 2, 1, "", "unstack"], [298, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[300, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[300, 2, 1, "", "layer_norm"]], "ivy.container.random": [[302, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[302, 2, 1, "", "multinomial"], [302, 2, 1, "", "randint"], [302, 2, 1, "", "random_normal"], [302, 2, 1, "", "random_uniform"], [302, 2, 1, "", "shuffle"], [302, 2, 1, "", "static_multinomial"], [302, 2, 1, "", "static_randint"], [302, 2, 1, "", "static_random_normal"], [302, 2, 1, "", "static_random_uniform"], [302, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[304, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[304, 2, 1, "", "argmax"], [304, 2, 1, "", "argmin"], [304, 2, 1, "", "argwhere"], [304, 2, 1, "", "nonzero"], [304, 2, 1, "", "static_argmax"], [304, 2, 1, "", "static_argmin"], [304, 2, 1, "", "static_argwhere"], [304, 2, 1, "", "static_nonzero"], [304, 2, 1, "", "static_where"], [304, 2, 1, "", "where"]], "ivy.container.set": [[306, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[306, 2, 1, "", "static_unique_all"], [306, 2, 1, "", "static_unique_counts"], [306, 2, 1, "", "static_unique_inverse"], [306, 2, 1, "", "static_unique_values"], [306, 2, 1, "", "unique_all"], [306, 2, 1, "", "unique_counts"], [306, 2, 1, "", "unique_inverse"], [306, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[308, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[308, 2, 1, "", "argsort"], [308, 2, 1, "", "searchsorted"], [308, 2, 1, "", "sort"], [308, 2, 1, "", "static_argsort"], [308, 2, 1, "", "static_searchsorted"], [308, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[310, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[310, 2, 1, "", "cumprod"], [310, 2, 1, "", "cumsum"], [310, 2, 1, "", "einsum"], [310, 2, 1, "", "max"], [310, 2, 1, "", "mean"], [310, 2, 1, "", "min"], [310, 2, 1, "", "prod"], [310, 2, 1, "", "static_cumprod"], [310, 2, 1, "", "static_cumsum"], [310, 2, 1, "", "static_sum"], [310, 2, 1, "", "static_var"], [310, 2, 1, "", "std"], [310, 2, 1, "", "sum"], [310, 2, 1, "", "var"]], "ivy.container.utility": [[312, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[312, 2, 1, "", "all"], [312, 2, 1, "", "any"], [312, 2, 1, "", "static_all"], [312, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[314, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[356, 4, 1, "", "from_zero_dim_arrays_to_float"], [357, 4, 1, "", "handle_nestable"], [358, 4, 1, "", "handle_out_argument"], [359, 4, 1, "", "infer_device"], [360, 4, 1, "", "infer_dtype"], [361, 4, 1, "", "inputs_to_ivy_arrays"], [362, 4, 1, "", "inputs_to_native_arrays"], [363, 4, 1, "", "integer_arrays_to_float"], [364, 4, 1, "", "outputs_to_ivy_arrays"], [365, 4, 1, "", "to_native_arrays_and_back"], [355, 4, 1, "", "with_supported_device_and_dtypes"], [355, 4, 1, "", "with_supported_devices"], [355, 4, 1, "", "with_supported_dtypes"], [355, 4, 1, "", "with_unsupported_device_and_dtypes"], [355, 4, 1, "", "with_unsupported_devices"], [355, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional": [[366, 0, 0, "-", "extensions"]], "ivy.functional.extensions": [[367, 0, 0, "-", "activations"], [368, 0, 0, "-", "compilation"], [369, 0, 0, "-", "constants"], [370, 0, 0, "-", "creation"], [372, 0, 0, "-", "data_type"], [373, 0, 0, "-", "device"], [374, 0, 0, "-", "elementwise"], [385, 0, 0, "-", "general"], [386, 0, 0, "-", "gradients"], [387, 0, 0, "-", "layers"], [396, 0, 0, "-", "linear_algebra"], [399, 0, 0, "-", "losses"], [400, 0, 0, "-", "manipulation"], [413, 0, 0, "-", "meta"], [414, 0, 0, "-", "nest"], [415, 0, 0, "-", "norms"], [416, 0, 0, "-", "random"], [418, 0, 0, "-", "searching"], [419, 0, 0, "-", "set"], [420, 0, 0, "-", "sorting"], [422, 0, 0, "-", "sparse_array"], [427, 0, 0, "-", "statistical"], [429, 0, 0, "-", "utility"]], "ivy.functional.extensions.creation": [[371, 4, 1, "", "triu_indices"]], "ivy.functional.extensions.elementwise": [[375, 4, 1, "", "exp2"], [376, 4, 1, "", "float_power"], [377, 4, 1, "", "fmax"], [378, 4, 1, "", "fmod"], [379, 4, 1, "", "gcd"], [380, 4, 1, "", "isposinf"], [381, 4, 1, "", "lcm"], [382, 4, 1, "", "nansum"], [383, 4, 1, "", "sinc"], [384, 4, 1, "", "trapz"]], "ivy.functional.extensions.layers": [[388, 4, 1, "", "hamming_window"], [389, 4, 1, "", "hann_window"], [390, 4, 1, "", "kaiser_bessel_derived_window"], [391, 4, 1, "", "kaiser_window"], [392, 4, 1, "", "max_pool1d"], [393, 4, 1, "", "max_pool2d"], [394, 4, 1, "", "pad"], [395, 4, 1, "", "vorbis_window"]], "ivy.functional.extensions.linear_algebra": [[397, 4, 1, "", "diagflat"], [398, 4, 1, "", "kron"]], "ivy.functional.extensions.manipulation": [[401, 4, 1, "", "flatten"], [402, 4, 1, "", "fliplr"], [403, 4, 1, "", "flipud"], [404, 4, 1, "", "heaviside"], [405, 4, 1, "", "hstack"], [406, 4, 1, "", "i0"], [407, 4, 1, "", "moveaxis"], [408, 4, 1, "", "ndenumerate"], [409, 4, 1, "", "ndindex"], [410, 4, 1, "", "rot90"], [411, 4, 1, "", "top_k"], [412, 4, 1, "", "vstack"]], "ivy.functional.extensions.random": [[417, 4, 1, "", "dirichlet"]], "ivy.functional.extensions.sorting": [[421, 4, 1, "", "msort"]], "ivy.functional.extensions.sparse_array": [[422, 1, 1, "", "NativeSparseArray"], [422, 1, 1, "", "SparseArray"], [423, 4, 1, "", "is_ivy_sparse_array"], [424, 4, 1, "", "is_native_sparse_array"], [425, 4, 1, "", "native_sparse_array"], [426, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.extensions.sparse_array.SparseArray": [[422, 2, 1, "", "__init__"], [422, 3, 1, "", "coo_indices"], [422, 3, 1, "", "csr_col_indices"], [422, 3, 1, "", "csr_crow_indices"], [422, 3, 1, "", "data"], [422, 3, 1, "", "dense_shape"], [422, 2, 1, "", "to_dense_array"], [422, 3, 1, "", "values"]], "ivy.functional.extensions.statistical": [[428, 4, 1, "", "median"]], "ivy.functional.ivy": [[431, 0, 0, "-", "activations"], [467, 0, 0, "-", "compilation"], [469, 0, 0, "-", "constants"], [470, 0, 0, "-", "creation"], [552, 0, 0, "-", "data_type"], [643, 0, 0, "-", "device"], [677, 0, 0, "-", "elementwise"], [999, 0, 0, "-", "general"], [1193, 0, 0, "-", "gradients"], [1245, 0, 0, "-", "layers"], [1311, 0, 0, "-", "linear_algebra"], [1443, 0, 0, "-", "losses"], [1459, 0, 0, "-", "manipulation"], [1540, 0, 0, "-", "meta"], [1544, 0, 0, "-", "nest"], [1562, 0, 0, "-", "norms"], [1567, 0, 0, "-", "random"], [1594, 0, 0, "-", "searching"], [1620, 0, 0, "-", "set"], [1641, 0, 0, "-", "sorting"], [1657, 0, 0, "-", "statistical"], [1702, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[435, 4, 1, "", "gelu"], [440, 4, 1, "", "leaky_relu"], [445, 4, 1, "", "log_softmax"], [450, 4, 1, "", "relu"], [455, 4, 1, "", "sigmoid"], [460, 4, 1, "", "softmax"], [465, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[468, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[469, 5, 1, "", "e"], [469, 5, 1, "", "inf"], [469, 5, 1, "", "nan"], [469, 5, 1, "", "newaxis"], [469, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[471, 1, 1, "", "NestedSequence"], [473, 4, 1, "", "arange"], [470, 4, 1, "", "array"], [477, 4, 1, "", "asarray"], [479, 4, 1, "", "asarray_handle_nestable"], [480, 4, 1, "", "asarray_infer_device"], [481, 4, 1, "", "asarray_to_native_arrays_and_back"], [484, 4, 1, "", "copy_array"], [485, 4, 1, "", "empty"], [489, 4, 1, "", "empty_like"], [492, 4, 1, "", "eye"], [497, 4, 1, "", "from_dlpack"], [499, 4, 1, "", "full"], [503, 4, 1, "", "full_like"], [506, 4, 1, "", "linspace"], [509, 4, 1, "", "logspace"], [514, 4, 1, "", "meshgrid"], [519, 4, 1, "", "native_array"], [524, 4, 1, "", "one_hot"], [527, 4, 1, "", "ones"], [532, 4, 1, "", "ones_like"], [538, 4, 1, "", "tril"], [543, 4, 1, "", "triu"], [546, 4, 1, "", "zeros"], [551, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[471, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[552, 1, 1, "", "DefaultDtype"], [552, 1, 1, "", "DefaultFloatDtype"], [552, 1, 1, "", "DefaultIntDtype"], [552, 1, 1, "", "DefaultUintDtype"], [553, 4, 1, "", "as_ivy_dtype"], [554, 4, 1, "", "as_native_dtype"], [558, 4, 1, "", "astype"], [563, 4, 1, "", "broadcast_arrays"], [568, 4, 1, "", "broadcast_to"], [573, 4, 1, "", "can_cast"], [575, 4, 1, "", "check_float"], [576, 4, 1, "", "closest_valid_dtype"], [577, 4, 1, "", "default_dtype"], [579, 4, 1, "", "default_float_dtype"], [581, 4, 1, "", "default_int_dtype"], [582, 4, 1, "", "default_uint_dtype"], [585, 4, 1, "", "dtype"], [587, 4, 1, "", "dtype_bits"], [591, 4, 1, "", "finfo"], [594, 4, 1, "", "function_supported_dtypes"], [597, 4, 1, "", "function_unsupported_dtypes"], [602, 4, 1, "", "iinfo"], [604, 4, 1, "", "infer_default_dtype"], [605, 4, 1, "", "invalid_dtype"], [609, 4, 1, "", "is_bool_dtype"], [614, 4, 1, "", "is_float_dtype"], [619, 4, 1, "", "is_int_dtype"], [624, 4, 1, "", "is_uint_dtype"], [626, 4, 1, "", "promote_types"], [627, 4, 1, "", "promote_types_of_inputs"], [631, 4, 1, "", "result_type"], [633, 4, 1, "", "set_default_dtype"], [634, 4, 1, "", "set_default_float_dtype"], [635, 4, 1, "", "set_default_int_dtype"], [636, 4, 1, "", "set_default_uint_dtype"], [637, 4, 1, "", "type_promote_arrays"], [638, 4, 1, "", "unset_default_dtype"], [639, 4, 1, "", "unset_default_float_dtype"], [640, 4, 1, "", "unset_default_int_dtype"], [641, 4, 1, "", "unset_default_uint_dtype"], [642, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[552, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[552, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[552, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[552, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[643, 1, 1, "", "DefaultDevice"], [644, 1, 1, "", "Profiler"], [645, 4, 1, "", "as_ivy_dev"], [646, 4, 1, "", "as_native_dev"], [647, 4, 1, "", "clear_mem_on_dev"], [648, 4, 1, "", "default_device"], [652, 4, 1, "", "dev"], [654, 4, 1, "", "dev_util"], [655, 4, 1, "", "function_supported_devices"], [656, 4, 1, "", "function_unsupported_devices"], [657, 4, 1, "", "get_all_ivy_arrays_on_dev"], [658, 4, 1, "", "gpu_is_available"], [659, 4, 1, "", "num_cpu_cores"], [660, 4, 1, "", "num_gpus"], [661, 4, 1, "", "num_ivy_arrays_on_dev"], [662, 4, 1, "", "percent_used_mem_on_dev"], [663, 4, 1, "", "print_all_ivy_arrays_on_dev"], [664, 4, 1, "", "set_default_device"], [665, 4, 1, "", "set_split_factor"], [666, 4, 1, "", "split_factor"], [667, 4, 1, "", "split_func_call"], [672, 4, 1, "", "to_device"], [673, 4, 1, "", "total_mem_on_dev"], [674, 4, 1, "", "tpu_is_available"], [675, 4, 1, "", "unset_default_device"], [676, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[643, 2, 1, "", "__enter__"], [643, 2, 1, "", "__exit__"], [643, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[644, 2, 1, "", "__init__"], [644, 2, 1, "", "start"], [644, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[681, 4, 1, "", "abs"], [686, 4, 1, "", "acos"], [691, 4, 1, "", "acosh"], [696, 4, 1, "", "add"], [701, 4, 1, "", "asin"], [706, 4, 1, "", "asinh"], [711, 4, 1, "", "atan"], [716, 4, 1, "", "atan2"], [721, 4, 1, "", "atanh"], [726, 4, 1, "", "bitwise_and"], [731, 4, 1, "", "bitwise_invert"], [736, 4, 1, "", "bitwise_left_shift"], [741, 4, 1, "", "bitwise_or"], [746, 4, 1, "", "bitwise_right_shift"], [751, 4, 1, "", "bitwise_xor"], [756, 4, 1, "", "ceil"], [761, 4, 1, "", "cos"], [766, 4, 1, "", "cosh"], [771, 4, 1, "", "deg2rad"], [776, 4, 1, "", "divide"], [781, 4, 1, "", "equal"], [786, 4, 1, "", "erf"], [791, 4, 1, "", "exp"], [796, 4, 1, "", "expm1"], [801, 4, 1, "", "floor"], [806, 4, 1, "", "floor_divide"], [811, 4, 1, "", "greater"], [816, 4, 1, "", "greater_equal"], [821, 4, 1, "", "isfinite"], [826, 4, 1, "", "isinf"], [831, 4, 1, "", "isnan"], [836, 4, 1, "", "isreal"], [841, 4, 1, "", "less"], [846, 4, 1, "", "less_equal"], [851, 4, 1, "", "log"], [856, 4, 1, "", "log10"], [861, 4, 1, "", "log1p"], [866, 4, 1, "", "log2"], [871, 4, 1, "", "logaddexp"], [876, 4, 1, "", "logical_and"], [881, 4, 1, "", "logical_not"], [886, 4, 1, "", "logical_or"], [891, 4, 1, "", "logical_xor"], [896, 4, 1, "", "maximum"], [901, 4, 1, "", "minimum"], [906, 4, 1, "", "multiply"], [911, 4, 1, "", "negative"], [916, 4, 1, "", "not_equal"], [921, 4, 1, "", "positive"], [926, 4, 1, "", "pow"], [931, 4, 1, "", "rad2deg"], [936, 4, 1, "", "reciprocal"], [941, 4, 1, "", "remainder"], [946, 4, 1, "", "round"], [951, 4, 1, "", "sign"], [956, 4, 1, "", "sin"], [961, 4, 1, "", "sinh"], [966, 4, 1, "", "sqrt"], [971, 4, 1, "", "square"], [977, 4, 1, "", "subtract"], [982, 4, 1, "", "tan"], [987, 4, 1, "", "tanh"], [992, 4, 1, "", "trunc"], [997, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.general": [[1003, 4, 1, "", "all_equal"], [1005, 4, 1, "", "arg_info"], [1006, 4, 1, "", "arg_names"], [1009, 4, 1, "", "array_equal"], [1013, 4, 1, "", "assert_supports_inplace"], [1015, 4, 1, "", "cache_fn"], [1019, 4, 1, "", "clip_matrix_norm"], [1024, 4, 1, "", "clip_vector_norm"], [1026, 4, 1, "", "container_types"], [1027, 4, 1, "", "current_backend_str"], [1030, 4, 1, "", "default"], [1034, 4, 1, "", "einops_rearrange"], [1039, 4, 1, "", "einops_reduce"], [1044, 4, 1, "", "einops_repeat"], [1048, 4, 1, "", "exists"], [1052, 4, 1, "", "fourier_encode"], [1054, 4, 1, "", "function_supported_devices_and_dtypes"], [1055, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1059, 4, 1, "", "gather"], [1064, 4, 1, "", "gather_nd"], [1066, 4, 1, "", "get_all_arrays_in_memory"], [1067, 4, 1, "", "get_array_mode"], [1068, 4, 1, "", "get_exception_trace_mode"], [1069, 4, 1, "", "get_item"], [1070, 4, 1, "", "get_min_base"], [1071, 4, 1, "", "get_min_denominator"], [1072, 4, 1, "", "get_nestable_mode"], [1076, 4, 1, "", "get_num_dims"], [1078, 4, 1, "", "get_queue_timeout"], [1079, 4, 1, "", "get_referrers_recursive"], [1080, 4, 1, "", "get_tmp_dir"], [1084, 4, 1, "", "has_nans"], [1086, 4, 1, "", "inplace_arrays_supported"], [1090, 4, 1, "", "inplace_decrement"], [1095, 4, 1, "", "inplace_increment"], [1100, 4, 1, "", "inplace_update"], [1102, 4, 1, "", "inplace_variables_supported"], [1106, 4, 1, "", "is_array"], [1108, 4, 1, "", "is_frontend_array"], [1112, 4, 1, "", "is_ivy_array"], [1117, 4, 1, "", "is_ivy_container"], [1122, 4, 1, "", "is_native_array"], [1124, 4, 1, "", "isscalar"], [1125, 4, 1, "", "match_kwargs"], [1126, 4, 1, "", "multiprocessing"], [1127, 4, 1, "", "num_arrays_in_memory"], [1128, 4, 1, "", "print_all_arrays_in_memory"], [1132, 4, 1, "", "scatter_flat"], [1137, 4, 1, "", "scatter_nd"], [1139, 4, 1, "", "set_array_mode"], [1140, 4, 1, "", "set_exception_trace_mode"], [1141, 4, 1, "", "set_min_base"], [1142, 4, 1, "", "set_min_denominator"], [1143, 4, 1, "", "set_nestable_mode"], [1144, 4, 1, "", "set_queue_timeout"], [1145, 4, 1, "", "set_shape_array_mode"], [1146, 4, 1, "", "set_tmp_dir"], [1147, 4, 1, "", "shape"], [1148, 4, 1, "", "shape_array_mode"], [1152, 4, 1, "", "stable_divide"], [1157, 4, 1, "", "stable_pow"], [1163, 4, 1, "", "supports_inplace_updates"], [1164, 4, 1, "", "to_ivy_shape"], [1169, 4, 1, "", "to_list"], [1170, 4, 1, "", "to_native_shape"], [1175, 4, 1, "", "to_numpy"], [1180, 4, 1, "", "to_scalar"], [1181, 4, 1, "", "try_else_none"], [1182, 4, 1, "", "unset_array_mode"], [1183, 4, 1, "", "unset_exception_trace_mode"], [1184, 4, 1, "", "unset_nestable_mode"], [1185, 4, 1, "", "unset_queue_timeout"], [1186, 4, 1, "", "unset_shape_array_mode"], [1191, 4, 1, "", "value_is_nan"], [1192, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1193, 1, 1, "", "GradientTracking"], [1197, 4, 1, "", "adam_step"], [1201, 4, 1, "", "adam_update"], [1202, 4, 1, "", "execute_with_gradients"], [1203, 4, 1, "", "grad"], [1207, 4, 1, "", "gradient_descent_update"], [1211, 4, 1, "", "is_variable"], [1213, 4, 1, "", "jac"], [1217, 4, 1, "", "lamb_update"], [1221, 4, 1, "", "lars_update"], [1225, 4, 1, "", "optimizer_update"], [1226, 4, 1, "", "set_with_grads"], [1231, 4, 1, "", "stop_gradient"], [1232, 4, 1, "", "unset_with_grads"], [1233, 4, 1, "", "value_and_grad"], [1238, 4, 1, "", "variable"], [1243, 4, 1, "", "variable_data"], [1244, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1193, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1246, 4, 1, "", "conv"], [1250, 4, 1, "", "conv1d"], [1255, 4, 1, "", "conv1d_transpose"], [1260, 4, 1, "", "conv2d"], [1264, 4, 1, "", "conv2d_transpose"], [1269, 4, 1, "", "conv3d"], [1274, 4, 1, "", "conv3d_transpose"], [1276, 4, 1, "", "conv_general_dilated"], [1277, 4, 1, "", "conv_general_transpose"], [1278, 4, 1, "", "deconv_length"], [1282, 4, 1, "", "depthwise_conv2d"], [1287, 4, 1, "", "dropout"], [1289, 4, 1, "", "get_x_data_format"], [1290, 4, 1, "", "handle_padding"], [1294, 4, 1, "", "linear"], [1299, 4, 1, "", "lstm_update"], [1304, 4, 1, "", "multi_head_attention"], [1309, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1315, 4, 1, "", "cholesky"], [1320, 4, 1, "", "cross"], [1325, 4, 1, "", "det"], [1330, 4, 1, "", "diag"], [1335, 4, 1, "", "diagonal"], [1340, 4, 1, "", "eigh"], [1343, 4, 1, "", "eigvalsh"], [1347, 4, 1, "", "inner"], [1352, 4, 1, "", "inv"], [1357, 4, 1, "", "matmul"], [1362, 4, 1, "", "matrix_norm"], [1366, 4, 1, "", "matrix_power"], [1371, 4, 1, "", "matrix_rank"], [1376, 4, 1, "", "matrix_transpose"], [1381, 4, 1, "", "outer"], [1386, 4, 1, "", "pinv"], [1391, 4, 1, "", "qr"], [1396, 4, 1, "", "slogdet"], [1401, 4, 1, "", "solve"], [1407, 4, 1, "", "svd"], [1412, 4, 1, "", "svdvals"], [1417, 4, 1, "", "tensordot"], [1422, 4, 1, "", "trace"], [1427, 4, 1, "", "vander"], [1432, 4, 1, "", "vecdot"], [1437, 4, 1, "", "vector_norm"], [1442, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1447, 4, 1, "", "binary_cross_entropy"], [1452, 4, 1, "", "cross_entropy"], [1457, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1463, 4, 1, "", "clip"], [1468, 4, 1, "", "concat"], [1473, 4, 1, "", "constant_pad"], [1478, 4, 1, "", "expand_dims"], [1483, 4, 1, "", "flip"], [1488, 4, 1, "", "permute_dims"], [1493, 4, 1, "", "repeat"], [1498, 4, 1, "", "reshape"], [1503, 4, 1, "", "roll"], [1508, 4, 1, "", "split"], [1513, 4, 1, "", "squeeze"], [1518, 4, 1, "", "stack"], [1524, 4, 1, "", "swapaxes"], [1529, 4, 1, "", "tile"], [1534, 4, 1, "", "unstack"], [1539, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1541, 4, 1, "", "fomaml_step"], [1542, 4, 1, "", "maml_step"], [1543, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1545, 4, 1, "", "all_nested_indices"], [1546, 4, 1, "", "copy_nest"], [1547, 4, 1, "", "index_nest"], [1548, 4, 1, "", "insert_into_nest_at_index"], [1549, 4, 1, "", "insert_into_nest_at_indices"], [1550, 4, 1, "", "map"], [1551, 4, 1, "", "map_nest_at_index"], [1552, 4, 1, "", "map_nest_at_indices"], [1553, 4, 1, "", "multi_index_nest"], [1554, 4, 1, "", "nested_any"], [1555, 4, 1, "", "nested_argwhere"], [1556, 4, 1, "", "nested_map"], [1557, 4, 1, "", "nested_multi_map"], [1558, 4, 1, "", "prune_nest_at_index"], [1559, 4, 1, "", "prune_nest_at_indices"], [1560, 4, 1, "", "set_nest_at_index"], [1561, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1566, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1571, 4, 1, "", "multinomial"], [1576, 4, 1, "", "randint"], [1581, 4, 1, "", "random_normal"], [1586, 4, 1, "", "random_uniform"], [1588, 4, 1, "", "seed"], [1592, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1598, 4, 1, "", "argmax"], [1603, 4, 1, "", "argmin"], [1608, 4, 1, "", "argwhere"], [1613, 4, 1, "", "nonzero"], [1619, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1625, 4, 1, "", "unique_all"], [1630, 4, 1, "", "unique_counts"], [1635, 4, 1, "", "unique_inverse"], [1640, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1645, 4, 1, "", "argsort"], [1650, 4, 1, "", "searchsorted"], [1655, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1661, 4, 1, "", "cumprod"], [1666, 4, 1, "", "cumsum"], [1671, 4, 1, "", "einsum"], [1675, 4, 1, "", "max"], [1679, 4, 1, "", "mean"], [1683, 4, 1, "", "min"], [1687, 4, 1, "", "prod"], [1691, 4, 1, "", "std"], [1696, 4, 1, "", "sum"], [1701, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1706, 4, 1, "", "all"], [1711, 4, 1, "", "any"]], "ivy.verbosity": [[1775, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 325], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 318, 321, 334, 337, 354], "handler": [19, 337], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1714], "ml": [33, 1726, 1730], "explos": 33, "standard": [34, 335, 1721, 1730], "skeptic": 34, "complimentari": 34, "v": [34, 354], "competit": 34, "do": [34, 333], "work": [34, 38, 1720], "The": [34, 42, 331, 339, 354], "arrai": [34, 44, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 316, 317, 320, 327, 339, 422, 433, 438, 443, 448, 453, 458, 463, 476, 483, 487, 495, 501, 512, 517, 522, 530, 536, 541, 549, 556, 561, 566, 571, 589, 600, 607, 612, 617, 622, 629, 650, 670, 679, 684, 689, 694, 699, 704, 709, 714, 719, 724, 729, 734, 739, 744, 749, 754, 759, 764, 769, 774, 779, 784, 789, 794, 799, 804, 809, 814, 819, 824, 829, 834, 839, 844, 849, 854, 859, 864, 869, 874, 879, 884, 889, 894, 899, 904, 909, 914, 919, 924, 929, 934, 939, 944, 949, 954, 959, 964, 969, 975, 980, 985, 990, 995, 1001, 1008, 1011, 1017, 1022, 1029, 1032, 1037, 1042, 1047, 1050, 1057, 1062, 1074, 1082, 1088, 1093, 1098, 1104, 1110, 1115, 1120, 1130, 1135, 1150, 1155, 1161, 1167, 1173, 1178, 1189, 1195, 1199, 1205, 1209, 1215, 1219, 1223, 1229, 1236, 1241, 1248, 1253, 1258, 1267, 1272, 1280, 1285, 1292, 1297, 1302, 1307, 1313, 1318, 1323, 1328, 1333, 1338, 1342, 1345, 1350, 1355, 1360, 1369, 1374, 1379, 1384, 1389, 1394, 1399, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445, 1450, 1455, 1461, 1466, 1471, 1476, 1481, 1486, 1491, 1496, 1501, 1506, 1511, 1516, 1522, 1527, 1532, 1537, 1564, 1569, 1574, 1579, 1584, 1590, 1596, 1601, 1606, 1611, 1617, 1623, 1628, 1633, 1638, 1643, 1648, 1653, 1659, 1664, 1669, 1673, 1677, 1681, 1685, 1689, 1694, 1699, 1704, 1709, 1721], "api": [34, 40, 316, 319, 320, 334, 337, 339, 341, 342, 1721, 1728, 1730], "why": [35, 333], "unifi": [35, 339, 1726, 1730], "No": [35, 41], "more": [35, 41, 335], "re": [35, 333], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1714], "appli": [37, 353], "librari": [37, 353], "introduct": [37, 331, 332], "exampl": [37, 323, 327, 332, 335], "ivi": [37, 40, 41, 42, 317, 320, 323, 325, 331, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 458, 459, 460, 461, 463, 464, 465, 466, 473, 474, 476, 477, 478, 483, 484, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 501, 502, 503, 504, 506, 507, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 530, 531, 532, 533, 535, 536, 537, 538, 540, 541, 542, 543, 545, 546, 548, 549, 550, 551, 556, 557, 558, 559, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 579, 580, 584, 585, 586, 589, 590, 591, 592, 594, 595, 597, 598, 600, 601, 602, 603, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 629, 630, 631, 632, 650, 651, 652, 653, 669, 670, 671, 672, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 732, 734, 735, 736, 737, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 765, 766, 767, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 782, 784, 785, 786, 787, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 839, 840, 841, 842, 844, 845, 846, 847, 849, 850, 851, 852, 854, 855, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 869, 870, 871, 872, 874, 875, 876, 877, 879, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 924, 925, 926, 927, 929, 930, 931, 932, 934, 935, 936, 937, 939, 940, 941, 942, 944, 945, 946, 947, 949, 950, 951, 952, 954, 955, 956, 957, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 971, 972, 974, 975, 976, 977, 979, 980, 981, 982, 984, 985, 986, 987, 989, 990, 991, 992, 994, 995, 996, 997, 1001, 1002, 1003, 1004, 1008, 1009, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1022, 1023, 1024, 1025, 1029, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1042, 1043, 1044, 1045, 1047, 1048, 1050, 1051, 1052, 1053, 1057, 1058, 1059, 1060, 1062, 1063, 1064, 1065, 1074, 1075, 1076, 1077, 1082, 1083, 1084, 1085, 1088, 1089, 1090, 1091, 1093, 1094, 1095, 1096, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1110, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1138, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1166, 1167, 1168, 1169, 1172, 1173, 1174, 1175, 1177, 1178, 1179, 1180, 1188, 1189, 1190, 1191, 1195, 1196, 1197, 1199, 1200, 1201, 1205, 1206, 1207, 1209, 1210, 1211, 1212, 1215, 1216, 1217, 1219, 1220, 1221, 1223, 1224, 1225, 1228, 1229, 1230, 1231, 1235, 1236, 1237, 1238, 1240, 1241, 1242, 1243, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1272, 1273, 1274, 1275, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1292, 1293, 1294, 1295, 1297, 1298, 1299, 1300, 1302, 1303, 1304, 1305, 1307, 1308, 1309, 1310, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321, 1323, 1324, 1325, 1326, 1328, 1329, 1330, 1331, 1333, 1334, 1335, 1336, 1338, 1339, 1340, 1342, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1404, 1405, 1406, 1407, 1409, 1410, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1424, 1425, 1426, 1427, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1491, 1492, 1493, 1494, 1496, 1497, 1498, 1499, 1501, 1502, 1503, 1504, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1536, 1537, 1538, 1539, 1564, 1565, 1566, 1569, 1570, 1571, 1572, 1574, 1575, 1576, 1577, 1579, 1580, 1581, 1582, 1584, 1585, 1586, 1587, 1590, 1591, 1592, 1593, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1606, 1607, 1608, 1609, 1611, 1612, 1613, 1614, 1616, 1617, 1618, 1619, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1671, 1673, 1674, 1675, 1677, 1678, 1679, 1681, 1682, 1683, 1685, 1686, 1687, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1704, 1705, 1706, 1707, 1709, 1710, 1711, 1712, 1730], "robot": [37, 350, 353], "build": [38, 337], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 316, 340], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 320, 333, 354], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 319, 321, 322, 325, 327, 328, 329, 331, 332, 333, 334, 337, 342, 354], "format": [40, 326, 1723, 1730], "checklist": 40, "frontend": [40, 318, 320, 331, 332, 342], "where": [40, 1615, 1617, 1618, 1619], "place": 40, "extens": [40, 42, 62, 179, 352, 366, 1714], "set": [41, 124, 152, 277, 305, 318, 419, 1620], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 316, 320, 332, 333], "detail": 41, "hypothesi": [41, 332, 333], "log": [41, 848, 849, 850, 851], "free": 41, "github": [41, 320], "codespac": 41, "pre": [41, 326], "commit": [41, 42, 326], "basic": [42, 331], "get": 42, "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": 42, "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 320], "request": [42, 320], "small": 42, "often": 42, "interact": 42, "contain": [42, 162, 167, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 319, 340, 434, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 474, 478, 488, 490, 493, 496, 498, 502, 504, 507, 510, 513, 515, 518, 520, 523, 525, 528, 531, 533, 535, 537, 540, 542, 545, 548, 550, 557, 559, 562, 564, 567, 569, 572, 574, 580, 584, 586, 590, 592, 595, 598, 601, 603, 608, 610, 613, 615, 618, 620, 623, 625, 630, 632, 651, 653, 669, 671, 680, 682, 685, 687, 690, 692, 695, 697, 700, 702, 705, 707, 710, 712, 715, 717, 720, 722, 725, 727, 730, 732, 735, 737, 740, 742, 745, 747, 750, 752, 755, 757, 760, 762, 765, 767, 770, 772, 775, 777, 780, 782, 785, 787, 790, 792, 795, 797, 800, 802, 805, 807, 810, 812, 815, 817, 820, 822, 825, 827, 830, 832, 835, 837, 840, 842, 845, 847, 850, 852, 855, 857, 860, 862, 865, 867, 870, 872, 875, 877, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 920, 922, 925, 927, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 955, 957, 960, 962, 965, 967, 970, 972, 974, 976, 979, 981, 984, 986, 989, 991, 994, 996, 1002, 1004, 1012, 1014, 1018, 1020, 1023, 1025, 1033, 1035, 1038, 1040, 1043, 1045, 1051, 1053, 1058, 1060, 1063, 1065, 1075, 1077, 1083, 1085, 1089, 1091, 1094, 1096, 1099, 1101, 1105, 1107, 1111, 1113, 1116, 1118, 1121, 1123, 1131, 1133, 1136, 1138, 1151, 1153, 1156, 1158, 1160, 1162, 1166, 1168, 1172, 1174, 1177, 1179, 1188, 1190, 1196, 1200, 1206, 1210, 1212, 1216, 1220, 1224, 1228, 1230, 1235, 1237, 1240, 1242, 1249, 1251, 1254, 1256, 1259, 1261, 1263, 1265, 1268, 1270, 1273, 1275, 1281, 1283, 1286, 1288, 1293, 1295, 1298, 1300, 1303, 1305, 1308, 1310, 1314, 1316, 1319, 1321, 1324, 1326, 1329, 1331, 1334, 1336, 1339, 1346, 1348, 1351, 1353, 1356, 1358, 1361, 1363, 1365, 1367, 1370, 1372, 1375, 1377, 1380, 1382, 1385, 1387, 1390, 1392, 1395, 1397, 1400, 1402, 1404, 1406, 1409, 1411, 1414, 1416, 1419, 1421, 1424, 1426, 1429, 1431, 1434, 1436, 1439, 1441, 1446, 1448, 1451, 1453, 1456, 1458, 1462, 1464, 1467, 1469, 1472, 1474, 1477, 1479, 1482, 1484, 1487, 1489, 1492, 1494, 1497, 1499, 1502, 1504, 1507, 1509, 1512, 1514, 1517, 1519, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1565, 1570, 1572, 1575, 1577, 1580, 1582, 1585, 1587, 1591, 1593, 1597, 1599, 1602, 1604, 1607, 1609, 1612, 1614, 1616, 1618, 1622, 1624, 1627, 1629, 1632, 1634, 1637, 1639, 1644, 1646, 1649, 1651, 1654, 1656, 1660, 1662, 1665, 1667, 1670, 1674, 1678, 1682, 1686, 1690, 1693, 1695, 1698, 1700, 1705, 1707, 1710, 1712], "run": [42, 316, 333], "local": 42, "most": 42, "out": [42, 327, 330], "id": [42, 316], "data": [43, 56, 98, 173, 251, 321, 331, 333, 340, 354, 372, 552, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "class": [43, 325, 331, 339, 1732], "activ": [45, 63, 163, 180, 367, 431, 1733], "arraywithactiv": 46, "convers": [49, 94, 169, 247], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 96, 171, 249, 370, 470], "arraywithcr": 55, "type": [56, 98, 173, 251, 321, 328, 331, 354, 372, 552], "arraywithdatatyp": 57, "devic": [58, 100, 175, 253, 322, 327, 331, 373, 643], "arraywithdevic": 59, "elementwis": [60, 102, 177, 255, 374, 677], "arraywithelementwis": 61, "arraywithactivationsextens": 64, "method": [65, 182, 319, 331, 332, 339, 340], "diagflat": [66, 183, 397], "dirichlet": [67, 184, 417], "exp2": [68, 185, 375], "flatten": [69, 186, 401], "fliplr": [70, 187, 402], "flipud": [71, 188, 403], "float_pow": [72, 189, 376], "fmax": [73, 190, 377], "fmod": [74, 191, 378], "gcd": [75, 192, 379], "heavisid": [76, 195, 404], "hstack": [77, 196, 405], "i0": [78, 197, 406], "isposinf": [79, 198, 380], "kron": [80, 201, 398], "lcm": [81, 202, 381], "max_pool1d": [82, 203, 392], "max_pool2d": [83, 204, 393], "median": [84, 205, 428], "moveaxi": [85, 206, 407], "msort": [86, 207, 421], "nansum": [87, 208, 382], "pad": [88, 209, 394], "rot90": [89, 210, 410], "sinc": [90, 211, 383], "top_k": [91, 244, 411], "trapz": [92, 384], "vstack": [93, 246, 412], "arraywithconversionsextens": 95, "arraywithcreationextens": 97, "arraywithdata_typeextens": 99, "arraywithdeviceextens": 101, "arraywithelementwiseextens": 103, "gener": [104, 132, 257, 285, 333, 335, 385, 999], "arraywithgeneralextens": 105, "gradient": [106, 134, 259, 287, 386, 1193], "arraywithgradientsextens": 107, "imag": [108, 136, 261, 289], "arraywithimageextens": 109, "layer": [110, 138, 263, 291, 387, 1245, 1748], "arraywithlayersextens": 111, "linear": [112, 140, 265, 293, 396, 1291, 1292, 1293, 1294, 1311, 1758], "algebra": [112, 140, 265, 293, 396, 1311], "arraywithlinalgextens": 113, "loss": [114, 142, 267, 295, 399, 1443], "arraywithlossesextens": 115, "manipul": [116, 144, 269, 297, 400, 1459], "arraywithmanipulationextens": 117, "norm": [118, 146, 271, 299, 415, 1562, 1763], "arraywithnormsextens": 119, "random": [120, 148, 273, 301, 416, 1567], "arraywithrandomextens": 121, "search": [122, 150, 275, 303, 418, 1594], "arraywithsearchingextens": 123, "arraywithsetextens": 125, "sort": [126, 154, 279, 307, 420, 1641, 1652, 1653, 1654, 1655], "arraywithsortingextens": 127, "statist": [128, 156, 281, 309, 427, 1657], "arraywithstatisticalextens": 129, "util": [130, 158, 283, 311, 429, 1702], "arraywithutilityextens": 131, "arraywithgener": 133, "arraywithgradi": 135, "arraywithimag": 137, "arraywithlay": 139, "arraywithlinearalgebra": 141, "arraywithloss": 143, "arraywithmanipul": 145, "arraywithnorm": 147, "arraywithrandom": 149, "arraywithsearch": 151, "arraywithset": 153, "arraywithsort": 155, "arraywithstatist": 157, "arraywithutil": 159, "wrap": [160, 313, 329], "add_ivy_array_instance_method": 161, "containerwithactiv": 164, "base": 165, "containerbas": 166, "containerwithconvers": 170, "containerwithcr": 172, "containerwithdatatyp": 174, "containerwithdevic": 176, "containerwithelementwis": 178, "containerwithactivationextens": 181, "hamming_window": [193, 388], "hann_window": [194, 389], "kaiser_bessel_derived_window": [199, 390], "kaiser_window": [200, 391], "static_diagflat": 212, "static_dirichlet": 213, "static_exp2": 214, "static_flatten": 215, "static_fliplr": 216, "static_flipud": 217, "static_float_pow": 218, "static_fmax": 219, "static_fmod": 220, "static_gcd": 221, "static_hamming_window": 222, "static_hann_window": 223, "static_heavisid": 224, "static_hstack": 225, "static_i0": 226, "static_isposinf": 227, "static_kaiser_bessel_derived_window": 228, "static_kaiser_window": 229, "static_kron": 230, "static_lcm": 231, "static_max_pool1d": 232, "static_max_pool2d": 233, "static_median": 234, "static_moveaxi": 235, "static_msort": 236, "static_nansum": 237, "static_pad": 238, "static_rot90": 239, "static_sinc": 240, "static_top_k": 241, "static_triu_indic": 242, "static_vstack": 243, "triu_indic": [245, 371], "containerwithconversionextens": 248, "containerwithcreationextens": 250, "containerwithdata_typeextens": 252, "containerwithdeviceextens": 254, "containerwithelementwiseextens": 256, "containerwithgeneralextens": 258, "containerwithgradientsextens": 260, "containerwithimageextens": 262, "containerwithlayersextens": 264, "containerwithlinalgextens": 266, "containerwithlossesextens": 268, "containerwithmanipulationextens": 270, "containerwithnormsextens": 272, "containerwithrandomextens": 274, "containerwithsearchingextens": 276, "containerwithsetextens": 278, "containerwithsortingextens": 280, "containerwithstatisticalextens": 282, "containerwithutilityextens": 284, "containerwithgener": 286, "containerwithgradi": 288, "containerwithimag": 290, "containerwithlay": 292, "containerwithlinearalgebra": 294, "containerwithloss": 296, "containerwithmanipul": 298, "containerwithnorm": 300, "containerwithrandom": 302, "containerwithsearch": 304, "containerwithset": 306, "containerwithsort": 308, "containerwithstatist": 310, "containerwithutil": 312, "add_ivy_container_instance_method": 314, "deep": 315, "dive": 315, "termin": 316, "skip": 316, "nativ": 317, "handl": [317, 325, 354], "version": [318, 334, 354], "support": [318, 321, 331, 354], "instanc": [319, 331, 332, 339], "static": 319, "special": [319, 331, 332], "nestabl": [319, 327, 328], "continu": 320, "integr": [320, 333], "action": 320, "core": 320, "nn": 320, "state": [320, 341, 354], "ci": 320, "push": 320, "schedul": 320, "cron": 320, "job": 320, "dashboard": 320, "modul": [321, 322, 341, 1760, 1761], "promot": [321, 331], "argument": [321, 322, 327, 330, 331], "other": [321, 322], "unsupport": 321, "bug": 321, "superset": [321, 335], "docstr": [323, 324], "tan": [323, 332, 978, 980, 981, 982], "roll": [323, 1500, 1501, 1502, 1503], "add": [323, 332, 693, 694, 695, 696, 1730], "except": 325, "handle_except": 325, "decor": 325, "lint": 326, "check": [326, 354], "hook": 326, "posit": [327, 918, 919, 920, 921], "keyword": 327, "input": 327, "dtype": [327, 583, 584, 585], "number": 327, "oper": [327, 339, 354], "integ": 327, "sequenc": 327, "primari": 328, "composit": [328, 331], "mix": 328, "standalon": 328, "conveni": 328, "inplac": 330, "updat": 330, "copi": 330, "unus": 331, "miss": 331, "temporari": 331, "rule": 331, "numpi": [331, 1724], "cast": 331, "full": [332, 499], "alia": 332, "helper": [332, 333, 334], "import": 333, "strategi": 333, "we": 333, "need": 333, "how": 333, "write": 333, "effect": 333, "bonu": 333, "extend": [333, 335], "featur": 333, "self": 333, "consist": 333, "explicit": 333, "test_array_funct": 333, "fail": 333, "navig": 334, "code": 334, "categor": 334, "submodul": 334, "design": [334, 336, 1714], "pin": 334, "behaviour": 335, "what": [335, 1730], "i": 335, "A": 335, "non": 335, "duplic": 335, "when": 335, "too": 335, "much": 335, "balanc": 335, "effici": 335, "block": 337, "graph": [337, 342, 1725, 1730], "compil": [337, 342, 368, 467, 468, 1722, 1727, 1729, 1730], "framework": [338, 1724, 1727, 1730, 1731, 1732], "monkei": 339, "patch": 339, "construct": 340, "represent": 340, "recurs": 340, "built": 340, "ins": 340, "access": 340, "save": 340, "load": 340, "comparison": 340, "custom": [340, 354], "case": 340, "compartment": 340, "configur": 340, "network": [340, 342], "weight": 340, "initi": [341, 1738, 1742], "optim": [341, 1765, 1769], "transpil": 342, "role": 342, "convert": [342, 1736], "model": [342, 349, 354], "builder": 344, "ecosystem": 345, "gym": [346, 353], "mech": 347, "memori": [348, 353], "vision": [351, 353], "mechan": 353, "faq": 354, "maintain": 354, "dynam": 354, "size": 354, "shape": [354, 1147, 1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "gpu": 354, "deploy": 354, "control": 354, "flow": 354, "auto": 354, "differenti": 354, "replica": 354, "parallel": 354, "altern": 354, "structur": 354, "func": 355, "wrapper": [355, 1730, 1731], "from_zero_dim_arrays_to_float": 356, "handle_nest": 357, "handle_out_argu": 358, "infer_devic": 359, "infer_dtyp": 360, "inputs_to_ivy_arrai": 361, "inputs_to_native_arrai": 362, "integer_arrays_to_float": 363, "outputs_to_ivy_arrai": 364, "to_native_arrays_and_back": 365, "constant": [369, 469, 1739], "vorbis_window": 395, "ndenumer": 408, "ndindex": 409, "meta": [413, 1540], "nest": [414, 1544], "spars": 422, "is_ivy_sparse_arrai": 423, "is_native_sparse_arrai": 424, "native_sparse_arrai": 425, "native_sparse_array_to_indices_values_and_shap": 426, "gelu": [432, 433, 434, 435, 1735], "static_gelu": 436, "leaky_relu": [437, 438, 439, 440], "static_leaky_relu": 441, "log_softmax": [442, 443, 444, 445], "static_log_softmax": 446, "relu": [447, 448, 449, 450], "static_relu": 451, "sigmoid": [452, 453, 454, 455], "static_sigmoid": 456, "softmax": [457, 458, 459, 460], "static_softmax": 461, "softplu": [462, 463, 464, 465], "static_softplu": 466, "note": [470, 494, 497], "nestedsequ": 471, "arang": [472, 473], "static_arang": 474, "asarrai": [475, 476, 477], "static_asarrai": 478, "asarray_handle_nest": 479, "asarray_infer_devic": 480, "asarray_to_native_arrays_and_back": 481, "copy_arrai": [482, 483, 484], "empti": 485, "empty_lik": [486, 487, 488, 489], "static_empty_lik": 490, "ey": [491, 492], "static_ey": 493, "from_dlpack": [494, 495, 496, 497], "static_from_dlpack": 498, "full_lik": [500, 501, 502, 503], "static_full_lik": 504, "linspac": [505, 506], "static_linspac": 507, "logspac": [508, 509], "static_logspac": 510, "meshgrid": [511, 512, 513, 514], "static_meshgrid": 515, "native_arrai": [516, 517, 518, 519], "static_native_arrai": 520, "one_hot": [521, 522, 523, 524], "static_one_hot": 525, "ones": [526, 527], "static_on": 528, "ones_lik": [529, 530, 531, 532], "static_ones_lik": 533, "tril": [534, 536, 537, 538], "static_tril": 535, "triu": [539, 541, 542, 543], "static_triu": 540, "zero": [544, 546, 1747], "static_zero": 545, "zeros_lik": [547, 549, 550, 551], "static_zeros_lik": 548, "as_ivy_dtyp": 553, "as_native_dtyp": 554, "astyp": [555, 556, 557, 558], "static_astyp": 559, "broadcast_arrai": [560, 561, 562, 563], "static_broadcast_arrai": 564, "broadcast_to": [565, 566, 567, 568], "static_broadcast_to": 569, "can_cast": [570, 571, 572, 573], "static_can_cast": 574, "check_float": 575, "closest_valid_dtyp": 576, "default_dtyp": 577, "default_float_dtyp": [578, 579], "static_default_float_dtyp": 580, "default_int_dtyp": 581, "default_uint_dtyp": 582, "static_dtyp": 586, "dtype_bit": 587, "finfo": [588, 589, 590, 591], "static_finfo": 592, "function_supported_dtyp": [593, 594], "static_function_supported_dtyp": 595, "function_unsupported_dtyp": [596, 597], "static_function_unsupported_dtyp": 598, "iinfo": [599, 600, 601, 602], "static_iinfo": 603, "infer_default_dtyp": 604, "invalid_dtyp": 605, "is_bool_dtyp": [606, 607, 608, 609], "static_is_bool_dtyp": 610, "is_float_dtyp": [611, 612, 613, 614], "static_is_float_dtyp": 615, "is_int_dtyp": [616, 617, 618, 619], "static_is_int_dtyp": 620, "is_uint_dtyp": [621, 622, 623, 624], "static_is_uint_dtyp": 625, "promote_typ": 626, "promote_types_of_input": 627, "result_typ": [628, 629, 630, 631], "static_result_typ": 632, "set_default_dtyp": 633, "set_default_float_dtyp": 634, "set_default_int_dtyp": 635, "set_default_uint_dtyp": 636, "type_promote_arrai": 637, "unset_default_dtyp": 638, "unset_default_float_dtyp": 639, "unset_default_int_dtyp": 640, "unset_default_uint_dtyp": 641, "valid_dtyp": 642, "profil": 644, "as_ivy_dev": 645, "as_native_dev": 646, "clear_mem_on_dev": 647, "default_devic": 648, "dev": [649, 650, 651, 652], "static_dev": 653, "dev_util": 654, "function_supported_devic": 655, "function_unsupported_devic": 656, "get_all_ivy_arrays_on_dev": 657, "gpu_is_avail": 658, "num_cpu_cor": 659, "num_gpu": 660, "num_ivy_arrays_on_dev": 661, "percent_used_mem_on_dev": 662, "print_all_ivy_arrays_on_dev": 663, "set_default_devic": 664, "set_split_factor": 665, "split_factor": 666, "split_func_cal": 667, "to_devic": [668, 670, 671, 672], "static_to_devic": 669, "total_mem_on_dev": 673, "tpu_is_avail": 674, "unset_default_devic": 675, "used_mem_on_dev": 676, "ab": [678, 679, 680, 681], "static_ab": 682, "aco": [683, 684, 685, 686], "static_aco": 687, "acosh": [688, 689, 690, 691], "static_acosh": 692, "static_add": 697, "asin": [698, 699, 700, 701], "static_asin": 702, "asinh": [703, 704, 705, 706], "static_asinh": 707, "atan": [708, 709, 710, 711], "static_atan": 712, "atan2": [713, 714, 715, 716], "static_atan2": 717, "atanh": [718, 719, 720, 721], "static_atanh": 722, "bitwise_and": [723, 724, 725, 726], "static_bitwise_and": 727, "bitwise_invert": [728, 729, 730, 731], "static_bitwise_invert": 732, "bitwise_left_shift": [733, 734, 735, 736], "static_bitwise_left_shift": 737, "bitwise_or": [738, 739, 740, 741], "static_bitwise_or": 742, "bitwise_right_shift": [743, 744, 745, 746], "static_bitwise_right_shift": 747, "bitwise_xor": [748, 749, 750, 751], "static_bitwise_xor": 752, "ceil": [753, 754, 755, 756], "static_ceil": 757, "co": [758, 759, 760, 761], "static_co": 762, "cosh": [763, 764, 765, 766], "static_cosh": 767, "deg2rad": [768, 769, 770, 771], "static_deg2rad": 772, "divid": [773, 774, 775, 776], "static_divid": 777, "equal": [778, 779, 780, 781], "static_equ": 782, "erf": [783, 784, 785, 786], "static_erf": 787, "exp": [788, 789, 790, 791], "static_exp": 792, "expm1": [793, 794, 795, 796], "static_expm1": 797, "floor": [798, 799, 800, 801], "static_floor": 802, "floor_divid": [803, 804, 805, 806], "static_floor_divid": 807, "greater": [808, 809, 810, 811], "static_great": 812, "greater_equ": [813, 814, 815, 816], "static_greater_equ": 817, "isfinit": [818, 819, 820, 821], "static_isfinit": 822, "isinf": [823, 824, 825, 826], "static_isinf": 827, "isnan": [828, 829, 830, 831], "static_isnan": 832, "isreal": [833, 834, 835, 836], "static_isr": 837, "less": [838, 839, 840, 841], "static_less": 842, "less_equ": [843, 844, 845, 846], "static_less_equ": 847, "static_log": 852, "log10": [853, 854, 855, 856], "static_log10": 857, "log1p": [858, 859, 860, 861], "static_log1p": 862, "log2": [863, 864, 865, 866], "static_log2": 867, "logaddexp": [868, 869, 870, 871], "static_logaddexp": 872, "logical_and": [873, 874, 875, 876], "static_logical_and": 877, "logical_not": [878, 879, 880, 881], "static_logical_not": 882, "logical_or": [883, 884, 885, 886], "static_logical_or": 887, "logical_xor": [888, 889, 890, 891], "static_logical_xor": 892, "maximum": [893, 894, 895, 896], "static_maximum": 897, "minimum": [898, 899, 900, 901], "static_minimum": 902, "multipli": [903, 904, 905, 906], "static_multipli": 907, "neg": [908, 909, 910, 911], "static_neg": 912, "not_equ": [913, 914, 915, 916], "static_not_equ": 917, "static_posit": 922, "pow": [923, 924, 925, 926], "static_pow": 927, "rad2deg": [928, 929, 930, 931], "static_rad2deg": 932, "reciproc": [933, 934, 935, 936], "static_reciproc": 937, "remaind": [938, 939, 940, 941], "static_remaind": 942, "round": [943, 944, 945, 946], "static_round": 947, "sign": [948, 949, 950, 951], "static_sign": 952, "sin": [953, 954, 955, 956], "static_sin": 957, "sinh": [958, 959, 960, 961], "static_sinh": 962, "sqrt": [963, 964, 965, 966], "static_sqrt": 967, "squar": [968, 969, 970, 971], "static_squar": 972, "subtract": [973, 975, 976, 977], "static_subtract": 974, "static_tan": 979, "tanh": [983, 985, 986, 987], "static_tanh": 984, "trunc": [988, 990, 991, 992], "static_trunc": 989, "trunc_divid": [993, 995, 996, 997], "static_trunc_divid": 994, "all_equ": [1000, 1001, 1002, 1003], "static_all_equ": 1004, "arg_info": 1005, "arg_nam": 1006, "array_equ": [1007, 1008, 1009], "assert_supports_inplac": [1010, 1011, 1012, 1013], "static_assert_supports_inplac": 1014, "cache_fn": 1015, "clip_matrix_norm": [1016, 1017, 1018, 1019], "static_clip_matrix_norm": 1020, "clip_vector_norm": [1021, 1022, 1023, 1024], "static_clip_vector_norm": 1025, "container_typ": 1026, "current_backend_str": 1027, "default": [1028, 1029, 1030], "einops_rearrang": [1031, 1032, 1033, 1034], "static_einops_rearrang": 1035, "einops_reduc": [1036, 1037, 1038, 1039], "static_einops_reduc": 1040, "einops_repeat": [1041, 1042, 1043, 1044], "static_einops_repeat": 1045, "exist": [1046, 1047, 1048], "fourier_encod": [1049, 1050, 1051, 1052], "static_fourier_encod": 1053, "function_supported_devices_and_dtyp": 1054, "function_unsupported_devices_and_dtyp": 1055, "gather": [1056, 1057, 1058, 1059], "static_gath": 1060, "gather_nd": [1061, 1062, 1063, 1064], "static_gather_nd": 1065, "get_all_arrays_in_memori": 1066, "get_array_mod": 1067, "get_exception_trace_mod": 1068, "get_item": 1069, "get_min_bas": 1070, "get_min_denomin": 1071, "get_nestable_mod": 1072, "get_num_dim": [1073, 1074, 1075, 1076], "static_get_num_dim": 1077, "get_queue_timeout": 1078, "get_referrers_recurs": 1079, "get_tmp_dir": 1080, "has_nan": [1081, 1082, 1083, 1084], "static_has_nan": 1085, "inplace_arrays_support": 1086, "inplace_decr": [1087, 1088, 1089, 1090], "static_inplace_decr": 1091, "inplace_incr": [1092, 1093, 1094, 1095], "static_inplace_incr": 1096, "inplace_upd": [1097, 1098, 1099, 1100], "static_inplace_upd": 1101, "inplace_variables_support": 1102, "is_arrai": [1103, 1104, 1105, 1106], "static_is_arrai": 1107, "is_frontend_arrai": 1108, "is_ivy_arrai": [1109, 1110, 1111, 1112], "static_is_ivy_arrai": 1113, "is_ivy_contain": [1114, 1115, 1116, 1117], "static_is_ivy_contain": 1118, "is_native_arrai": [1119, 1120, 1121, 1122], "static_is_native_arrai": 1123, "isscalar": 1124, "match_kwarg": 1125, "multiprocess": 1126, "num_arrays_in_memori": 1127, "print_all_arrays_in_memori": 1128, "scatter_flat": [1129, 1130, 1131, 1132], "static_scatter_flat": 1133, "scatter_nd": [1134, 1135, 1136, 1137], "static_scatter_nd": 1138, "set_array_mod": 1139, "set_exception_trace_mod": 1140, "set_min_bas": 1141, "set_min_denomin": 1142, "set_nestable_mod": 1143, "set_queue_timeout": 1144, "set_shape_array_mod": 1145, "set_tmp_dir": 1146, "shape_array_mod": 1148, "stable_divid": [1149, 1150, 1151, 1152], "static_stable_divid": 1153, "stable_pow": [1154, 1155, 1156, 1157], "static_stable_pow": 1158, "supports_inplace_upd": [1159, 1161, 1162, 1163], "static_supports_inplace_upd": 1160, "to_ivy_shap": 1164, "to_list": [1165, 1167, 1168, 1169], "static_to_list": 1166, "to_native_shap": 1170, "to_numpi": [1171, 1173, 1174, 1175], "static_to_numpi": 1172, "to_scalar": [1176, 1178, 1179, 1180], "static_to_scalar": 1177, "try_else_non": 1181, "unset_array_mod": 1182, "unset_exception_trace_mod": 1183, "unset_nestable_mod": 1184, "unset_queue_timeout": 1185, "unset_shape_array_mod": 1186, "value_is_nan": [1187, 1189, 1190, 1191], "static_value_is_nan": 1188, "vmap": 1192, "adam_step": [1194, 1195, 1196, 1197], "adam_upd": [1198, 1199, 1200, 1201], "execute_with_gradi": 1202, "grad": 1203, "gradient_descent_upd": [1204, 1205, 1206, 1207], "is_vari": [1208, 1209, 1210, 1211], "static_is_vari": 1212, "jac": 1213, "lamb_upd": [1214, 1215, 1216, 1217], "lars_upd": [1218, 1219, 1220, 1221], "optimizer_upd": [1222, 1223, 1224, 1225], "set_with_grad": 1226, "stop_gradi": [1227, 1229, 1230, 1231], "static_stop_gradi": 1228, "unset_with_grad": 1232, "value_and_grad": 1233, "variabl": [1234, 1236, 1237, 1238], "static_vari": 1235, "variable_data": [1239, 1241, 1242, 1243], "static_variable_data": 1240, "with_grad": 1244, "conv": 1246, "conv1d": [1247, 1248, 1249, 1250, 1749], "static_conv1d": 1251, "conv1d_transpos": [1252, 1253, 1254, 1255], "static_conv1d_transpos": 1256, "conv2d": [1257, 1258, 1259, 1260, 1751], "static_conv2d": 1261, "conv2d_transpos": [1262, 1263, 1264], "static_conv2d_transpos": 1265, "conv3d": [1266, 1267, 1268, 1269, 1753], "static_conv3d": 1270, "conv3d_transpos": [1271, 1272, 1273, 1274], "static_conv3d_transpos": 1275, "conv_general_dil": 1276, "conv_general_transpos": 1277, "deconv_length": 1278, "depthwise_conv2d": [1279, 1280, 1281, 1282], "static_depthwise_conv2d": 1283, "dropout": [1284, 1285, 1286, 1287, 1756], "static_dropout": 1288, "get_x_data_format": 1289, "handle_pad": 1290, "static_linear": 1295, "lstm_updat": [1296, 1297, 1298, 1299], "static_lstm_upd": 1300, "multi_head_attent": [1301, 1302, 1303, 1304], "static_multi_head_attent": 1305, "scaled_dot_product_attent": [1306, 1307, 1308, 1309], "static_scaled_dot_product_attent": 1310, "choleski": [1312, 1313, 1314, 1315], "static_choleski": 1316, "cross": [1317, 1318, 1319, 1320], "static_cross": 1321, "det": [1322, 1323, 1324, 1325], "static_det": 1326, "diag": [1327, 1328, 1329, 1330], "static_diag": 1331, "diagon": [1332, 1333, 1334, 1335], "static_diagon": 1336, "eigh": [1337, 1338, 1339, 1340], "eigvalsh": [1341, 1342, 1343], "inner": [1344, 1345, 1346, 1347], "static_inn": 1348, "inv": [1349, 1350, 1351, 1352], "static_inv": 1353, "matmul": [1354, 1355, 1356, 1357], "static_matmul": 1358, "matrix_norm": [1359, 1360, 1361, 1362], "static_matrix_norm": 1363, "matrix_pow": [1364, 1365, 1366], "static_matrix_pow": 1367, "matrix_rank": [1368, 1369, 1370, 1371], "static_matrix_rank": 1372, "matrix_transpos": [1373, 1374, 1375, 1376], "static_matrix_transpos": 1377, "outer": [1378, 1379, 1380, 1381], "static_out": 1382, "pinv": [1383, 1384, 1385, 1386], "static_pinv": 1387, "qr": [1388, 1389, 1390, 1391], "static_qr": 1392, "slogdet": [1393, 1394, 1395, 1396], "static_slogdet": 1397, "solv": [1398, 1399, 1400, 1401], "static_solv": 1402, "svd": [1403, 1405, 1406, 1407], "static_svd": 1404, "svdval": [1408, 1410, 1411, 1412], "static_svdv": 1409, "tensordot": [1413, 1415, 1416, 1417], "static_tensordot": 1414, "trace": [1418, 1420, 1421, 1422], "static_trac": 1419, "vander": [1423, 1425, 1426, 1427], "static_vand": 1424, "vecdot": [1428, 1430, 1431, 1432], "static_vecdot": 1429, "vector_norm": [1433, 1435, 1436, 1437], "static_vector_norm": 1434, "vector_to_skew_symmetric_matrix": [1438, 1440, 1441, 1442], "static_vector_to_skew_symmetric_matrix": 1439, "binary_cross_entropi": [1444, 1445, 1446, 1447], "static_binary_cross_entropi": 1448, "cross_entropi": [1449, 1450, 1451, 1452], "static_cross_entropi": 1453, "sparse_cross_entropi": [1454, 1455, 1456, 1457], "static_sparse_cross_entropi": 1458, "clip": [1460, 1461, 1462, 1463], "static_clip": 1464, "concat": [1465, 1466, 1467, 1468], "static_concat": 1469, "constant_pad": [1470, 1471, 1472, 1473], "static_constant_pad": 1474, "expand_dim": [1475, 1476, 1477, 1478], "static_expand_dim": 1479, "flip": [1480, 1481, 1482, 1483], "static_flip": 1484, "permute_dim": [1485, 1486, 1487, 1488], "static_permute_dim": 1489, "repeat": [1490, 1491, 1492, 1493], "static_repeat": 1494, "reshap": [1495, 1496, 1497, 1498], "static_reshap": 1499, "static_rol": 1504, "split": [1505, 1506, 1507, 1508], "static_split": 1509, "squeez": [1510, 1511, 1512, 1513], "static_squeez": 1514, "stack": [1515, 1516, 1517, 1518], "static_stack": 1519, "swapax": [1520, 1522, 1523, 1524], "static_swapax": 1521, "tile": [1525, 1527, 1528, 1529], "static_til": 1526, "unstack": [1530, 1532, 1533, 1534], "static_unstack": 1531, "zero_pad": [1535, 1537, 1538, 1539], "static_zero_pad": 1536, "fomaml_step": 1541, "maml_step": 1542, "reptile_step": 1543, "all_nested_indic": 1545, "copy_nest": 1546, "index_nest": 1547, "insert_into_nest_at_index": 1548, "insert_into_nest_at_indic": 1549, "map": 1550, "map_nest_at_index": 1551, "map_nest_at_indic": 1552, "multi_index_nest": 1553, "nested_ani": 1554, "nested_argwher": 1555, "nested_map": 1556, "nested_multi_map": 1557, "prune_nest_at_index": 1558, "prune_nest_at_indic": 1559, "set_nest_at_index": 1560, "set_nest_at_indic": 1561, "layer_norm": [1563, 1564, 1565, 1566], "multinomi": [1568, 1569, 1570, 1571], "static_multinomi": 1572, "randint": [1573, 1574, 1575, 1576], "static_randint": 1577, "random_norm": [1578, 1579, 1580, 1581], "static_random_norm": 1582, "random_uniform": [1583, 1584, 1585, 1586], "static_random_uniform": 1587, "seed": 1588, "shuffl": [1589, 1590, 1591, 1592], "static_shuffl": 1593, "argmax": [1595, 1596, 1597, 1598], "static_argmax": 1599, "argmin": [1600, 1601, 1602, 1603], "static_argmin": 1604, "argwher": [1605, 1606, 1607, 1608], "static_argwher": 1609, "nonzero": [1610, 1611, 1612, 1613], "static_nonzero": 1614, "static_wher": 1616, "depend": [1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "output": [1620, 1621, 1625, 1626, 1630, 1631, 1635, 1636, 1640], "unique_al": [1621, 1623, 1624, 1625], "static_unique_al": 1622, "unique_count": [1626, 1628, 1629, 1630], "static_unique_count": 1627, "unique_invers": [1631, 1633, 1634, 1635], "static_unique_invers": 1632, "unique_valu": [1636, 1638, 1639, 1640], "static_unique_valu": 1637, "argsort": [1642, 1643, 1644, 1645], "static_argsort": 1646, "searchsort": [1647, 1648, 1649, 1650], "static_searchsort": 1651, "static_sort": 1656, "cumprod": [1658, 1659, 1660, 1661], "static_cumprod": 1662, "cumsum": [1663, 1664, 1665, 1666], "static_cumsum": 1667, "einsum": [1668, 1669, 1670, 1671], "max": [1672, 1673, 1674, 1675], "mean": [1676, 1677, 1678, 1679], "min": [1680, 1681, 1682, 1683], "prod": [1684, 1685, 1686, 1687], "std": [1688, 1689, 1690, 1691], "sum": [1692, 1694, 1695, 1696], "static_sum": 1693, "var": [1697, 1699, 1700, 1701], "static_var": 1698, "all": [1703, 1704, 1705, 1706], "static_al": 1707, "ani": [1708, 1709, 1710, 1711], "static_ani": 1712, "glossari": 1713, "content": 1714, "overview": 1714, "quick": 1714, "start": 1714, "citat": 1714, "inspect": 1717, "add_array_spec": 1718, "fn_array_spec": 1719, "relat": 1720, "infrastructur": [1722, 1730], "llvm": 1722, "mlir": 1722, "oneapi": 1722, "exchang": [1723, 1730], "onnx": 1723, "nnef": 1723, "coreml": 1723, "matlab": 1724, "scipi": 1724, "torch": [1724, 1725], "scikit": 1724, "learn": 1724, "theano": 1724, "panda": 1724, "julia": 1724, "apach": [1724, 1727], "spark": 1724, "mllib": 1724, "caff": 1724, "chainer": 1724, "tensorflow": 1724, "1": 1724, "mxnet": 1724, "cntk": 1724, "pytorch": 1724, "flux": 1724, "jax": 1724, "2": 1724, "dex": 1724, "languag": 1724, "tracer": [1725, 1730], "tf": 1725, "jaxpr": 1725, "jit": 1725, "fx": 1725, "compani": [1726, 1730], "quansight": 1726, "modular": 1726, "octoml": 1726, "multi": [1727, 1730], "vendor": [1727, 1728, 1729, 1730], "tvm": 1727, "xla": 1727, "gcc": 1727, "specif": [1728, 1729, 1730], "tensorrt": 1728, "cuda": 1728, "icc": 1729, "icx": 1729, "nvcc": 1729, "doe": 1730, "eagerpi": 1731, "kera": 1731, "thinc": 1731, "tensorli": 1731, "neuropod": 1731, "geglu": 1734, "to_ivy_modul": 1737, "firstlayersiren": 1740, "glorotuniform": 1741, "kaimingnorm": 1743, "Ones": 1744, "siren": 1745, "uniform": 1746, "conv1dtranspos": 1750, "conv2dtranspos": 1752, "conv3dtranspos": 1754, "depthwiseconv2d": 1755, "lstm": 1757, "multiheadattent": 1759, "newtorchmodul": 1762, "layernorm": 1764, "adam": 1766, "lamb": 1767, "lar": 1768, "sgd": 1770, "sequenti": [1771, 1772], "verbos": 1774, "cprint": 1775}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})