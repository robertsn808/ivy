Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_inplace_sizes_valid", "assertions/check_isinstance", "assertions/check_less", "assertions/check_one_way_broadcastable", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/set_jax_backend", "backend_handler/set_numpy_backend", "backend_handler/set_tensorflow_backend", "backend_handler/set_torch_backend", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/extensions", "data_classes/array/extensions/activations", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions", "data_classes/array/extensions/array_methods", "data_classes/array/extensions/array_methods/avg_pool3d", "data_classes/array/extensions/array_methods/diagflat", "data_classes/array/extensions/array_methods/dirichlet", "data_classes/array/extensions/array_methods/exp2", "data_classes/array/extensions/array_methods/flatten", "data_classes/array/extensions/array_methods/fliplr", "data_classes/array/extensions/array_methods/flipud", "data_classes/array/extensions/array_methods/float_power", "data_classes/array/extensions/array_methods/fmax", "data_classes/array/extensions/array_methods/fmod", "data_classes/array/extensions/array_methods/gcd", "data_classes/array/extensions/array_methods/heaviside", "data_classes/array/extensions/array_methods/hstack", "data_classes/array/extensions/array_methods/i0", "data_classes/array/extensions/array_methods/isneginf", "data_classes/array/extensions/array_methods/isposinf", "data_classes/array/extensions/array_methods/kron", "data_classes/array/extensions/array_methods/lcm", "data_classes/array/extensions/array_methods/logaddexp2", "data_classes/array/extensions/array_methods/max_pool1d", "data_classes/array/extensions/array_methods/max_pool2d", "data_classes/array/extensions/array_methods/max_pool3d", "data_classes/array/extensions/array_methods/median", "data_classes/array/extensions/array_methods/moveaxis", "data_classes/array/extensions/array_methods/msort", "data_classes/array/extensions/array_methods/nan_to_num", "data_classes/array/extensions/array_methods/nansum", "data_classes/array/extensions/array_methods/pad", "data_classes/array/extensions/array_methods/rot90", "data_classes/array/extensions/array_methods/sinc", "data_classes/array/extensions/array_methods/top_k", "data_classes/array/extensions/array_methods/trapz", "data_classes/array/extensions/array_methods/vstack", "data_classes/array/extensions/conversions", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions", "data_classes/array/extensions/creation", "data_classes/array/extensions/creation/ArrayWithCreationExtensions", "data_classes/array/extensions/data_type", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions", "data_classes/array/extensions/device", "data_classes/array/extensions/device/ArrayWithDeviceExtensions", "data_classes/array/extensions/elementwise", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions", "data_classes/array/extensions/general", "data_classes/array/extensions/general/ArrayWithGeneralExtensions", "data_classes/array/extensions/gradients", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions", "data_classes/array/extensions/image", "data_classes/array/extensions/image/ArrayWithImageExtension", "data_classes/array/extensions/layers", "data_classes/array/extensions/layers/ArrayWithLayersExtensions", "data_classes/array/extensions/linalg", "data_classes/array/extensions/linalg/ArrayWithLinalgExtensions", "data_classes/array/extensions/losses", "data_classes/array/extensions/losses/ArrayWithLossesExtensions", "data_classes/array/extensions/manipulation", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions", "data_classes/array/extensions/norms", "data_classes/array/extensions/norms/ArrayWithNormsExtensions", "data_classes/array/extensions/random", "data_classes/array/extensions/random/ArrayWithRandomExtensions", "data_classes/array/extensions/searching", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions", "data_classes/array/extensions/set", "data_classes/array/extensions/set/ArrayWithSetExtensions", "data_classes/array/extensions/sorting", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions", "data_classes/array/extensions/statistical", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions", "data_classes/array/extensions/utility", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linalg", "data_classes/array/linalg/ArrayWithLinalg", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/extensions", "data_classes/container/extensions/activations", "data_classes/container/extensions/activations/ContainerWithActivationExtensions", "data_classes/container/extensions/container_methods", "data_classes/container/extensions/container_methods/avg_pool2d", "data_classes/container/extensions/container_methods/avg_pool3d", "data_classes/container/extensions/container_methods/diagflat", "data_classes/container/extensions/container_methods/dirichlet", "data_classes/container/extensions/container_methods/exp2", "data_classes/container/extensions/container_methods/flatten", "data_classes/container/extensions/container_methods/fliplr", "data_classes/container/extensions/container_methods/flipud", "data_classes/container/extensions/container_methods/float_power", "data_classes/container/extensions/container_methods/fmax", "data_classes/container/extensions/container_methods/fmod", "data_classes/container/extensions/container_methods/gcd", "data_classes/container/extensions/container_methods/hamming_window", "data_classes/container/extensions/container_methods/hann_window", "data_classes/container/extensions/container_methods/heaviside", "data_classes/container/extensions/container_methods/hstack", "data_classes/container/extensions/container_methods/i0", "data_classes/container/extensions/container_methods/isneginf", "data_classes/container/extensions/container_methods/isposinf", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/kaiser_window", "data_classes/container/extensions/container_methods/kron", "data_classes/container/extensions/container_methods/lcm", "data_classes/container/extensions/container_methods/logaddexp2", "data_classes/container/extensions/container_methods/max_pool1d", "data_classes/container/extensions/container_methods/max_pool2d", "data_classes/container/extensions/container_methods/max_pool3d", "data_classes/container/extensions/container_methods/median", "data_classes/container/extensions/container_methods/moveaxis", "data_classes/container/extensions/container_methods/msort", "data_classes/container/extensions/container_methods/nan_to_num", "data_classes/container/extensions/container_methods/nansum", "data_classes/container/extensions/container_methods/pad", "data_classes/container/extensions/container_methods/rot90", "data_classes/container/extensions/container_methods/sinc", "data_classes/container/extensions/container_methods/static_avg_pool2d", "data_classes/container/extensions/container_methods/static_avg_pool3d", "data_classes/container/extensions/container_methods/static_diagflat", "data_classes/container/extensions/container_methods/static_dirichlet", "data_classes/container/extensions/container_methods/static_exp2", "data_classes/container/extensions/container_methods/static_flatten", "data_classes/container/extensions/container_methods/static_fliplr", "data_classes/container/extensions/container_methods/static_flipud", "data_classes/container/extensions/container_methods/static_float_power", "data_classes/container/extensions/container_methods/static_fmax", "data_classes/container/extensions/container_methods/static_fmod", "data_classes/container/extensions/container_methods/static_gcd", "data_classes/container/extensions/container_methods/static_hamming_window", "data_classes/container/extensions/container_methods/static_hann_window", "data_classes/container/extensions/container_methods/static_heaviside", "data_classes/container/extensions/container_methods/static_hstack", "data_classes/container/extensions/container_methods/static_i0", "data_classes/container/extensions/container_methods/static_isneginf", "data_classes/container/extensions/container_methods/static_isposinf", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window", "data_classes/container/extensions/container_methods/static_kaiser_window", "data_classes/container/extensions/container_methods/static_kron", "data_classes/container/extensions/container_methods/static_lcm", "data_classes/container/extensions/container_methods/static_logaddexp2", "data_classes/container/extensions/container_methods/static_max_pool1d", "data_classes/container/extensions/container_methods/static_max_pool2d", "data_classes/container/extensions/container_methods/static_max_pool3d", "data_classes/container/extensions/container_methods/static_median", "data_classes/container/extensions/container_methods/static_moveaxis", "data_classes/container/extensions/container_methods/static_msort", "data_classes/container/extensions/container_methods/static_nan_to_num", "data_classes/container/extensions/container_methods/static_nansum", "data_classes/container/extensions/container_methods/static_pad", "data_classes/container/extensions/container_methods/static_rot90", "data_classes/container/extensions/container_methods/static_sinc", "data_classes/container/extensions/container_methods/static_top_k", "data_classes/container/extensions/container_methods/static_triu_indices", "data_classes/container/extensions/container_methods/static_vstack", "data_classes/container/extensions/container_methods/top_k", "data_classes/container/extensions/container_methods/triu_indices", "data_classes/container/extensions/container_methods/vstack", "data_classes/container/extensions/conversions", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions", "data_classes/container/extensions/creation", "data_classes/container/extensions/creation/ContainerWithCreationExtensions", "data_classes/container/extensions/data_type", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions", "data_classes/container/extensions/device", "data_classes/container/extensions/device/ContainerWithDeviceExtensions", "data_classes/container/extensions/elementwise", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions", "data_classes/container/extensions/general", "data_classes/container/extensions/general/ContainerWithGeneralExtensions", "data_classes/container/extensions/gradients", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions", "data_classes/container/extensions/image", "data_classes/container/extensions/image/ContainerWithImageExtensions", "data_classes/container/extensions/layers", "data_classes/container/extensions/layers/ContainerWithLayersExtensions", "data_classes/container/extensions/linalg", "data_classes/container/extensions/linalg/ContainerWithLinalgExtensions", "data_classes/container/extensions/losses", "data_classes/container/extensions/losses/ContainerWithLossesExtensions", "data_classes/container/extensions/manipulation", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions", "data_classes/container/extensions/norms", "data_classes/container/extensions/norms/ContainerWithNormsExtensions", "data_classes/container/extensions/random", "data_classes/container/extensions/random/ContainerWithRandomExtensions", "data_classes/container/extensions/searching", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions", "data_classes/container/extensions/set", "data_classes/container/extensions/set/ContainerWithSetExtensions", "data_classes/container/extensions/sorting", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions", "data_classes/container/extensions/statistical", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions", "data_classes/container/extensions/utility", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linalg", "data_classes/container/linalg/ContainerWithLinalg", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/extensions", "functional/extensions/activations", "functional/extensions/compilation", "functional/extensions/constants", "functional/extensions/creation", "functional/extensions/creation/triu_indices", "functional/extensions/data_type", "functional/extensions/device", "functional/extensions/elementwise", "functional/extensions/elementwise/exp2", "functional/extensions/elementwise/float_power", "functional/extensions/elementwise/fmax", "functional/extensions/elementwise/fmod", "functional/extensions/elementwise/gcd", "functional/extensions/elementwise/isneginf", "functional/extensions/elementwise/isposinf", "functional/extensions/elementwise/lcm", "functional/extensions/elementwise/logaddexp2", "functional/extensions/elementwise/nan_to_num", "functional/extensions/elementwise/nansum", "functional/extensions/elementwise/sinc", "functional/extensions/elementwise/trapz", "functional/extensions/general", "functional/extensions/gradients", "functional/extensions/layers", "functional/extensions/layers/avg_pool2d", "functional/extensions/layers/avg_pool3d", "functional/extensions/layers/hamming_window", "functional/extensions/layers/hann_window", "functional/extensions/layers/kaiser_bessel_derived_window", "functional/extensions/layers/kaiser_window", "functional/extensions/layers/max_pool1d", "functional/extensions/layers/max_pool2d", "functional/extensions/layers/max_pool3d", "functional/extensions/layers/pad", "functional/extensions/layers/vorbis_window", "functional/extensions/linalg", "functional/extensions/linalg/diagflat", "functional/extensions/linalg/kron", "functional/extensions/losses", "functional/extensions/manipulation", "functional/extensions/manipulation/flatten", "functional/extensions/manipulation/fliplr", "functional/extensions/manipulation/flipud", "functional/extensions/manipulation/heaviside", "functional/extensions/manipulation/hstack", "functional/extensions/manipulation/i0", "functional/extensions/manipulation/moveaxis", "functional/extensions/manipulation/ndenumerate", "functional/extensions/manipulation/ndindex", "functional/extensions/manipulation/rot90", "functional/extensions/manipulation/top_k", "functional/extensions/manipulation/vstack", "functional/extensions/meta", "functional/extensions/nest", "functional/extensions/norms", "functional/extensions/random", "functional/extensions/random/beta", "functional/extensions/random/dirichlet", "functional/extensions/random/gamma", "functional/extensions/searching", "functional/extensions/set", "functional/extensions/sorting", "functional/extensions/sorting/msort", "functional/extensions/sparse_array", "functional/extensions/sparse_array/is_ivy_sparse_array", "functional/extensions/sparse_array/is_native_sparse_array", "functional/extensions/sparse_array/native_sparse_array", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape", "functional/extensions/statistical", "functional/extensions/statistical/median", "functional/extensions/utility", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/deserialize", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/get", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_frontend_array", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_array", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linalg", "functional/ivy/linalg/cholesky", "functional/ivy/linalg/cholesky/cholesky_array", "functional/ivy/linalg/cholesky/cholesky_container", "functional/ivy/linalg/cholesky/cholesky_functional", "functional/ivy/linalg/cholesky/static_cholesky_container", "functional/ivy/linalg/cross", "functional/ivy/linalg/cross/cross_array", "functional/ivy/linalg/cross/cross_container", "functional/ivy/linalg/cross/cross_functional", "functional/ivy/linalg/cross/static_cross_container", "functional/ivy/linalg/det", "functional/ivy/linalg/det/det_array", "functional/ivy/linalg/det/det_container", "functional/ivy/linalg/det/det_functional", "functional/ivy/linalg/det/static_det_container", "functional/ivy/linalg/diag", "functional/ivy/linalg/diag/diag_array", "functional/ivy/linalg/diag/diag_container", "functional/ivy/linalg/diag/diag_functional", "functional/ivy/linalg/diag/static_diag_container", "functional/ivy/linalg/diagonal", "functional/ivy/linalg/diagonal/diagonal_array", "functional/ivy/linalg/diagonal/diagonal_container", "functional/ivy/linalg/diagonal/diagonal_functional", "functional/ivy/linalg/diagonal/static_diagonal_container", "functional/ivy/linalg/eigh", "functional/ivy/linalg/eigh/eigh_array", "functional/ivy/linalg/eigh/eigh_container", "functional/ivy/linalg/eigh/eigh_functional", "functional/ivy/linalg/eigvalsh", "functional/ivy/linalg/eigvalsh/eigvalsh_array", "functional/ivy/linalg/eigvalsh/eigvalsh_functional", "functional/ivy/linalg/inner", "functional/ivy/linalg/inner/inner_array", "functional/ivy/linalg/inner/inner_container", "functional/ivy/linalg/inner/inner_functional", "functional/ivy/linalg/inner/static_inner_container", "functional/ivy/linalg/inv", "functional/ivy/linalg/inv/inv_array", "functional/ivy/linalg/inv/inv_container", "functional/ivy/linalg/inv/inv_functional", "functional/ivy/linalg/inv/static_inv_container", "functional/ivy/linalg/matmul", "functional/ivy/linalg/matmul/matmul_array", "functional/ivy/linalg/matmul/matmul_container", "functional/ivy/linalg/matmul/matmul_functional", "functional/ivy/linalg/matmul/static_matmul_container", "functional/ivy/linalg/matrix_norm", "functional/ivy/linalg/matrix_norm/matrix_norm_array", "functional/ivy/linalg/matrix_norm/matrix_norm_container", "functional/ivy/linalg/matrix_norm/matrix_norm_functional", "functional/ivy/linalg/matrix_norm/static_matrix_norm_container", "functional/ivy/linalg/matrix_power", "functional/ivy/linalg/matrix_power/matrix_power_container", "functional/ivy/linalg/matrix_power/matrix_power_functional", "functional/ivy/linalg/matrix_power/static_matrix_power_container", "functional/ivy/linalg/matrix_rank", "functional/ivy/linalg/matrix_rank/matrix_rank_array", "functional/ivy/linalg/matrix_rank/matrix_rank_container", "functional/ivy/linalg/matrix_rank/matrix_rank_functional", "functional/ivy/linalg/matrix_rank/static_matrix_rank_container", "functional/ivy/linalg/matrix_transpose", "functional/ivy/linalg/matrix_transpose/matrix_transpose_array", "functional/ivy/linalg/matrix_transpose/matrix_transpose_container", "functional/ivy/linalg/matrix_transpose/matrix_transpose_functional", "functional/ivy/linalg/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linalg/outer", "functional/ivy/linalg/outer/outer_array", "functional/ivy/linalg/outer/outer_container", "functional/ivy/linalg/outer/outer_functional", "functional/ivy/linalg/outer/static_outer_container", "functional/ivy/linalg/pinv", "functional/ivy/linalg/pinv/pinv_array", "functional/ivy/linalg/pinv/pinv_container", "functional/ivy/linalg/pinv/pinv_functional", "functional/ivy/linalg/pinv/static_pinv_container", "functional/ivy/linalg/qr", "functional/ivy/linalg/qr/qr_array", "functional/ivy/linalg/qr/qr_container", "functional/ivy/linalg/qr/qr_functional", "functional/ivy/linalg/qr/static_qr_container", "functional/ivy/linalg/slogdet", "functional/ivy/linalg/slogdet/slogdet_array", "functional/ivy/linalg/slogdet/slogdet_container", "functional/ivy/linalg/slogdet/slogdet_functional", "functional/ivy/linalg/slogdet/static_slogdet_container", "functional/ivy/linalg/solve", "functional/ivy/linalg/solve/solve_array", "functional/ivy/linalg/solve/solve_container", "functional/ivy/linalg/solve/solve_functional", "functional/ivy/linalg/solve/static_solve_container", "functional/ivy/linalg/svd", "functional/ivy/linalg/svd/static_svd_container", "functional/ivy/linalg/svd/svd_array", "functional/ivy/linalg/svd/svd_container", "functional/ivy/linalg/svd/svd_functional", "functional/ivy/linalg/svdvals", "functional/ivy/linalg/svdvals/static_svdvals_container", "functional/ivy/linalg/svdvals/svdvals_array", "functional/ivy/linalg/svdvals/svdvals_container", "functional/ivy/linalg/svdvals/svdvals_functional", "functional/ivy/linalg/tensordot", "functional/ivy/linalg/tensordot/static_tensordot_container", "functional/ivy/linalg/tensordot/tensordot_array", "functional/ivy/linalg/tensordot/tensordot_container", "functional/ivy/linalg/tensordot/tensordot_functional", "functional/ivy/linalg/trace", "functional/ivy/linalg/trace/static_trace_container", "functional/ivy/linalg/trace/trace_array", "functional/ivy/linalg/trace/trace_container", "functional/ivy/linalg/trace/trace_functional", "functional/ivy/linalg/vander", "functional/ivy/linalg/vander/static_vander_container", "functional/ivy/linalg/vander/vander_array", "functional/ivy/linalg/vander/vander_container", "functional/ivy/linalg/vander/vander_functional", "functional/ivy/linalg/vecdot", "functional/ivy/linalg/vecdot/static_vecdot_container", "functional/ivy/linalg/vecdot/vecdot_array", "functional/ivy/linalg/vecdot/vecdot_container", "functional/ivy/linalg/vecdot/vecdot_functional", "functional/ivy/linalg/vector_norm", "functional/ivy/linalg/vector_norm/static_vector_norm_container", "functional/ivy/linalg/vector_norm/vector_norm_array", "functional/ivy/linalg/vector_norm/vector_norm_container", "functional/ivy/linalg/vector_norm/vector_norm_functional", "functional/ivy/linalg/vector_to_skew_symmetric_matrix", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/linear_algebra", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "related_work", "related_work/api_standards", "related_work/compiler_infrastructure", "related_work/exchange_formats", "related_work/frameworks", "related_work/graph_tracers", "related_work/ml_unifying_companies", "related_work/multi_vendor_compiler_frameworks", "related_work/vendor_specific_apis", "related_work/vendor_specific_compilers", "related_work/what_does_ivy_add", "related_work/wrapper_frameworks", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/module/NewTorchModule", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_inplace_sizes_valid.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_one_way_broadcastable.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/set_jax_backend.rst", "backend_handler/set_numpy_backend.rst", "backend_handler/set_tensorflow_backend.rst", "backend_handler/set_torch_backend.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/activations.rst", "data_classes/array/extensions/activations/ArrayWithActivationsExtensions.rst", "data_classes/array/extensions/array_methods.rst", "data_classes/array/extensions/array_methods/avg_pool3d.rst", "data_classes/array/extensions/array_methods/diagflat.rst", "data_classes/array/extensions/array_methods/dirichlet.rst", "data_classes/array/extensions/array_methods/exp2.rst", "data_classes/array/extensions/array_methods/flatten.rst", "data_classes/array/extensions/array_methods/fliplr.rst", "data_classes/array/extensions/array_methods/flipud.rst", "data_classes/array/extensions/array_methods/float_power.rst", "data_classes/array/extensions/array_methods/fmax.rst", "data_classes/array/extensions/array_methods/fmod.rst", "data_classes/array/extensions/array_methods/gcd.rst", "data_classes/array/extensions/array_methods/heaviside.rst", "data_classes/array/extensions/array_methods/hstack.rst", "data_classes/array/extensions/array_methods/i0.rst", "data_classes/array/extensions/array_methods/isneginf.rst", "data_classes/array/extensions/array_methods/isposinf.rst", "data_classes/array/extensions/array_methods/kron.rst", "data_classes/array/extensions/array_methods/lcm.rst", "data_classes/array/extensions/array_methods/logaddexp2.rst", "data_classes/array/extensions/array_methods/max_pool1d.rst", "data_classes/array/extensions/array_methods/max_pool2d.rst", "data_classes/array/extensions/array_methods/max_pool3d.rst", "data_classes/array/extensions/array_methods/median.rst", "data_classes/array/extensions/array_methods/moveaxis.rst", "data_classes/array/extensions/array_methods/msort.rst", "data_classes/array/extensions/array_methods/nan_to_num.rst", "data_classes/array/extensions/array_methods/nansum.rst", "data_classes/array/extensions/array_methods/pad.rst", "data_classes/array/extensions/array_methods/rot90.rst", "data_classes/array/extensions/array_methods/sinc.rst", "data_classes/array/extensions/array_methods/top_k.rst", "data_classes/array/extensions/array_methods/trapz.rst", "data_classes/array/extensions/array_methods/vstack.rst", "data_classes/array/extensions/conversions.rst", "data_classes/array/extensions/conversions/ArrayWithConversionsExtensions.rst", "data_classes/array/extensions/creation.rst", "data_classes/array/extensions/creation/ArrayWithCreationExtensions.rst", "data_classes/array/extensions/data_type.rst", "data_classes/array/extensions/data_type/ArrayWithData_typeExtensions.rst", "data_classes/array/extensions/device.rst", "data_classes/array/extensions/device/ArrayWithDeviceExtensions.rst", "data_classes/array/extensions/elementwise.rst", "data_classes/array/extensions/elementwise/ArrayWithElementWiseExtensions.rst", "data_classes/array/extensions/general.rst", "data_classes/array/extensions/general/ArrayWithGeneralExtensions.rst", "data_classes/array/extensions/gradients.rst", "data_classes/array/extensions/gradients/ArrayWithGradientsExtensions.rst", "data_classes/array/extensions/image.rst", "data_classes/array/extensions/image/ArrayWithImageExtension.rst", "data_classes/array/extensions/layers.rst", "data_classes/array/extensions/layers/ArrayWithLayersExtensions.rst", "data_classes/array/extensions/linalg.rst", "data_classes/array/extensions/linalg/ArrayWithLinalgExtensions.rst", "data_classes/array/extensions/losses.rst", "data_classes/array/extensions/losses/ArrayWithLossesExtensions.rst", "data_classes/array/extensions/manipulation.rst", "data_classes/array/extensions/manipulation/ArrayWithManipulationExtensions.rst", "data_classes/array/extensions/norms.rst", "data_classes/array/extensions/norms/ArrayWithNormsExtensions.rst", "data_classes/array/extensions/random.rst", "data_classes/array/extensions/random/ArrayWithRandomExtensions.rst", "data_classes/array/extensions/searching.rst", "data_classes/array/extensions/searching/ArrayWithSearchingExtensions.rst", "data_classes/array/extensions/set.rst", "data_classes/array/extensions/set/ArrayWithSetExtensions.rst", "data_classes/array/extensions/sorting.rst", "data_classes/array/extensions/sorting/ArrayWithSortingExtensions.rst", "data_classes/array/extensions/statistical.rst", "data_classes/array/extensions/statistical/ArrayWithStatisticalExtensions.rst", "data_classes/array/extensions/utility.rst", "data_classes/array/extensions/utility/ArrayWithUtilityExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linalg.rst", "data_classes/array/linalg/ArrayWithLinalg.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/activations.rst", "data_classes/container/extensions/activations/ContainerWithActivationExtensions.rst", "data_classes/container/extensions/container_methods.rst", "data_classes/container/extensions/container_methods/avg_pool2d.rst", "data_classes/container/extensions/container_methods/avg_pool3d.rst", "data_classes/container/extensions/container_methods/diagflat.rst", "data_classes/container/extensions/container_methods/dirichlet.rst", "data_classes/container/extensions/container_methods/exp2.rst", "data_classes/container/extensions/container_methods/flatten.rst", "data_classes/container/extensions/container_methods/fliplr.rst", "data_classes/container/extensions/container_methods/flipud.rst", "data_classes/container/extensions/container_methods/float_power.rst", "data_classes/container/extensions/container_methods/fmax.rst", "data_classes/container/extensions/container_methods/fmod.rst", "data_classes/container/extensions/container_methods/gcd.rst", "data_classes/container/extensions/container_methods/hamming_window.rst", "data_classes/container/extensions/container_methods/hann_window.rst", "data_classes/container/extensions/container_methods/heaviside.rst", "data_classes/container/extensions/container_methods/hstack.rst", "data_classes/container/extensions/container_methods/i0.rst", "data_classes/container/extensions/container_methods/isneginf.rst", "data_classes/container/extensions/container_methods/isposinf.rst", "data_classes/container/extensions/container_methods/kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/kaiser_window.rst", "data_classes/container/extensions/container_methods/kron.rst", "data_classes/container/extensions/container_methods/lcm.rst", "data_classes/container/extensions/container_methods/logaddexp2.rst", "data_classes/container/extensions/container_methods/max_pool1d.rst", "data_classes/container/extensions/container_methods/max_pool2d.rst", "data_classes/container/extensions/container_methods/max_pool3d.rst", "data_classes/container/extensions/container_methods/median.rst", "data_classes/container/extensions/container_methods/moveaxis.rst", "data_classes/container/extensions/container_methods/msort.rst", "data_classes/container/extensions/container_methods/nan_to_num.rst", "data_classes/container/extensions/container_methods/nansum.rst", "data_classes/container/extensions/container_methods/pad.rst", "data_classes/container/extensions/container_methods/rot90.rst", "data_classes/container/extensions/container_methods/sinc.rst", "data_classes/container/extensions/container_methods/static_avg_pool2d.rst", "data_classes/container/extensions/container_methods/static_avg_pool3d.rst", "data_classes/container/extensions/container_methods/static_diagflat.rst", "data_classes/container/extensions/container_methods/static_dirichlet.rst", "data_classes/container/extensions/container_methods/static_exp2.rst", "data_classes/container/extensions/container_methods/static_flatten.rst", "data_classes/container/extensions/container_methods/static_fliplr.rst", "data_classes/container/extensions/container_methods/static_flipud.rst", "data_classes/container/extensions/container_methods/static_float_power.rst", "data_classes/container/extensions/container_methods/static_fmax.rst", "data_classes/container/extensions/container_methods/static_fmod.rst", "data_classes/container/extensions/container_methods/static_gcd.rst", "data_classes/container/extensions/container_methods/static_hamming_window.rst", "data_classes/container/extensions/container_methods/static_hann_window.rst", "data_classes/container/extensions/container_methods/static_heaviside.rst", "data_classes/container/extensions/container_methods/static_hstack.rst", "data_classes/container/extensions/container_methods/static_i0.rst", "data_classes/container/extensions/container_methods/static_isneginf.rst", "data_classes/container/extensions/container_methods/static_isposinf.rst", "data_classes/container/extensions/container_methods/static_kaiser_bessel_derived_window.rst", "data_classes/container/extensions/container_methods/static_kaiser_window.rst", "data_classes/container/extensions/container_methods/static_kron.rst", "data_classes/container/extensions/container_methods/static_lcm.rst", "data_classes/container/extensions/container_methods/static_logaddexp2.rst", "data_classes/container/extensions/container_methods/static_max_pool1d.rst", "data_classes/container/extensions/container_methods/static_max_pool2d.rst", "data_classes/container/extensions/container_methods/static_max_pool3d.rst", "data_classes/container/extensions/container_methods/static_median.rst", "data_classes/container/extensions/container_methods/static_moveaxis.rst", "data_classes/container/extensions/container_methods/static_msort.rst", "data_classes/container/extensions/container_methods/static_nan_to_num.rst", "data_classes/container/extensions/container_methods/static_nansum.rst", "data_classes/container/extensions/container_methods/static_pad.rst", "data_classes/container/extensions/container_methods/static_rot90.rst", "data_classes/container/extensions/container_methods/static_sinc.rst", "data_classes/container/extensions/container_methods/static_top_k.rst", "data_classes/container/extensions/container_methods/static_triu_indices.rst", "data_classes/container/extensions/container_methods/static_vstack.rst", "data_classes/container/extensions/container_methods/top_k.rst", "data_classes/container/extensions/container_methods/triu_indices.rst", "data_classes/container/extensions/container_methods/vstack.rst", "data_classes/container/extensions/conversions.rst", "data_classes/container/extensions/conversions/ContainerWithConversionExtensions.rst", "data_classes/container/extensions/creation.rst", "data_classes/container/extensions/creation/ContainerWithCreationExtensions.rst", "data_classes/container/extensions/data_type.rst", "data_classes/container/extensions/data_type/ContainerWithData_typeExtensions.rst", "data_classes/container/extensions/device.rst", "data_classes/container/extensions/device/ContainerWithDeviceExtensions.rst", "data_classes/container/extensions/elementwise.rst", "data_classes/container/extensions/elementwise/ContainerWithElementWiseExtensions.rst", "data_classes/container/extensions/general.rst", "data_classes/container/extensions/general/ContainerWithGeneralExtensions.rst", "data_classes/container/extensions/gradients.rst", "data_classes/container/extensions/gradients/ContainerWithGradientsExtensions.rst", "data_classes/container/extensions/image.rst", "data_classes/container/extensions/image/ContainerWithImageExtensions.rst", "data_classes/container/extensions/layers.rst", "data_classes/container/extensions/layers/ContainerWithLayersExtensions.rst", "data_classes/container/extensions/linalg.rst", "data_classes/container/extensions/linalg/ContainerWithLinalgExtensions.rst", "data_classes/container/extensions/losses.rst", "data_classes/container/extensions/losses/ContainerWithLossesExtensions.rst", "data_classes/container/extensions/manipulation.rst", "data_classes/container/extensions/manipulation/ContainerWithManipulationExtensions.rst", "data_classes/container/extensions/norms.rst", "data_classes/container/extensions/norms/ContainerWithNormsExtensions.rst", "data_classes/container/extensions/random.rst", "data_classes/container/extensions/random/ContainerWithRandomExtensions.rst", "data_classes/container/extensions/searching.rst", "data_classes/container/extensions/searching/ContainerWithSearchingExtensions.rst", "data_classes/container/extensions/set.rst", "data_classes/container/extensions/set/ContainerWithSetExtensions.rst", "data_classes/container/extensions/sorting.rst", "data_classes/container/extensions/sorting/ContainerWithSortingExtensions.rst", "data_classes/container/extensions/statistical.rst", "data_classes/container/extensions/statistical/ContainerWithStatisticalExtensions.rst", "data_classes/container/extensions/utility.rst", "data_classes/container/extensions/utility/ContainerWithUtilityExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linalg.rst", "data_classes/container/linalg/ContainerWithLinalg.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/extensions.rst", "functional/extensions/activations.rst", "functional/extensions/compilation.rst", "functional/extensions/constants.rst", "functional/extensions/creation.rst", "functional/extensions/creation/triu_indices.rst", "functional/extensions/data_type.rst", "functional/extensions/device.rst", "functional/extensions/elementwise.rst", "functional/extensions/elementwise/exp2.rst", "functional/extensions/elementwise/float_power.rst", "functional/extensions/elementwise/fmax.rst", "functional/extensions/elementwise/fmod.rst", "functional/extensions/elementwise/gcd.rst", "functional/extensions/elementwise/isneginf.rst", "functional/extensions/elementwise/isposinf.rst", "functional/extensions/elementwise/lcm.rst", "functional/extensions/elementwise/logaddexp2.rst", "functional/extensions/elementwise/nan_to_num.rst", "functional/extensions/elementwise/nansum.rst", "functional/extensions/elementwise/sinc.rst", "functional/extensions/elementwise/trapz.rst", "functional/extensions/general.rst", "functional/extensions/gradients.rst", "functional/extensions/layers.rst", "functional/extensions/layers/avg_pool2d.rst", "functional/extensions/layers/avg_pool3d.rst", "functional/extensions/layers/hamming_window.rst", "functional/extensions/layers/hann_window.rst", "functional/extensions/layers/kaiser_bessel_derived_window.rst", "functional/extensions/layers/kaiser_window.rst", "functional/extensions/layers/max_pool1d.rst", "functional/extensions/layers/max_pool2d.rst", "functional/extensions/layers/max_pool3d.rst", "functional/extensions/layers/pad.rst", "functional/extensions/layers/vorbis_window.rst", "functional/extensions/linalg.rst", "functional/extensions/linalg/diagflat.rst", "functional/extensions/linalg/kron.rst", "functional/extensions/losses.rst", "functional/extensions/manipulation.rst", "functional/extensions/manipulation/flatten.rst", "functional/extensions/manipulation/fliplr.rst", "functional/extensions/manipulation/flipud.rst", "functional/extensions/manipulation/heaviside.rst", "functional/extensions/manipulation/hstack.rst", "functional/extensions/manipulation/i0.rst", "functional/extensions/manipulation/moveaxis.rst", "functional/extensions/manipulation/ndenumerate.rst", "functional/extensions/manipulation/ndindex.rst", "functional/extensions/manipulation/rot90.rst", "functional/extensions/manipulation/top_k.rst", "functional/extensions/manipulation/vstack.rst", "functional/extensions/meta.rst", "functional/extensions/nest.rst", "functional/extensions/norms.rst", "functional/extensions/random.rst", "functional/extensions/random/beta.rst", "functional/extensions/random/dirichlet.rst", "functional/extensions/random/gamma.rst", "functional/extensions/searching.rst", "functional/extensions/set.rst", "functional/extensions/sorting.rst", "functional/extensions/sorting/msort.rst", "functional/extensions/sparse_array.rst", "functional/extensions/sparse_array/is_ivy_sparse_array.rst", "functional/extensions/sparse_array/is_native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array.rst", "functional/extensions/sparse_array/native_sparse_array_to_indices_values_and_shape.rst", "functional/extensions/statistical.rst", "functional/extensions/statistical/median.rst", "functional/extensions/utility.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/deserialize.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/get.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_frontend_array.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_array.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linalg.rst", "functional/ivy/linalg/cholesky.rst", "functional/ivy/linalg/cholesky/cholesky_array.rst", "functional/ivy/linalg/cholesky/cholesky_container.rst", "functional/ivy/linalg/cholesky/cholesky_functional.rst", "functional/ivy/linalg/cholesky/static_cholesky_container.rst", "functional/ivy/linalg/cross.rst", "functional/ivy/linalg/cross/cross_array.rst", "functional/ivy/linalg/cross/cross_container.rst", "functional/ivy/linalg/cross/cross_functional.rst", "functional/ivy/linalg/cross/static_cross_container.rst", "functional/ivy/linalg/det.rst", "functional/ivy/linalg/det/det_array.rst", "functional/ivy/linalg/det/det_container.rst", "functional/ivy/linalg/det/det_functional.rst", "functional/ivy/linalg/det/static_det_container.rst", "functional/ivy/linalg/diag.rst", "functional/ivy/linalg/diag/diag_array.rst", "functional/ivy/linalg/diag/diag_container.rst", "functional/ivy/linalg/diag/diag_functional.rst", "functional/ivy/linalg/diag/static_diag_container.rst", "functional/ivy/linalg/diagonal.rst", "functional/ivy/linalg/diagonal/diagonal_array.rst", "functional/ivy/linalg/diagonal/diagonal_container.rst", "functional/ivy/linalg/diagonal/diagonal_functional.rst", "functional/ivy/linalg/diagonal/static_diagonal_container.rst", "functional/ivy/linalg/eigh.rst", "functional/ivy/linalg/eigh/eigh_array.rst", "functional/ivy/linalg/eigh/eigh_container.rst", "functional/ivy/linalg/eigh/eigh_functional.rst", "functional/ivy/linalg/eigvalsh.rst", "functional/ivy/linalg/eigvalsh/eigvalsh_array.rst", "functional/ivy/linalg/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linalg/inner.rst", "functional/ivy/linalg/inner/inner_array.rst", "functional/ivy/linalg/inner/inner_container.rst", "functional/ivy/linalg/inner/inner_functional.rst", "functional/ivy/linalg/inner/static_inner_container.rst", "functional/ivy/linalg/inv.rst", "functional/ivy/linalg/inv/inv_array.rst", "functional/ivy/linalg/inv/inv_container.rst", "functional/ivy/linalg/inv/inv_functional.rst", "functional/ivy/linalg/inv/static_inv_container.rst", "functional/ivy/linalg/matmul.rst", "functional/ivy/linalg/matmul/matmul_array.rst", "functional/ivy/linalg/matmul/matmul_container.rst", "functional/ivy/linalg/matmul/matmul_functional.rst", "functional/ivy/linalg/matmul/static_matmul_container.rst", "functional/ivy/linalg/matrix_norm.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_array.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_container.rst", "functional/ivy/linalg/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linalg/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linalg/matrix_power.rst", "functional/ivy/linalg/matrix_power/matrix_power_container.rst", "functional/ivy/linalg/matrix_power/matrix_power_functional.rst", "functional/ivy/linalg/matrix_power/static_matrix_power_container.rst", "functional/ivy/linalg/matrix_rank.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_array.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_container.rst", "functional/ivy/linalg/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linalg/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linalg/matrix_transpose.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linalg/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linalg/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linalg/outer.rst", "functional/ivy/linalg/outer/outer_array.rst", "functional/ivy/linalg/outer/outer_container.rst", "functional/ivy/linalg/outer/outer_functional.rst", "functional/ivy/linalg/outer/static_outer_container.rst", "functional/ivy/linalg/pinv.rst", "functional/ivy/linalg/pinv/pinv_array.rst", "functional/ivy/linalg/pinv/pinv_container.rst", "functional/ivy/linalg/pinv/pinv_functional.rst", "functional/ivy/linalg/pinv/static_pinv_container.rst", "functional/ivy/linalg/qr.rst", "functional/ivy/linalg/qr/qr_array.rst", "functional/ivy/linalg/qr/qr_container.rst", "functional/ivy/linalg/qr/qr_functional.rst", "functional/ivy/linalg/qr/static_qr_container.rst", "functional/ivy/linalg/slogdet.rst", "functional/ivy/linalg/slogdet/slogdet_array.rst", "functional/ivy/linalg/slogdet/slogdet_container.rst", "functional/ivy/linalg/slogdet/slogdet_functional.rst", "functional/ivy/linalg/slogdet/static_slogdet_container.rst", "functional/ivy/linalg/solve.rst", "functional/ivy/linalg/solve/solve_array.rst", "functional/ivy/linalg/solve/solve_container.rst", "functional/ivy/linalg/solve/solve_functional.rst", "functional/ivy/linalg/solve/static_solve_container.rst", "functional/ivy/linalg/svd.rst", "functional/ivy/linalg/svd/static_svd_container.rst", "functional/ivy/linalg/svd/svd_array.rst", "functional/ivy/linalg/svd/svd_container.rst", "functional/ivy/linalg/svd/svd_functional.rst", "functional/ivy/linalg/svdvals.rst", "functional/ivy/linalg/svdvals/static_svdvals_container.rst", "functional/ivy/linalg/svdvals/svdvals_array.rst", "functional/ivy/linalg/svdvals/svdvals_container.rst", "functional/ivy/linalg/svdvals/svdvals_functional.rst", "functional/ivy/linalg/tensordot.rst", "functional/ivy/linalg/tensordot/static_tensordot_container.rst", "functional/ivy/linalg/tensordot/tensordot_array.rst", "functional/ivy/linalg/tensordot/tensordot_container.rst", "functional/ivy/linalg/tensordot/tensordot_functional.rst", "functional/ivy/linalg/trace.rst", "functional/ivy/linalg/trace/static_trace_container.rst", "functional/ivy/linalg/trace/trace_array.rst", "functional/ivy/linalg/trace/trace_container.rst", "functional/ivy/linalg/trace/trace_functional.rst", "functional/ivy/linalg/vander.rst", "functional/ivy/linalg/vander/static_vander_container.rst", "functional/ivy/linalg/vander/vander_array.rst", "functional/ivy/linalg/vander/vander_container.rst", "functional/ivy/linalg/vander/vander_functional.rst", "functional/ivy/linalg/vecdot.rst", "functional/ivy/linalg/vecdot/static_vecdot_container.rst", "functional/ivy/linalg/vecdot/vecdot_array.rst", "functional/ivy/linalg/vecdot/vecdot_container.rst", "functional/ivy/linalg/vecdot/vecdot_functional.rst", "functional/ivy/linalg/vector_norm.rst", "functional/ivy/linalg/vector_norm/static_vector_norm_container.rst", "functional/ivy/linalg/vector_norm/vector_norm_array.rst", "functional/ivy/linalg/vector_norm/vector_norm_container.rst", "functional/ivy/linalg/vector_norm/vector_norm_functional.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linalg/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "related_work.rst", "related_work/api_standards.rst", "related_work/compiler_infrastructure.rst", "related_work/exchange_formats.rst", "related_work/frameworks.rst", "related_work/graph_tracers.rst", "related_work/ml_unifying_companies.rst", "related_work/multi_vendor_compiler_frameworks.rst", "related_work/vendor_specific_apis.rst", "related_work/vendor_specific_compilers.rst", "related_work/what_does_ivy_add.rst", "related_work/wrapper_frameworks.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/module/NewTorchModule.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_inplace_sizes_valid", "check_isinstance", "check_less", "check_one_way_broadcastable", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "set_jax_backend", "set_numpy_backend", "set_tensorflow_backend", "set_torch_backend", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Extensions", "Activations", "ArrayWithActivationsExtensions", "Array methods", "avg_pool3d array", "diagflat array", "dirichlet array", "exp2 array", "flatten array", "fliplr array", "flipud array", "float_power array", "fmax array", "fmod array", "gcd array", "heaviside array", "hstack array", "i0 array", "isneginf array", "isposinf array", "kron array", "lcm array", "logaddexp2 array", "max_pool1d array", "max_pool2d array", "max_pool3d array", "median array", "moveaxis array", "msort array", "nan_to_num array", "nansum array", "pad array", "rot90 array", "sinc array", "top_k array", "trapz array", "vstack array", "Conversions", "ArrayWithConversionsExtensions", "Creation", "ArrayWithCreationExtensions", "Data type", "ArrayWithData_typeExtensions", "Device", "ArrayWithDeviceExtensions", "Elementwise", "ArrayWithElementWiseExtensions", "General", "ArrayWithGeneralExtensions", "Gradients", "ArrayWithGradientsExtensions", "Image", "ArrayWithImageExtension", "Layers", "ArrayWithLayersExtensions", "Linalg", "ArrayWithLinalgExtensions", "Losses", "ArrayWithLossesExtensions", "Manipulation", "ArrayWithManipulationExtensions", "Norms", "ArrayWithNormsExtensions", "Random", "ArrayWithRandomExtensions", "Searching", "ArrayWithSearchingExtensions", "Set", "ArrayWithSetExtensions", "Sorting", "ArrayWithSortingExtensions", "Statistical", "ArrayWithStatisticalExtensions", "Utility", "ArrayWithUtilityExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linalg", "ArrayWithLinalg", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Extensions", "Activations", "ContainerWithActivationExtensions", "Container methods", "avg_pool2d container", "avg_pool3d container", "diagflat container", "dirichlet container", "exp2 container", "flatten container", "fliplr container", "flipud container", "float_power container", "fmax container", "fmod container", "gcd container", "hamming_window container", "hann_window container", "heaviside container", "hstack container", "i0 container", "isneginf container", "isposinf container", "kaiser_bessel_derived_window container", "kaiser_window container", "kron container", "lcm container", "logaddexp2 container", "max_pool1d container", "max_pool2d container", "max_pool3d container", "median container", "moveaxis container", "msort container", "nan_to_num container", "nansum container", "pad container", "rot90 container", "sinc container", "static_avg_pool2d container", "static_avg_pool3d container", "static_diagflat container", "static_dirichlet container", "static_exp2 container", "static_flatten container", "static_fliplr container", "static_flipud container", "static_float_power container", "static_fmax container", "static_fmod container", "static_gcd container", "static_hamming_window container", "static_hann_window container", "static_heaviside container", "static_hstack container", "static_i0 container", "static_isneginf container", "static_isposinf container", "static_kaiser_bessel_derived_window container", "static_kaiser_window container", "static_kron container", "static_lcm container", "static_logaddexp2 container", "static_max_pool1d container", "static_max_pool2d container", "static_max_pool3d container", "static_median container", "static_moveaxis container", "static_msort container", "static_nan_to_num container", "static_nansum container", "static_pad container", "static_rot90 container", "static_sinc container", "static_top_k container", "static_triu_indices container", "static_vstack container", "top_k container", "triu_indices container", "vstack container", "Conversions", "ContainerWithConversionExtensions", "Creation", "ContainerWithCreationExtensions", "Data type", "ContainerWithData_typeExtensions", "Device", "ContainerWithDeviceExtensions", "Elementwise", "ContainerWithElementWiseExtensions", "General", "ContainerWithGeneralExtensions", "Gradients", "ContainerWithGradientsExtensions", "Image", "ContainerWithImageExtensions", "Layers", "ContainerWithLayersExtensions", "Linalg", "ContainerWithLinalgExtensions", "Losses", "ContainerWithLossesExtensions", "Manipulation", "ContainerWithManipulationExtensions", "Norms", "ContainerWithNormsExtensions", "Random", "ContainerWithRandomExtensions", "Searching", "ContainerWithSearchingExtensions", "Set", "ContainerWithSetExtensions", "Sorting", "ContainerWithSortingExtensions", "Statistical", "ContainerWithStatisticalExtensions", "Utility", "ContainerWithUtilityExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linalg", "ContainerWithLinalg", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "Extensions", "Activations", "Compilation", "Constants", "Creation", "triu_indices", "Data type", "Device", "Elementwise", "exp2", "float_power", "fmax", "fmod", "gcd", "isneginf", "isposinf", "lcm", "logaddexp2", "nan_to_num", "nansum", "sinc", "trapz", "General", "Gradients", "Layers", "avg_pool2d", "avg_pool3d", "hamming_window", "hann_window", "kaiser_bessel_derived_window", "kaiser_window", "max_pool1d", "max_pool2d", "max_pool3d", "pad", "vorbis_window", "Linalg", "diagflat", "kron", "Losses", "Manipulation", "flatten", "fliplr", "flipud", "heaviside", "hstack", "i0", "moveaxis", "ndenumerate", "ndindex", "rot90", "top_k", "vstack", "Meta", "Nest", "Norms", "Random", "beta", "dirichlet", "gamma", "Searching", "Set", "Sorting", "msort", "Sparse array", "is_ivy_sparse_array", "is_native_sparse_array", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "Statistical", "median", "Utility", "&lt;no title&gt;", "Activations", "deserialize", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "get", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "&lt;no title&gt;", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_frontend_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Array.is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linalg", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "ivy.Array.diag", "ivy.Container.diag", "ivy.diag", "ivy.Container.static_diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "&lt;no title&gt;", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Related Work", "API Standards", "Compiler Infrastructure", "Exchange Formats", "Frameworks", "Graph Tracers", "ML-Unifying Companies", "Multi-Vendor Compiler Frameworks", "Vendor-Specific APIs", "Vendor-Specific Compilers", "What does Ivy Add?", "Wrapper Frameworks", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "NewTorchModule", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 19, 23, 26, 33, 34, 35, 41, 42, 133, 134, 298, 299, 338, 341, 349, 354, 372, 452, 453, 1026, 1219, 1338, 1364, 1367, 1368, 1370, 1742, 1758, 1759], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 341, 343, 344, 345, 346, 347, 352, 353, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 463, 464, 469, 474, 479, 484, 489, 494, 495, 496, 497, 498, 499, 502, 506, 507, 508, 509, 512, 513, 518, 521, 526, 527, 532, 535, 538, 543, 548, 553, 556, 561, 566, 571, 574, 579, 580, 581, 582, 587, 592, 597, 602, 603, 604, 605, 608, 609, 610, 614, 615, 620, 623, 626, 631, 632, 633, 638, 643, 648, 653, 654, 655, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 700, 701, 702, 703, 704, 705, 710, 715, 720, 725, 730, 735, 740, 745, 750, 755, 760, 765, 770, 775, 780, 785, 790, 795, 800, 805, 810, 815, 820, 825, 830, 835, 840, 845, 850, 855, 860, 865, 870, 875, 880, 885, 890, 895, 900, 905, 910, 915, 920, 925, 930, 935, 940, 945, 950, 955, 960, 965, 970, 975, 980, 985, 990, 995, 1000, 1005, 1010, 1015, 1020, 1026, 1027, 1032, 1033, 1034, 1037, 1042, 1043, 1048, 1053, 1054, 1055, 1058, 1063, 1068, 1073, 1076, 1081, 1082, 1083, 1088, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1105, 1106, 1107, 1108, 1113, 1114, 1119, 1124, 1129, 1130, 1135, 1136, 1141, 1146, 1151, 1152, 1153, 1154, 1155, 1156, 1161, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1181, 1186, 1191, 1192, 1197, 1198, 1203, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1219, 1220, 1221, 1225, 1229, 1230, 1231, 1235, 1240, 1241, 1245, 1249, 1253, 1254, 1259, 1260, 1261, 1266, 1271, 1272, 1273, 1274, 1279, 1284, 1289, 1293, 1298, 1303, 1304, 1305, 1306, 1311, 1316, 1317, 1318, 1323, 1328, 1333, 1338, 1339, 1344, 1349, 1354, 1359, 1364, 1368, 1371, 1376, 1381, 1386, 1391, 1395, 1400, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445, 1450, 1455, 1460, 1465, 1471, 1472, 1477, 1482, 1487, 1488, 1493, 1498, 1503, 1508, 1513, 1518, 1523, 1528, 1533, 1538, 1543, 1548, 1553, 1558, 1563, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1595, 1596, 1601, 1606, 1611, 1616, 1617, 1622, 1623, 1628, 1633, 1638, 1643, 1648, 1649, 1654, 1659, 1664, 1669, 1670, 1675, 1680, 1685, 1686, 1691, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1725, 1730, 1731, 1736, 1741, 1742, 1748, 1759, 1802, 1803], "check_al": 1, "result": [1, 2, 4, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 333, 334, 336, 337, 338, 340, 341, 344, 346, 347, 348, 349, 350, 351, 354, 357, 371, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 654, 655, 658, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1220, 1229, 1231, 1234, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1572, 1575, 1578, 1585, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1643, 1647, 1648, 1649, 1653, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1753, 1755], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 14, 15, 17, 18, 34, 42, 337, 340, 342, 343, 348, 354, 356, 1802, 1803], "one": [1, 2, 19, 24, 26, 34, 35, 40, 41, 42, 54, 55, 107, 108, 133, 134, 137, 138, 145, 146, 149, 150, 155, 156, 157, 158, 170, 171, 176, 177, 182, 183, 272, 273, 280, 281, 286, 287, 298, 299, 302, 303, 304, 305, 310, 311, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 333, 334, 335, 336, 338, 340, 343, 344, 345, 346, 347, 348, 350, 352, 353, 356, 357, 359, 371, 391, 394, 402, 423, 424, 452, 453, 497, 499, 500, 509, 511, 538, 541, 548, 551, 579, 587, 590, 597, 600, 670, 694, 704, 770, 773, 895, 898, 920, 923, 925, 928, 1026, 1027, 1030, 1152, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1231, 1234, 1241, 1244, 1249, 1252, 1254, 1258, 1272, 1284, 1287, 1338, 1371, 1374, 1381, 1384, 1386, 1389, 1405, 1408, 1415, 1418, 1455, 1459, 1460, 1464, 1487, 1503, 1506, 1508, 1511, 1513, 1516, 1528, 1531, 1538, 1541, 1590, 1591, 1594, 1622, 1623, 1626, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1696, 1699, 1742, 1752, 1753, 1755, 1758], "arg": [1, 2, 3, 4, 19, 22, 38, 49, 50, 51, 170, 171, 342, 348, 354, 358, 497, 498, 670, 694, 1026, 1208], "i": [1, 2, 19, 22, 23, 24, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 370, 371, 387, 388, 391, 392, 393, 394, 397, 398, 401, 402, 403, 404, 407, 408, 409, 411, 414, 415, 416, 417, 419, 420, 423, 424, 427, 430, 433, 434, 439, 440, 441, 442, 452, 453, 456, 458, 461, 469, 472, 484, 487, 494, 495, 496, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 597, 600, 602, 605, 606, 609, 610, 612, 615, 618, 620, 621, 623, 624, 626, 629, 632, 633, 636, 638, 641, 643, 646, 648, 651, 655, 658, 669, 670, 671, 675, 676, 679, 682, 683, 685, 686, 689, 693, 694, 700, 701, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1027, 1030, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1099, 1100, 1103, 1105, 1108, 1111, 1114, 1117, 1124, 1127, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1152, 1153, 1161, 1164, 1171, 1186, 1190, 1198, 1202, 1203, 1207, 1208, 1214, 1218, 1219, 1220, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1261, 1265, 1266, 1270, 1271, 1272, 1284, 1287, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1578, 1579, 1582, 1583, 1584, 1585, 1588, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "fals": [1, 2, 4, 6, 7, 8, 12, 15, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 121, 122, 133, 134, 137, 138, 139, 140, 145, 146, 149, 150, 155, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 338, 340, 342, 347, 348, 349, 350, 354, 357, 358, 359, 391, 397, 398, 401, 402, 407, 410, 411, 412, 413, 423, 434, 447, 452, 453, 497, 526, 538, 541, 579, 582, 585, 597, 600, 602, 608, 610, 612, 631, 632, 633, 636, 643, 646, 648, 651, 653, 654, 670, 675, 676, 679, 685, 686, 689, 690, 694, 701, 703, 704, 750, 753, 805, 808, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 940, 943, 1026, 1027, 1030, 1034, 1036, 1055, 1057, 1073, 1075, 1076, 1079, 1094, 1095, 1096, 1099, 1100, 1103, 1108, 1111, 1124, 1127, 1130, 1133, 1136, 1139, 1146, 1149, 1152, 1166, 1167, 1170, 1172, 1174, 1175, 1186, 1190, 1209, 1210, 1211, 1213, 1214, 1218, 1220, 1229, 1235, 1238, 1249, 1252, 1253, 1254, 1258, 1259, 1271, 1272, 1273, 1338, 1339, 1342, 1376, 1379, 1381, 1384, 1386, 1389, 1430, 1434, 1450, 1454, 1460, 1464, 1487, 1523, 1526, 1533, 1536, 1558, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1582, 1583, 1584, 1585, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 336, 337, 348, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 498, 499, 500, 502, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309, 1311, 1314, 1316, 1317, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1751, 1752, 1753, 1754, 1755, 1802, 1803], "check_all_or_any_fn": 1, "fn": [1, 3, 178, 179, 342, 348, 354, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 497, 506, 507, 508, 579, 620, 621, 623, 624, 670, 682, 683, 1026, 1032, 1081, 1082, 1208, 1572, 1573, 1578, 1579, 1580, 1582, 1583, 1584], "type": [1, 3, 19, 25, 31, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 343, 344, 346, 347, 349, 350, 351, 352, 354, 356, 357, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 662, 664, 669, 670, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1578, 1579, 1582, 1583, 1584, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1752, 1753, 1756], "all": [1, 3, 4, 33, 34, 35, 36, 37, 38, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 137, 138, 145, 146, 149, 150, 153, 154, 163, 164, 165, 166, 170, 171, 174, 175, 182, 183, 302, 303, 310, 311, 314, 315, 318, 319, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 370, 371, 372, 382, 387, 388, 391, 392, 407, 417, 494, 495, 497, 499, 500, 548, 551, 561, 565, 566, 570, 670, 684, 690, 1026, 1027, 1030, 1034, 1036, 1093, 1155, 1198, 1202, 1219, 1220, 1229, 1272, 1323, 1326, 1338, 1395, 1398, 1425, 1428, 1440, 1444, 1460, 1464, 1487, 1508, 1511, 1528, 1531, 1538, 1541, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1583, 1584, 1585, 1595, 1596, 1599, 1611, 1614, 1622, 1633, 1636, 1730, 1741, 1742, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1758, 1759], "limit": [1, 3, 42, 167, 170, 171, 172, 173, 340, 342, 343, 348, 350, 352, 357, 371, 579, 615, 618, 626, 629, 1026, 1043, 1046, 1048, 1051, 1487, 1488, 1491, 1751, 1752, 1753], "0": [1, 3, 19, 22, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 338, 340, 341, 342, 348, 349, 350, 351, 354, 356, 357, 358, 359, 371, 387, 388, 391, 394, 395, 401, 402, 403, 404, 407, 410, 411, 412, 413, 414, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 439, 440, 441, 442, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 509, 511, 518, 519, 526, 527, 530, 532, 533, 535, 536, 548, 551, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 626, 629, 631, 643, 646, 670, 672, 675, 681, 684, 688, 689, 690, 691, 692, 693, 694, 700, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1063, 1066, 1073, 1075, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1105, 1106, 1108, 1111, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1152, 1161, 1164, 1171, 1174, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1212, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1274, 1277, 1284, 1287, 1293, 1296, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1410, 1413, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "must": [1, 3, 8, 18, 33, 35, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 338, 339, 340, 341, 342, 344, 345, 348, 351, 352, 354, 358, 359, 391, 393, 403, 407, 409, 411, 416, 417, 419, 420, 421, 423, 425, 430, 433, 434, 439, 440, 442, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 670, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1219, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1753, 1759], "exist": [1, 3, 33, 34, 38, 40, 41, 137, 138, 149, 150, 170, 171, 314, 315, 333, 335, 340, 341, 345, 346, 347, 348, 350, 352, 354, 371, 1026, 1055, 1057, 1487, 1493, 1496, 1523, 1526, 1741, 1750, 1752, 1755, 1758], "accord": [1, 3, 38, 40, 41, 56, 57, 137, 138, 161, 162, 178, 179, 326, 327, 333, 338, 345, 348, 350, 407, 417, 579, 597, 600, 609, 615, 618, 704, 720, 723, 770, 773, 930, 933, 1026, 1083, 1086, 1096, 1156, 1159, 1161, 1164, 1338, 1455, 1459, 1487, 1498, 1501, 1563, 1567, 1685, 1716, 1719, 1725, 1729], "given": [1, 3, 34, 35, 38, 40, 41, 42, 44, 115, 116, 125, 126, 137, 138, 147, 148, 149, 150, 153, 154, 167, 170, 171, 302, 303, 304, 305, 312, 313, 314, 315, 318, 319, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 358, 370, 391, 402, 404, 407, 408, 409, 414, 415, 416, 423, 428, 434, 435, 439, 440, 441, 456, 457, 463, 494, 496, 497, 499, 500, 512, 532, 533, 535, 536, 579, 605, 606, 609, 654, 670, 681, 689, 691, 692, 693, 694, 700, 703, 704, 1025, 1026, 1088, 1091, 1156, 1159, 1161, 1164, 1172, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1465, 1469, 1470, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1503, 1506, 1508, 1511, 1518, 1521, 1528, 1531, 1533, 1536, 1553, 1557, 1558, 1562, 1568, 1572, 1579, 1580, 1590, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1669, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1730, 1749, 1754, 1755, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "check_ani": 1, "ar": [1, 4, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 48, 49, 50, 51, 60, 61, 107, 108, 121, 122, 125, 126, 133, 134, 137, 138, 145, 146, 149, 150, 153, 154, 155, 156, 167, 170, 171, 172, 173, 176, 177, 182, 183, 272, 273, 298, 299, 302, 303, 310, 311, 314, 315, 318, 319, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 371, 372, 382, 387, 388, 391, 393, 402, 404, 407, 417, 423, 424, 425, 426, 427, 439, 440, 441, 452, 453, 497, 499, 500, 670, 684, 688, 690, 694, 704, 785, 788, 795, 798, 905, 908, 910, 913, 955, 958, 970, 973, 980, 983, 1005, 1009, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1042, 1093, 1099, 1113, 1129, 1154, 1155, 1170, 1186, 1190, 1211, 1220, 1229, 1253, 1259, 1271, 1272, 1318, 1321, 1338, 1344, 1347, 1364, 1367, 1368, 1370, 1381, 1384, 1386, 1389, 1395, 1398, 1410, 1413, 1430, 1434, 1435, 1439, 1450, 1454, 1455, 1459, 1487, 1488, 1491, 1493, 1496, 1508, 1511, 1528, 1531, 1538, 1541, 1572, 1574, 1578, 1583, 1584, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1648, 1649, 1653, 1659, 1663, 1741, 1742, 1748, 1749, 1750, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "check_elem_in_list": [1, 348], "elem": [1, 5], "list": [1, 5, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 107, 108, 115, 116, 137, 138, 143, 144, 149, 150, 151, 152, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 296, 297, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 336, 338, 339, 340, 343, 344, 348, 349, 350, 351, 354, 357, 358, 359, 371, 391, 392, 393, 396, 397, 398, 400, 407, 408, 409, 414, 415, 416, 445, 446, 456, 457, 463, 497, 499, 500, 502, 504, 538, 541, 543, 546, 579, 587, 590, 670, 675, 694, 1026, 1033, 1152, 1192, 1196, 1208, 1219, 1220, 1253, 1259, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1420, 1423, 1440, 1444, 1487, 1493, 1496, 1533, 1536, 1543, 1546, 1558, 1562, 1572, 1573, 1574, 1575, 1578, 1579, 1580, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1622, 1638, 1641, 1648, 1654, 1658, 1659, 1663, 1742, 1752, 1753, 1758], "check_equ": [1, 348], "x1": [1, 6, 12, 15, 16, 17, 44, 47, 48, 56, 57, 60, 61, 107, 108, 121, 122, 145, 146, 155, 156, 178, 179, 182, 183, 272, 273, 286, 287, 302, 303, 310, 311, 320, 321, 324, 325, 333, 338, 340, 342, 344, 348, 391, 393, 394, 395, 396, 399, 400, 423, 427, 497, 574, 578, 579, 587, 590, 610, 612, 654, 664, 670, 688, 704, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1272, 1293, 1296, 1338, 1344, 1347, 1371, 1374, 1381, 1384, 1405, 1408, 1425, 1428, 1440, 1444, 1455, 1459, 1622, 1643, 1647, 1669, 1675, 1678], "x2": [1, 6, 12, 15, 16, 17, 56, 57, 60, 61, 107, 108, 121, 122, 137, 138, 145, 146, 155, 156, 178, 179, 182, 183, 272, 273, 286, 287, 302, 303, 310, 311, 320, 321, 333, 338, 340, 342, 344, 348, 391, 393, 394, 395, 396, 399, 400, 423, 427, 497, 574, 578, 579, 587, 590, 654, 664, 670, 688, 704, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004, 1020, 1024, 1026, 1027, 1030, 1272, 1293, 1296, 1338, 1344, 1347, 1371, 1374, 1381, 1384, 1405, 1408, 1425, 1428, 1440, 1444, 1455, 1459, 1622, 1643, 1647], "invers": [1, 6, 7, 60, 61, 182, 183, 310, 311, 338, 370, 704, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 1338, 1376, 1379, 1391, 1393, 1410, 1413], "check_exist": 1, "x": [1, 7, 14, 19, 22, 31, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 335, 336, 338, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 387, 388, 391, 392, 397, 398, 401, 402, 403, 404, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 428, 429, 430, 431, 434, 435, 447, 448, 449, 451, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 502, 504, 509, 511, 513, 516, 521, 524, 526, 527, 530, 538, 541, 543, 546, 548, 551, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 597, 600, 602, 605, 606, 608, 609, 610, 612, 614, 615, 618, 626, 629, 631, 638, 641, 643, 646, 655, 658, 670, 675, 676, 679, 684, 688, 689, 690, 693, 695, 699, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 765, 768, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 810, 813, 815, 818, 820, 823, 825, 828, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 945, 948, 955, 958, 960, 963, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1027, 1030, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1097, 1098, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1168, 1169, 1171, 1173, 1174, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1214, 1218, 1219, 1220, 1229, 1230, 1235, 1238, 1240, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1317, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1572, 1573, 1575, 1578, 1579, 1580, 1582, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "check_fals": 1, "express": [1, 8, 18, 60, 61, 107, 108, 182, 183, 272, 273, 341, 343, 348, 354, 359, 391, 403, 704, 710, 713, 725, 728, 735, 738, 740, 743, 785, 788, 795, 798, 955, 958, 980, 983, 1005, 1009, 1752, 1753], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 54, 55, 155, 156, 176, 177, 320, 321, 338, 349, 351, 497, 526, 527, 530, 704, 840, 843, 870, 873, 1622, 1638, 1641], "dtype": [1, 9, 44, 47, 48, 54, 55, 56, 57, 107, 108, 125, 126, 143, 144, 145, 146, 153, 154, 155, 156, 161, 162, 176, 177, 178, 179, 272, 273, 280, 281, 290, 291, 302, 303, 308, 309, 310, 311, 318, 319, 320, 321, 326, 327, 333, 335, 338, 339, 340, 343, 345, 346, 348, 349, 350, 351, 354, 356, 391, 402, 407, 410, 411, 412, 413, 418, 439, 440, 441, 442, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 597, 600, 603, 604, 605, 606, 608, 609, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 661, 662, 663, 665, 668, 669, 670, 690, 704, 885, 888, 1026, 1081, 1082, 1088, 1091, 1198, 1202, 1272, 1284, 1287, 1311, 1314, 1338, 1386, 1389, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1669, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1730, 1731, 1734, 1736, 1739, 1742], "check_gather_input_valid": 1, "param": [1, 10, 11, 167, 170, 171, 172, 173, 302, 303, 359, 1026, 1032, 1083, 1086, 1088, 1091], "indic": [1, 10, 11, 38, 54, 55, 115, 116, 121, 122, 137, 138, 143, 144, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 170, 171, 176, 177, 178, 179, 280, 281, 286, 287, 302, 303, 308, 309, 310, 311, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 337, 343, 344, 359, 387, 388, 407, 408, 409, 414, 415, 416, 423, 434, 456, 469, 472, 484, 487, 497, 502, 504, 548, 551, 704, 975, 978, 1026, 1083, 1086, 1088, 1091, 1096, 1156, 1159, 1161, 1164, 1219, 1220, 1229, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1460, 1464, 1487, 1523, 1526, 1528, 1531, 1572, 1573, 1575, 1577, 1579, 1580, 1581, 1583, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1648, 1649, 1653, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1742], "axi": [1, 10, 45, 46, 54, 55, 107, 108, 121, 122, 133, 134, 137, 138, 145, 146, 147, 148, 149, 150, 155, 156, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 176, 177, 182, 183, 272, 273, 286, 287, 298, 299, 302, 303, 310, 311, 312, 313, 314, 315, 320, 321, 324, 325, 326, 327, 328, 329, 336, 338, 340, 342, 344, 345, 347, 348, 350, 352, 354, 356, 359, 370, 391, 402, 404, 407, 417, 423, 425, 426, 433, 434, 445, 446, 452, 453, 456, 469, 472, 484, 487, 497, 532, 533, 535, 536, 548, 551, 670, 694, 1026, 1083, 1086, 1219, 1272, 1306, 1309, 1338, 1344, 1347, 1359, 1362, 1386, 1389, 1455, 1459, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1518, 1521, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1595, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "batch_dim": [1, 10, 11, 137, 138, 302, 303, 1026, 1083, 1086, 1088, 1091], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 15, 342], "check_inplace_sizes_valid": 1, "var": [1, 13, 161, 162, 326, 327, 330, 331, 340, 354, 1568, 1569, 1570, 1685], "data": [1, 13, 32, 34, 41, 44, 47, 48, 54, 55, 57, 60, 61, 107, 108, 125, 126, 137, 138, 139, 140, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 171, 172, 173, 176, 177, 179, 182, 183, 272, 273, 280, 281, 290, 291, 302, 303, 304, 305, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 339, 341, 344, 345, 346, 347, 349, 351, 352, 354, 356, 391, 403, 407, 410, 411, 412, 413, 418, 419, 420, 423, 424, 439, 440, 441, 442, 447, 450, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 580, 581, 582, 585, 592, 595, 597, 600, 603, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 660, 662, 664, 669, 670, 671, 672, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1130, 1133, 1136, 1139, 1146, 1149, 1186, 1190, 1220, 1235, 1238, 1266, 1270, 1272, 1318, 1321, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1669, 1670, 1673, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1752, 1753, 1754, 1756, 1757, 1758], "check_isinst": 1, "allowed_typ": [1, 14], "check_less": [1, 342], "check_one_way_broadcast": 1, "check_shap": [1, 170, 171], "check_tru": 1, "true": [1, 18, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60, 61, 107, 108, 121, 122, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 338, 340, 342, 343, 344, 345, 347, 348, 349, 350, 352, 354, 357, 358, 359, 391, 397, 398, 401, 402, 407, 410, 411, 412, 413, 423, 434, 452, 453, 456, 458, 461, 494, 495, 497, 526, 532, 533, 538, 541, 579, 582, 585, 597, 600, 602, 620, 621, 623, 624, 633, 636, 638, 641, 643, 646, 648, 651, 669, 670, 675, 676, 679, 682, 683, 686, 689, 690, 691, 703, 704, 750, 753, 805, 808, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 900, 903, 905, 908, 910, 913, 915, 918, 940, 943, 965, 968, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1055, 1057, 1073, 1075, 1076, 1079, 1081, 1082, 1094, 1095, 1096, 1099, 1100, 1103, 1108, 1111, 1136, 1139, 1146, 1149, 1166, 1167, 1170, 1172, 1174, 1175, 1198, 1202, 1209, 1210, 1211, 1213, 1214, 1218, 1220, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1271, 1272, 1311, 1314, 1338, 1339, 1342, 1386, 1389, 1430, 1434, 1450, 1454, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1523, 1526, 1533, 1536, 1558, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1582, 1583, 1585, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 170, 171, 332, 333, 343, 348, 350, 351, 356, 357, 1026, 1037, 1040], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 41, 46, 48, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 138, 139, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 169, 171, 173, 175, 177, 179, 180, 181, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 333, 334, 336, 339, 340, 341, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 357, 359, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 441, 442, 446, 448, 449, 450, 451, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1749, 1751, 1752, 1755, 1757, 1758, 1759, 1762, 1763, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1792, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1803], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 40, 41, 46, 48, 49, 50, 51, 52, 53, 55, 57, 59, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 138, 139, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 169, 171, 173, 175, 177, 179, 181, 183, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 299, 301, 303, 304, 305, 307, 309, 311, 313, 315, 317, 319, 321, 323, 325, 327, 329, 331, 332, 333, 334, 335, 338, 339, 340, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 356, 359, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 440, 441, 442, 446, 448, 449, 450, 451, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1591, 1592, 1593, 1594, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1746, 1747, 1748, 1749, 1750, 1751, 1753, 1756, 1762, 1763, 1765, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1789, 1790, 1792, 1794, 1795, 1796, 1797, 1798, 1800, 1801, 1803], "class": [19, 25, 31, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 334, 336, 338, 339, 340, 341, 344, 349, 350, 352, 354, 355, 357, 358, 359, 369, 370, 371, 447, 497, 498, 574, 578, 579, 626, 629, 662, 670, 671, 1026, 1033, 1124, 1127, 1152, 1186, 1190, 1220, 1266, 1270, 1338, 1386, 1389, 1420, 1423, 1572, 1574, 1584, 1622, 1638, 1641, 1648, 1659, 1663, 1741, 1742, 1750, 1752, 1753, 1759], "backend_handl": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 335, 354, 1742], "contextmanag": 19, "modul": [19, 22, 24, 26, 35, 38, 41, 165, 166, 167, 170, 171, 172, 173, 330, 331, 334, 335, 343, 345, 347, 348, 350, 354, 355, 357, 359, 370, 371, 1026, 1153, 1742, 1752, 1753, 1755], "base": [19, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 338, 342, 344, 346, 349, 350, 351, 354, 370, 387, 388, 391, 393, 447, 497, 498, 535, 536, 579, 654, 670, 671, 704, 815, 818, 875, 878, 880, 883, 885, 888, 890, 893, 950, 953, 1026, 1097, 1168, 1173, 1181, 1184, 1220, 1487, 1503, 1506, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1696, 1699, 1752, 1757, 1759], "object": [19, 153, 154, 167, 170, 171, 172, 173, 174, 175, 180, 181, 182, 183, 302, 303, 318, 319, 336, 346, 348, 350, 356, 359, 447, 456, 457, 463, 497, 521, 524, 579, 602, 615, 618, 654, 670, 695, 699, 1220, 1572, 1575, 1577, 1579, 1580, 1581, 1586, 1587, 1588, 1589, 1595, 1617, 1620, 1752, 1758], "__init__": [19, 22, 24, 40, 44, 47, 48, 167, 170, 171, 172, 173, 335, 338, 342, 348, 351, 354, 356, 357, 358, 359, 447, 497, 498, 579, 670, 671, 1220, 1742], "choose_random_backend": 19, "exclud": [19, 20, 161, 162, 326, 327, 340, 354, 387, 388, 497, 499, 500, 1595, 1611, 1614], "none": [19, 20, 24, 31, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 447, 450, 452, 453, 456, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 496, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 604, 605, 606, 608, 609, 615, 618, 626, 629, 632, 669, 670, 674, 675, 690, 691, 692, 693, 694, 695, 699, 702, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1032, 1043, 1046, 1048, 1051, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1106, 1113, 1129, 1153, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1176, 1179, 1181, 1184, 1208, 1209, 1210, 1211, 1212, 1213, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1578, 1579, 1583, 1584, 1585, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "clear_backend_stack": 19, "current_backend": [19, 342, 345, 348, 351, 354], "kwarg": [19, 22, 49, 50, 51, 115, 116, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 342, 348, 354, 358, 407, 417, 497, 498, 1026, 1152, 1208], "return": [19, 22, 23, 24, 26, 31, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 664, 669, 670, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1107, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1153, 1154, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1578, 1579, 1582, 1583, 1584, 1585, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1753], "current": [19, 22, 23, 24, 31, 35, 38, 40, 41, 42, 137, 138, 167, 170, 171, 172, 173, 333, 335, 336, 338, 339, 342, 345, 346, 348, 349, 352, 354, 359, 370, 371, 407, 417, 579, 609, 620, 621, 623, 624, 632, 665, 668, 669, 670, 681, 682, 683, 684, 688, 690, 703, 1026, 1081, 1082, 1093, 1094, 1095, 1099, 1113, 1129, 1154, 1155, 1175, 1186, 1190, 1220, 1253, 1271, 1572, 1573, 1582, 1583, 1742, 1752, 1758, 1759], "prioriti": [19, 22, 42, 170, 171, 347], "global_backend": [19, 22], "argument": [19, 22, 24, 33, 40, 49, 50, 51, 52, 53, 60, 61, 137, 138, 167, 170, 171, 172, 173, 174, 175, 182, 183, 302, 303, 332, 333, 334, 335, 336, 340, 341, 343, 345, 346, 349, 350, 351, 352, 354, 356, 357, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 494, 495, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1032, 1033, 1042, 1055, 1057, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1152, 1161, 1164, 1186, 1190, 1203, 1207, 1208, 1219, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1572, 1578, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1752], "": [19, 22, 24, 25, 31, 34, 35, 36, 37, 38, 40, 41, 42, 54, 55, 137, 138, 139, 140, 145, 146, 161, 162, 286, 287, 302, 303, 304, 305, 310, 311, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 370, 371, 407, 417, 496, 497, 538, 541, 561, 565, 566, 570, 579, 620, 621, 623, 624, 670, 675, 682, 683, 693, 704, 965, 968, 1026, 1081, 1082, 1186, 1190, 1220, 1225, 1228, 1230, 1231, 1234, 1240, 1241, 1244, 1249, 1252, 1338, 1354, 1357, 1395, 1398, 1430, 1434, 1435, 1439, 1572, 1584, 1685, 1716, 1719, 1725, 1729, 1741, 1742, 1748, 1751, 1752, 1753, 1755, 1756, 1757, 1758], "paramet": [19, 22, 23, 24, 26, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 341, 342, 344, 346, 350, 351, 354, 356, 357, 370, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 655, 658, 660, 661, 662, 663, 664, 669, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 686, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1106, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1152, 1153, 1156, 1159, 1161, 1164, 1168, 1169, 1171, 1173, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1753], "from": [19, 22, 24, 25, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 387, 388, 391, 393, 394, 407, 417, 423, 433, 439, 440, 441, 442, 497, 499, 500, 513, 516, 521, 524, 526, 527, 530, 538, 541, 543, 546, 556, 559, 574, 578, 579, 597, 600, 654, 655, 658, 670, 675, 684, 688, 693, 694, 704, 795, 798, 955, 958, 990, 993, 1026, 1042, 1055, 1057, 1083, 1086, 1088, 1091, 1096, 1155, 1171, 1192, 1196, 1219, 1220, 1225, 1228, 1241, 1244, 1259, 1272, 1306, 1309, 1311, 1314, 1328, 1331, 1338, 1359, 1362, 1430, 1434, 1450, 1454, 1455, 1459, 1487, 1493, 1496, 1508, 1511, 1523, 1526, 1538, 1541, 1568, 1569, 1570, 1571, 1572, 1574, 1584, 1585, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1628, 1631, 1643, 1647, 1648, 1649, 1653, 1659, 1663, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759], "which": [19, 22, 23, 24, 26, 33, 34, 35, 38, 39, 40, 41, 42, 45, 46, 54, 55, 56, 57, 107, 108, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 370, 371, 387, 388, 391, 393, 402, 404, 419, 420, 423, 434, 439, 440, 441, 442, 452, 453, 456, 469, 472, 484, 487, 494, 495, 496, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 603, 610, 612, 615, 618, 626, 629, 632, 669, 670, 676, 679, 684, 688, 690, 692, 693, 694, 704, 965, 968, 1026, 1032, 1055, 1057, 1083, 1086, 1088, 1091, 1093, 1096, 1124, 1127, 1154, 1155, 1161, 1164, 1219, 1220, 1225, 1228, 1229, 1230, 1231, 1234, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1272, 1328, 1331, 1338, 1344, 1347, 1354, 1357, 1359, 1362, 1386, 1389, 1425, 1428, 1430, 1434, 1455, 1459, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1518, 1521, 1528, 1531, 1533, 1536, 1543, 1546, 1558, 1562, 1572, 1577, 1578, 1579, 1580, 1585, 1586, 1587, 1588, 1589, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1757, 1758, 1759], "try": [19, 22, 32, 34, 35, 38, 40, 41, 42, 170, 171, 334, 336, 338, 342, 343, 354, 356, 371, 1026, 1208, 1742], "infer": [19, 22, 23, 54, 55, 137, 138, 149, 150, 176, 177, 302, 303, 314, 315, 332, 335, 338, 339, 346, 354, 359, 439, 441, 494, 495, 497, 499, 500, 513, 516, 526, 527, 530, 543, 546, 556, 559, 574, 578, 579, 605, 606, 608, 609, 1026, 1100, 1103, 1174, 1487, 1523, 1526, 1750, 1751, 1754, 1756], "when": [19, 22, 33, 34, 36, 37, 39, 40, 41, 42, 54, 55, 56, 57, 107, 108, 145, 146, 147, 148, 153, 154, 155, 156, 161, 162, 167, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 310, 311, 312, 313, 318, 319, 320, 321, 326, 327, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 357, 359, 371, 391, 404, 439, 440, 497, 548, 551, 579, 582, 585, 704, 720, 723, 820, 823, 885, 888, 950, 953, 1026, 1124, 1127, 1171, 1181, 1184, 1338, 1395, 1398, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1572, 1583, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1685, 1700, 1703, 1708, 1711, 1716, 1719, 1725, 1729, 1750, 1752, 1755, 1756, 1757, 1758], "global": [19, 22, 24, 25, 27, 28, 29, 30, 31, 137, 138, 151, 152, 167, 170, 171, 172, 173, 302, 303, 316, 317, 335, 338, 339, 342, 345, 348, 354, 579, 604, 605, 606, 608, 609, 670, 692, 693, 694, 1026, 1097, 1098, 1105, 1168, 1169, 1171, 1176, 1179, 1181, 1184, 1212, 1220, 1253, 1259, 1271, 1590, 1591, 1594, 1752], "set": [19, 22, 24, 25, 27, 28, 29, 30, 31, 33, 36, 38, 42, 49, 52, 53, 107, 108, 115, 116, 121, 122, 130, 133, 134, 137, 138, 139, 140, 145, 146, 155, 156, 158, 159, 160, 161, 162, 170, 171, 272, 273, 280, 281, 286, 287, 295, 298, 299, 302, 303, 304, 305, 310, 311, 320, 321, 323, 324, 325, 326, 327, 332, 333, 334, 336, 338, 339, 340, 345, 346, 347, 348, 349, 350, 351, 354, 356, 357, 387, 388, 391, 402, 407, 417, 419, 420, 423, 424, 434, 452, 453, 579, 609, 660, 662, 663, 670, 675, 691, 692, 693, 694, 704, 740, 743, 1026, 1027, 1030, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1186, 1190, 1220, 1235, 1238, 1338, 1344, 1347, 1386, 1389, 1395, 1398, 1410, 1413, 1425, 1428, 1430, 1434, 1572, 1573, 1582, 1583, 1584, 1588, 1589, 1595, 1616, 1622, 1623, 1626, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1716, 1719, 1725, 1729, 1750, 1751, 1752, 1753, 1754, 1756, 1759], "ret": [19, 22, 24, 31, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 341, 347, 348, 349, 351, 354, 359, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 655, 658, 669, 670, 672, 673, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 693, 694, 695, 699, 700, 701, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1096, 1097, 1098, 1100, 1103, 1105, 1107, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1152, 1153, 1156, 1159, 1161, 1164, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1578, 1582, 1583, 1584, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "exampl": [19, 22, 24, 25, 31, 35, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 345, 346, 347, 348, 350, 351, 354, 356, 357, 358, 359, 370, 371, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 441, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 509, 511, 526, 527, 530, 538, 541, 553, 554, 556, 559, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 603, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 638, 641, 643, 646, 648, 651, 655, 658, 660, 662, 663, 665, 668, 669, 670, 674, 675, 676, 679, 681, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1033, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1108, 1111, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1152, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1271, 1272, 1274, 1277, 1284, 1287, 1293, 1296, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1749, 1750, 1753, 1755, 1758, 1759], "If": [19, 22, 24, 25, 33, 36, 37, 38, 40, 41, 42, 44, 49, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 133, 134, 139, 140, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 359, 371, 387, 388, 391, 393, 401, 402, 403, 404, 407, 410, 411, 412, 413, 423, 424, 434, 439, 440, 441, 442, 452, 453, 456, 494, 496, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 609, 655, 658, 670, 675, 693, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 860, 863, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 910, 913, 920, 923, 925, 928, 930, 933, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1025, 1026, 1124, 1127, 1186, 1190, 1219, 1220, 1229, 1253, 1271, 1272, 1338, 1339, 1342, 1344, 1347, 1354, 1357, 1386, 1389, 1391, 1393, 1395, 1398, 1410, 1413, 1415, 1418, 1425, 1428, 1430, 1434, 1450, 1454, 1455, 1459, 1460, 1464, 1470, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1568, 1569, 1570, 1572, 1584, 1585, 1590, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "import": [19, 22, 23, 34, 37, 39, 40, 41, 42, 165, 166, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 343, 347, 348, 349, 351, 354, 356, 357, 359, 371, 670, 674, 691, 692, 1742, 1748, 1750, 1752, 1755, 1756, 1758], "numpi": [19, 22, 24, 25, 28, 33, 34, 39, 40, 41, 42, 137, 138, 302, 303, 333, 335, 337, 338, 339, 342, 344, 347, 349, 350, 351, 352, 354, 356, 359, 387, 388, 1026, 1186, 1190, 1198, 1202, 1685, 1696, 1699, 1741, 1742, 1754, 1759], "np": [19, 22, 40, 182, 183, 302, 303, 334, 338, 339, 344, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 423, 424, 704, 860, 863, 1026, 1176, 1179, 1572, 1578, 1741, 1742], "arrai": [19, 22, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 335, 336, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 371, 372, 382, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 496, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 605, 606, 608, 609, 610, 612, 615, 618, 626, 629, 631, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 664, 670, 675, 676, 679, 684, 688, 690, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1043, 1046, 1048, 1051, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1083, 1086, 1088, 1091, 1093, 1096, 1100, 1103, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1130, 1133, 1136, 1139, 1146, 1149, 1152, 1154, 1155, 1156, 1159, 1161, 1164, 1166, 1167, 1172, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1209, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1578, 1579, 1580, 1584, 1585, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1750, 1751, 1752, 1754, 1758, 1759], "2": [19, 22, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 338, 340, 342, 344, 347, 348, 349, 350, 353, 354, 356, 357, 358, 359, 371, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 439, 441, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 496, 497, 526, 527, 530, 538, 541, 553, 554, 556, 559, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 638, 641, 643, 646, 670, 675, 676, 679, 681, 684, 686, 688, 690, 692, 695, 699, 704, 705, 708, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 850, 853, 855, 858, 865, 868, 870, 873, 875, 878, 885, 888, 890, 893, 895, 898, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1152, 1161, 1164, 1174, 1176, 1179, 1186, 1190, 1192, 1196, 1208, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1273, 1274, 1277, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1316, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1460, 1464, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1758, 1759], "print": [19, 22, 24, 25, 31, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 340, 350, 354, 356, 357, 358, 387, 388, 391, 403, 407, 408, 409, 414, 415, 416, 417, 423, 428, 431, 432, 434, 435, 456, 457, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 509, 511, 526, 527, 530, 538, 541, 553, 554, 556, 559, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 603, 610, 612, 614, 620, 621, 623, 624, 632, 638, 641, 643, 646, 655, 658, 669, 670, 676, 679, 684, 685, 686, 687, 688, 689, 690, 693, 700, 701, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1033, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1096, 1097, 1098, 1100, 1103, 1105, 1108, 1111, 1114, 1117, 1119, 1122, 1152, 1155, 1161, 1164, 1168, 1169, 1171, 1173, 1174, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1212, 1214, 1218, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1271, 1272, 1274, 1277, 1284, 1287, 1293, 1296, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "function": [19, 22, 23, 24, 25, 26, 33, 38, 41, 42, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 343, 347, 352, 353, 355, 356, 357, 358, 369, 370, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309, 1311, 1314, 1316, 1317, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1749, 1750, 1751, 1752, 1753, 1758, 1759], "py": [19, 22, 24, 40, 41, 42, 333, 335, 337, 338, 339, 341, 342, 343, 344, 345, 348, 349, 350, 351, 354, 356, 358, 359], "noqa": [19, 22, 24, 60, 61, 182, 183, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1219, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "The": [19, 22, 24, 26, 32, 33, 35, 36, 37, 38, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 357, 358, 359, 370, 387, 388, 391, 393, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 426, 428, 430, 432, 433, 434, 435, 439, 441, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 484, 487, 489, 492, 494, 495, 497, 499, 500, 521, 524, 535, 536, 548, 551, 561, 565, 566, 570, 579, 580, 581, 582, 585, 603, 614, 620, 621, 623, 624, 632, 638, 641, 648, 651, 653, 662, 663, 664, 669, 670, 671, 672, 673, 674, 675, 681, 682, 683, 684, 688, 689, 690, 691, 692, 693, 694, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1032, 1034, 1036, 1042, 1043, 1046, 1054, 1055, 1057, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1105, 1107, 1114, 1117, 1119, 1122, 1124, 1127, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1153, 1156, 1159, 1161, 1164, 1168, 1169, 1171, 1173, 1176, 1179, 1181, 1184, 1191, 1197, 1214, 1218, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1266, 1270, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1498, 1501, 1508, 1511, 1513, 1516, 1518, 1521, 1533, 1536, 1553, 1557, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1606, 1609, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "set_backend": [19, 22, 24, 27, 28, 29, 30, 31, 333, 335, 338, 345, 346, 354, 356, 359, 579, 623, 624, 670, 674, 691, 692, 1742], "ha": [19, 22, 24, 33, 34, 35, 40, 42, 145, 146, 149, 150, 157, 158, 161, 162, 170, 171, 178, 179, 302, 303, 310, 311, 314, 315, 322, 323, 326, 327, 333, 335, 336, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 370, 371, 497, 538, 541, 670, 675, 704, 705, 708, 860, 863, 930, 933, 950, 953, 970, 973, 1220, 1253, 1271, 1338, 1381, 1384, 1425, 1428, 1430, 1434, 1445, 1449, 1487, 1503, 1506, 1538, 1541, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1704, 1707, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1748, 1751, 1752, 1754, 1755, 1758], "over": [19, 22, 33, 35, 41, 42, 115, 116, 145, 146, 161, 162, 163, 164, 165, 166, 178, 179, 280, 281, 310, 311, 326, 327, 328, 329, 330, 331, 335, 340, 341, 347, 350, 354, 356, 371, 391, 402, 423, 424, 431, 432, 1026, 1219, 1338, 1386, 1389, 1440, 1444, 1455, 1459, 1460, 1464, 1590, 1591, 1594, 1595, 1611, 1614, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1750, 1752], "ani": [19, 22, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 49, 50, 51, 54, 55, 60, 61, 137, 138, 163, 164, 165, 166, 167, 180, 181, 182, 183, 302, 303, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 456, 494, 495, 496, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 602, 633, 636, 643, 646, 654, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1025, 1026, 1027, 1030, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1130, 1133, 1141, 1144, 1181, 1184, 1203, 1207, 1208, 1219, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1470, 1471, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1578, 1579, 1582, 1588, 1589, 1590, 1591, 1594, 1595, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1741, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "pass": [19, 22, 40, 42, 107, 108, 165, 166, 167, 170, 171, 172, 173, 272, 273, 330, 331, 333, 334, 335, 336, 338, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 371, 391, 401, 423, 424, 579, 603, 654, 670, 694, 704, 740, 743, 1026, 1124, 1127, 1220, 1266, 1270, 1568, 1569, 1570, 1750], "jax": [19, 22, 24, 25, 27, 34, 35, 39, 40, 41, 42, 139, 140, 304, 305, 333, 335, 337, 338, 339, 344, 347, 348, 349, 350, 351, 352, 354, 356, 359, 371, 1026, 1219, 1220, 1235, 1238, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1753, 1755, 1758, 1759], "fn_name_from_version_specific_fn_nam": 19, "name": [19, 23, 26, 38, 40, 41, 42, 121, 122, 157, 158, 322, 323, 335, 336, 340, 341, 343, 344, 348, 349, 350, 351, 352, 354, 357, 359, 423, 434, 456, 457, 463, 494, 495, 1026, 1032, 1033, 1338, 1364, 1367, 1415, 1418, 1430, 1434, 1450, 1454, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1752], "specif": [19, 23, 26, 33, 40, 41, 42, 137, 138, 180, 181, 302, 303, 333, 334, 335, 336, 337, 338, 339, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 355, 356, 358, 359, 370, 371, 579, 655, 658, 670, 692, 695, 699, 704, 905, 908, 910, 913, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1153, 1338, 1364, 1367, 1368, 1370, 1440, 1444, 1487, 1543, 1546, 1568, 1569, 1570, 1571, 1595, 1596, 1599, 1669, 1675, 1678, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1741, 1748, 1750, 1751, 1753, 1754, 1755, 1759], "provid": [19, 23, 26, 33, 41, 42, 54, 55, 137, 138, 139, 140, 149, 150, 155, 156, 161, 162, 163, 164, 170, 171, 176, 177, 302, 303, 314, 315, 320, 321, 326, 327, 328, 329, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 350, 352, 356, 358, 370, 371, 391, 404, 456, 457, 463, 494, 495, 497, 538, 541, 548, 551, 579, 604, 605, 606, 608, 609, 632, 655, 658, 669, 670, 675, 1026, 1042, 1055, 1057, 1161, 1164, 1338, 1391, 1393, 1455, 1459, 1487, 1503, 1506, 1508, 1511, 1543, 1546, 1622, 1623, 1626, 1685, 1716, 1719, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759], "origin": [19, 23, 26, 35, 40, 42, 44, 47, 48, 121, 122, 145, 146, 149, 150, 161, 162, 167, 170, 171, 172, 173, 286, 287, 310, 311, 314, 315, 326, 327, 335, 338, 346, 347, 348, 349, 354, 423, 430, 704, 740, 743, 1338, 1386, 1389, 1487, 1523, 1526, 1528, 1531, 1685, 1691, 1694, 1752, 1753], "point": [19, 23, 26, 35, 40, 41, 42, 56, 57, 60, 61, 107, 108, 125, 126, 145, 146, 153, 154, 161, 162, 178, 179, 182, 183, 272, 273, 280, 281, 290, 291, 310, 311, 318, 319, 326, 327, 333, 334, 337, 340, 341, 344, 347, 348, 350, 351, 352, 354, 356, 357, 370, 391, 403, 404, 407, 411, 439, 440, 441, 442, 496, 497, 499, 500, 502, 504, 512, 518, 519, 526, 553, 554, 571, 573, 579, 582, 585, 615, 618, 631, 638, 641, 655, 658, 704, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 815, 818, 820, 823, 825, 828, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 930, 933, 950, 953, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1338, 1339, 1342, 1349, 1352, 1364, 1367, 1368, 1370, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1460, 1464, 1595, 1606, 1609, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1758], "get_backend": [19, 335, 345], "specifi": [19, 24, 42, 54, 55, 56, 57, 107, 108, 115, 116, 137, 138, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 161, 162, 163, 164, 168, 169, 170, 171, 178, 179, 272, 273, 302, 303, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 332, 338, 339, 344, 345, 347, 348, 349, 350, 352, 354, 357, 358, 391, 402, 423, 424, 433, 439, 440, 452, 453, 497, 499, 500, 512, 526, 532, 533, 535, 536, 553, 554, 561, 565, 566, 570, 571, 573, 579, 582, 585, 592, 595, 670, 684, 688, 690, 693, 694, 695, 699, 704, 965, 968, 1026, 1032, 1083, 1086, 1088, 1091, 1096, 1108, 1111, 1219, 1338, 1354, 1357, 1359, 1362, 1386, 1389, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1528, 1531, 1538, 1541, 1543, 1546, 1558, 1562, 1563, 1567, 1572, 1577, 1579, 1580, 1586, 1587, 1588, 1589, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1712, 1715, 1720, 1724, 1730, 1731, 1734, 1736, 1739, 1758], "isn": [19, 24, 42, 302, 303, 346, 357, 371, 1026, 1186, 1190, 1754], "t": [19, 24, 26, 34, 35, 37, 38, 40, 41, 42, 44, 47, 48, 165, 166, 302, 303, 330, 331, 332, 335, 336, 337, 338, 340, 346, 347, 350, 352, 354, 356, 357, 358, 359, 371, 1026, 1186, 1190, 1220, 1229, 1272, 1318, 1321, 1323, 1326, 1572, 1580, 1750, 1752, 1754], "associ": [19, 24, 42, 145, 146, 310, 311, 338, 345, 346, 348, 349, 350, 371, 704, 720, 723, 930, 933, 1338, 1395, 1398, 1410, 1413, 1465, 1469], "option": [19, 24, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 359, 371, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 603, 604, 605, 606, 608, 609, 632, 669, 670, 675, 690, 692, 693, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1032, 1043, 1046, 1048, 1051, 1054, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1136, 1139, 1153, 1156, 1159, 1161, 1164, 1176, 1179, 1181, 1184, 1208, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1578, 1583, 1584, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1758], "str": [19, 24, 49, 50, 51, 115, 116, 137, 138, 143, 144, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 338, 339, 342, 343, 348, 351, 354, 359, 407, 408, 409, 414, 415, 416, 456, 457, 463, 494, 495, 497, 538, 541, 579, 580, 603, 604, 605, 606, 614, 615, 618, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 660, 661, 662, 663, 669, 670, 671, 672, 694, 1026, 1032, 1054, 1058, 1061, 1063, 1066, 1068, 1071, 1153, 1156, 1159, 1161, 1164, 1173, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1415, 1418, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1588, 1685, 1696, 1699], "we": [19, 24, 25, 26, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 121, 122, 165, 166, 286, 287, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 423, 434, 1026, 1186, 1190, 1220, 1229, 1230, 1240, 1260, 1741, 1742, 1748, 1752, 1753, 1757, 1758], "want": [19, 24, 34, 36, 40, 41, 42, 165, 166, 330, 331, 337, 346, 347, 350, 352, 357, 358, 359, 371], "retriev": [19, 24, 42, 348, 1026, 1032], "e": [19, 24, 34, 35, 36, 37, 38, 40, 41, 42, 44, 47, 48, 125, 126, 139, 140, 145, 146, 153, 154, 159, 160, 161, 162, 280, 281, 310, 311, 318, 319, 324, 325, 326, 327, 332, 333, 336, 342, 350, 354, 357, 371, 387, 388, 407, 408, 414, 415, 439, 440, 441, 496, 497, 538, 541, 579, 581, 655, 658, 670, 672, 704, 705, 708, 740, 743, 760, 763, 770, 773, 780, 783, 815, 818, 825, 828, 830, 833, 845, 848, 875, 878, 885, 888, 920, 923, 925, 928, 935, 938, 950, 953, 965, 968, 1338, 1344, 1347, 1381, 1384, 1386, 1389, 1395, 1398, 1410, 1413, 1425, 1428, 1430, 1434, 1460, 1464, 1487, 1503, 1506, 1543, 1546, 1572, 1575, 1579, 1580, 1588, 1589, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1741, 1748], "default": [19, 24, 40, 41, 42, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 335, 338, 339, 340, 341, 342, 344, 345, 346, 348, 350, 352, 354, 358, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 604, 605, 606, 608, 609, 610, 612, 620, 621, 623, 624, 631, 653, 660, 662, 663, 665, 668, 670, 675, 676, 679, 682, 683, 686, 689, 690, 691, 692, 693, 694, 695, 699, 702, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1042, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1099, 1100, 1103, 1105, 1106, 1108, 1111, 1113, 1124, 1127, 1129, 1130, 1133, 1136, 1139, 1146, 1149, 1152, 1153, 1156, 1159, 1161, 1164, 1171, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1198, 1202, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1582, 1583, 1584, 1585, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1752], "torch": [19, 24, 30, 31, 41, 42, 333, 334, 335, 337, 338, 339, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 371, 494, 495, 579, 623, 624, 670, 674, 691, 692, 704, 970, 973, 1026, 1186, 1190, 1338, 1430, 1434, 1741, 1742, 1758], "tensorflow": [19, 24, 29, 31, 34, 35, 39, 40, 41, 42, 137, 138, 302, 303, 333, 337, 338, 339, 344, 347, 348, 349, 350, 351, 352, 354, 359, 371, 387, 388, 1741, 1742, 1750, 1753, 1755, 1756, 1758, 1759], "either": [19, 24, 31, 38, 40, 41, 42, 60, 61, 137, 138, 170, 171, 182, 183, 302, 303, 335, 336, 338, 339, 340, 341, 345, 347, 348, 349, 350, 352, 354, 357, 371, 391, 403, 497, 521, 524, 704, 720, 723, 740, 743, 850, 853, 875, 878, 880, 883, 890, 893, 895, 898, 930, 933, 965, 968, 975, 978, 980, 983, 1005, 1009, 1026, 1055, 1057, 1130, 1133, 1152, 1153, 1208, 1338, 1381, 1384, 1568, 1569, 1570, 1571, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1752], "doesn": [19, 24, 26, 38, 41, 335, 336, 337, 338, 340, 350, 352, 354, 371, 1750], "matter": [19, 24, 33, 340], "been": [19, 24, 40, 42, 137, 138, 153, 154, 302, 303, 318, 319, 333, 335, 336, 337, 338, 339, 341, 343, 344, 345, 350, 354, 356, 370, 371, 670, 675, 704, 970, 973, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1595, 1596, 1599, 1741, 1752, 1759], "ivy_np": [19, 24, 350], "us": [19, 24, 31, 35, 36, 37, 39, 40, 42, 54, 55, 56, 57, 60, 61, 107, 108, 121, 122, 125, 126, 137, 138, 139, 140, 149, 150, 151, 152, 153, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 302, 303, 304, 305, 314, 315, 316, 317, 318, 319, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 370, 371, 391, 401, 402, 404, 407, 410, 411, 412, 413, 417, 423, 427, 439, 440, 441, 442, 456, 479, 482, 484, 487, 489, 492, 496, 497, 535, 536, 579, 582, 585, 614, 615, 618, 620, 621, 623, 624, 653, 654, 670, 671, 682, 683, 685, 689, 692, 693, 694, 695, 699, 701, 703, 704, 725, 728, 790, 793, 840, 843, 910, 913, 920, 923, 925, 928, 935, 938, 940, 943, 990, 993, 1026, 1042, 1081, 1082, 1097, 1098, 1152, 1168, 1169, 1176, 1179, 1181, 1184, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1245, 1248, 1272, 1298, 1301, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1359, 1362, 1376, 1379, 1435, 1439, 1471, 1472, 1475, 1487, 1518, 1521, 1528, 1531, 1548, 1552, 1568, 1569, 1570, 1571, 1572, 1573, 1575, 1581, 1582, 1583, 1585, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1659, 1663, 1685, 1696, 1699, 1741, 1742, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "ivy_jax": [19, 24], "subsequ": [19, 25, 41, 334, 338, 340, 344, 345, 347, 350, 352, 358, 1753], "call": [19, 25, 31, 34, 38, 42, 167, 172, 173, 178, 179, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 356, 357, 358, 359, 371, 670, 671, 694, 1026, 1105, 1171, 1208, 1220, 1229, 1230, 1240, 1572, 1573, 1578, 1582, 1583, 1752, 1753, 1756], "nativ": [19, 25, 44, 47, 48, 49, 51, 52, 53, 54, 55, 137, 138, 174, 175, 302, 303, 338, 342, 346, 347, 348, 349, 350, 354, 356, 357, 447, 497, 543, 546, 579, 580, 581, 603, 605, 606, 608, 609, 654, 670, 672, 673, 674, 675, 676, 679, 689, 700, 703, 1026, 1124, 1127, 1130, 1133, 1146, 1149, 1155, 1197, 1741, 1750, 1759], "native_arrai": [19, 25, 31, 54, 55, 56, 57, 60, 61, 149, 150, 176, 177, 180, 181, 182, 183, 302, 303, 324, 325, 346, 349, 350, 407, 417, 423, 433, 434, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 527, 530, 538, 541, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 626, 629, 643, 646, 655, 658, 670, 676, 679, 688, 704, 705, 708, 725, 728, 730, 733, 740, 743, 750, 753, 770, 773, 775, 778, 780, 783, 795, 798, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 900, 903, 905, 908, 910, 913, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1010, 1014, 1026, 1136, 1139, 1146, 1149, 1272, 1274, 1277, 1298, 1301, 1306, 1309, 1333, 1336, 1338, 1349, 1352, 1359, 1362, 1381, 1384, 1395, 1398, 1400, 1403, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1508, 1511, 1518, 1521, 1523, 1526, 1533, 1536, 1543, 1546, 1548, 1552, 1553, 1557, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1680, 1683, 1685, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "1": [19, 25, 31, 34, 35, 38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 338, 340, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 371, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 408, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 509, 511, 526, 527, 530, 532, 533, 535, 536, 538, 541, 548, 551, 553, 554, 556, 559, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 614, 615, 618, 638, 641, 643, 646, 670, 675, 676, 679, 684, 687, 688, 690, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1108, 1111, 1114, 1117, 1136, 1139, 1146, 1149, 1152, 1161, 1164, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309, 1311, 1314, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "ndarrai": [19, 25, 40, 54, 55, 137, 138, 334, 338, 339, 344, 347, 348, 349, 351, 352, 354, 356, 359, 497, 502, 504, 543, 546, 1026, 1198, 1202, 1741], "Or": [19, 25, 357], "jaxlib": [19, 25, 41, 334, 338, 339, 344, 351, 354, 356], "xla_extens": [19, 25, 334, 338, 339, 344, 351, 354, 356], "devicearrai": [19, 25, 334, 349, 354, 356], "set_backend_to_specific_vers": 19, "anyth": [19, 26, 350, 351, 1752, 1753], "updat": [19, 26, 38, 40, 41, 42, 49, 51, 53, 137, 138, 139, 140, 170, 171, 302, 303, 304, 305, 332, 333, 334, 336, 337, 338, 340, 344, 346, 349, 352, 354, 356, 357, 359, 371, 1026, 1124, 1127, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1323, 1326, 1568, 1569, 1570, 1572, 1579, 1580, 1588, 1589], "__dict__": [19, 26, 335, 354], "make": [19, 26, 34, 35, 40, 41, 42, 333, 334, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 1750, 1752, 1753, 1754, 1755, 1758, 1759], "set_jax_backend": 19, "equival": [19, 27, 28, 29, 30, 145, 146, 310, 311, 347, 348, 352, 357, 359, 497, 499, 500, 704, 770, 773, 905, 908, 910, 913, 965, 968, 1338, 1395, 1398, 1410, 1413, 1425, 1428, 1460, 1464], "set_numpy_backend": 19, "set_tensorflow_backend": 19, "set_torch_backend": 19, "unset_backend": [19, 335], "unset": [19, 31, 335, 354], "adjust": [19, 31, 161, 162, 326, 327, 1685, 1716, 1719, 1725, 1729], "dict": [19, 31, 49, 50, 51, 52, 53, 137, 138, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 343, 357, 358, 407, 417, 456, 457, 463, 670, 675, 1026, 1032, 1058, 1061, 1063, 1066, 1068, 1071, 1081, 1082, 1152, 1572, 1574, 1575, 1578, 1579, 1580, 1581, 1583, 1584, 1585, 1588, 1589, 1741], "previous": [19, 31, 38, 41, 345, 350, 354], "otherwis": [19, 31, 49, 50, 51, 52, 53, 56, 57, 60, 61, 137, 138, 139, 140, 145, 146, 149, 150, 155, 156, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 337, 338, 339, 340, 350, 354, 497, 499, 500, 532, 533, 579, 582, 585, 597, 600, 602, 604, 605, 606, 608, 609, 633, 636, 643, 646, 654, 670, 675, 704, 845, 848, 850, 853, 855, 858, 860, 863, 1026, 1037, 1040, 1208, 1220, 1235, 1238, 1338, 1339, 1342, 1349, 1352, 1430, 1434, 1455, 1459, 1460, 1464, 1487, 1523, 1526, 1568, 1569, 1570, 1572, 1585, 1622, 1623, 1626, 1628, 1631, 1643, 1647, 1669, 1675, 1678, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "implement": [19, 31, 40, 56, 57, 159, 160, 178, 179, 180, 181, 324, 325, 332, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 370, 371, 391, 403, 579, 582, 585, 655, 658, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 930, 933, 950, 953, 965, 968, 980, 983, 985, 988, 1005, 1009, 1010, 1014, 1338, 1364, 1367, 1368, 1370, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1741, 1742, 1749, 1750, 1751, 1752, 1755, 1758, 1759], "wa": [19, 31, 34, 42, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 340, 348, 354, 356, 1026, 1208, 1572, 1585, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1751, 1752, 1754], "last": [19, 31, 35, 42, 44, 47, 48, 54, 55, 115, 116, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 163, 164, 170, 171, 280, 281, 310, 311, 312, 313, 314, 315, 324, 325, 326, 327, 328, 329, 333, 335, 338, 340, 343, 347, 349, 350, 352, 354, 371, 407, 417, 423, 424, 456, 469, 472, 484, 487, 497, 532, 533, 670, 675, 1220, 1253, 1259, 1271, 1272, 1323, 1326, 1338, 1344, 1347, 1359, 1362, 1445, 1449, 1455, 1459, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1508, 1511, 1528, 1531, 1533, 1536, 1543, 1546, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1730, 1731, 1734, 1736, 1739, 1752], "henc": [19, 31, 41, 336, 350, 1487, 1503, 1506, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "here": [19, 31, 39, 40, 41, 42, 333, 336, 337, 340, 344, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 370, 371, 704, 970, 973, 1752, 1753], "tensor": [19, 31, 33, 54, 55, 60, 61, 115, 116, 137, 138, 149, 150, 153, 154, 170, 171, 176, 177, 182, 183, 302, 303, 314, 315, 318, 319, 334, 335, 338, 339, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 371, 387, 388, 423, 424, 497, 532, 533, 535, 536, 548, 551, 579, 610, 612, 654, 704, 920, 923, 925, 928, 1026, 1161, 1164, 1272, 1311, 1314, 1323, 1326, 1338, 1440, 1444, 1487, 1533, 1536, 1595, 1596, 1599, 1741, 1742, 1749, 1750, 1753, 1755, 1756, 1759], "howev": [19, 31, 34, 40, 41, 42, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 347, 348, 349, 350, 352, 354, 356, 357, 358, 359, 371, 1338, 1430, 1434, 1751, 1752, 1758], "befor": [19, 31, 40, 41, 42, 149, 150, 170, 171, 333, 334, 338, 339, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 354, 357, 371, 407, 417, 423, 425, 426, 670, 671, 694, 704, 1015, 1019, 1272, 1328, 1331, 1333, 1336, 1487, 1493, 1496, 1568, 1569, 1570, 1572, 1584, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1752], "becom": [19, 31, 33, 35, 42, 107, 108, 336, 340, 348, 371, 391, 393, 1487, 1488, 1491], "swap": [19, 31, 1487, 1548, 1552], "python": [19, 31, 32, 33, 34, 38, 39, 41, 42, 125, 126, 153, 154, 290, 291, 318, 319, 333, 336, 342, 343, 348, 350, 352, 354, 356, 357, 371, 439, 440, 441, 442, 497, 499, 500, 670, 689, 703, 704, 965, 968, 1026, 1219, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1617, 1620, 1741, 1742, 1749, 1752, 1753, 1754, 1758, 1759], "op": [19, 31, 351, 354, 371], "eagertensor": [19, 31], "backend": [22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 39, 40, 41, 42, 49, 51, 53, 137, 138, 139, 140, 170, 171, 302, 303, 332, 333, 334, 337, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 356, 359, 579, 620, 621, 623, 624, 632, 669, 670, 682, 683, 685, 687, 701, 1026, 1081, 1082, 1113, 1124, 1127, 1129, 1153, 1186, 1190, 1197, 1220, 1266, 1270, 1338, 1430, 1434, 1741, 1742, 1752, 1755, 1758, 1759], "ml": [32, 34, 35, 36, 39, 348, 353, 354, 355, 357, 358, 359, 370, 1742, 1748, 1749, 1750, 1751, 1752, 1755, 1757, 1759], "explos": [32, 34, 1742], "A": [32, 33, 34, 35, 38, 39, 40, 41, 54, 55, 56, 57, 107, 108, 121, 122, 125, 126, 137, 138, 149, 150, 153, 154, 163, 164, 167, 170, 171, 172, 173, 178, 179, 272, 273, 290, 291, 302, 303, 304, 305, 314, 315, 318, 319, 328, 329, 332, 336, 338, 339, 344, 345, 348, 350, 354, 357, 371, 387, 388, 391, 402, 423, 433, 434, 439, 440, 441, 442, 497, 518, 519, 543, 546, 579, 587, 590, 670, 694, 704, 945, 948, 960, 963, 1026, 1098, 1192, 1196, 1220, 1260, 1338, 1405, 1408, 1425, 1428, 1430, 1434, 1487, 1533, 1536, 1543, 1546, 1572, 1573, 1575, 1577, 1579, 1580, 1581, 1582, 1583, 1586, 1587, 1588, 1589, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1617, 1620, 1685, 1696, 1699, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1752, 1753], "huge": [32, 34, 357, 1742, 1752, 1758], "number": [32, 33, 41, 42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 121, 122, 137, 138, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 272, 273, 286, 287, 302, 303, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 336, 338, 339, 340, 347, 349, 350, 352, 354, 357, 387, 388, 391, 401, 402, 407, 417, 423, 433, 434, 494, 495, 496, 497, 499, 500, 518, 519, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 579, 587, 590, 605, 606, 608, 609, 614, 615, 618, 626, 629, 633, 636, 638, 641, 643, 646, 648, 651, 655, 658, 670, 686, 687, 688, 704, 720, 723, 740, 743, 780, 783, 825, 828, 830, 833, 860, 863, 920, 923, 930, 933, 950, 953, 965, 968, 970, 973, 975, 978, 1015, 1019, 1026, 1076, 1079, 1097, 1098, 1100, 1103, 1154, 1176, 1179, 1181, 1184, 1203, 1207, 1214, 1218, 1219, 1272, 1328, 1331, 1338, 1359, 1362, 1364, 1367, 1368, 1370, 1395, 1398, 1420, 1423, 1430, 1434, 1450, 1454, 1455, 1459, 1487, 1488, 1491, 1498, 1501, 1503, 1506, 1513, 1516, 1518, 1521, 1528, 1531, 1533, 1536, 1543, 1546, 1553, 1557, 1563, 1567, 1568, 1569, 1570, 1571, 1595, 1596, 1599, 1616, 1622, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "tool": [32, 35, 42, 340, 355, 359, 370, 371, 1742, 1750, 1751, 1752, 1753, 1755, 1758, 1759], "have": [32, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 391, 403, 407, 409, 416, 417, 419, 420, 421, 423, 433, 434, 439, 440, 442, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 496, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 615, 618, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1266, 1270, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1470, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1568, 1572, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "explod": [32, 33, 1742], "onto": [32, 33, 1572, 1578, 1584, 1742, 1752], "scene": [32, 33, 139, 140, 332, 353, 355, 1742, 1752], "b": [32, 35, 36, 44, 47, 48, 60, 61, 117, 118, 137, 138, 143, 144, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 332, 335, 336, 337, 340, 345, 353, 354, 355, 357, 358, 359, 369, 391, 403, 407, 417, 419, 421, 423, 434, 439, 440, 456, 458, 461, 469, 472, 497, 509, 511, 526, 527, 530, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 643, 646, 704, 705, 708, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1005, 1009, 1010, 1014, 1026, 1027, 1030, 1034, 1036, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1161, 1164, 1176, 1179, 1186, 1190, 1198, 1202, 1203, 1207, 1220, 1221, 1224, 1231, 1234, 1235, 1238, 1241, 1244, 1249, 1252, 1254, 1258, 1261, 1265, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1420, 1423, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1487, 1488, 1491, 1503, 1506, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1617, 1620, 1622, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1748], "why": [32, 34, 42, 347, 356, 1742], "unifi": [32, 34, 170, 171, 332, 333, 334, 338, 342, 348, 352, 354, 371, 670, 694, 1742, 1748, 1749, 1750, 1752, 1756, 1759], "should": [32, 34, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 60, 61, 107, 108, 121, 122, 137, 138, 139, 140, 145, 146, 149, 150, 153, 154, 155, 156, 161, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 182, 183, 272, 273, 286, 287, 304, 305, 310, 311, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 391, 403, 404, 407, 417, 423, 430, 456, 494, 495, 496, 497, 538, 541, 548, 551, 561, 565, 566, 570, 579, 592, 595, 654, 670, 671, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 815, 818, 820, 823, 825, 828, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1026, 1042, 1124, 1127, 1219, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1742, 1748, 1749, 1752, 1754, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "them": [32, 33, 34, 35, 38, 40, 42, 333, 334, 335, 336, 342, 346, 347, 348, 349, 350, 354, 356, 357, 358, 371, 1026, 1042, 1155, 1741, 1742, 1749, 1750, 1752, 1754, 1758], "c": [32, 34, 35, 36, 41, 137, 138, 139, 140, 143, 144, 161, 162, 178, 179, 182, 183, 286, 287, 302, 303, 304, 305, 314, 315, 326, 327, 332, 336, 340, 345, 352, 353, 354, 355, 357, 371, 579, 615, 618, 626, 629, 704, 770, 773, 875, 878, 880, 883, 940, 943, 975, 978, 1026, 1034, 1036, 1068, 1071, 1203, 1207, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1284, 1287, 1298, 1301, 1338, 1376, 1379, 1487, 1543, 1546, 1572, 1575, 1579, 1580, 1583, 1588, 1589, 1622, 1638, 1641, 1685, 1691, 1694, 1696, 1699, 1716, 1719, 1725, 1729, 1741, 1742, 1748, 1752, 1756, 1757, 1759], "standard": [32, 60, 61, 151, 152, 153, 154, 161, 162, 182, 183, 316, 317, 318, 319, 326, 327, 332, 333, 334, 336, 338, 341, 344, 347, 350, 351, 371, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1219, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1590, 1591, 1594, 1595, 1606, 1609, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1748, 1750, 1751, 1754, 1755, 1757], "re": [32, 33, 34, 36, 40, 41, 42, 137, 138, 332, 338, 351, 352, 356, 359, 371, 670, 694, 1026, 1042, 1058, 1061, 1338, 1440, 1444, 1487, 1528, 1531, 1622, 1643, 1647, 1742, 1752], "collabor": [32, 33, 34, 1742], "consortium": [32, 34, 1742], "api": [32, 33, 41, 42, 60, 61, 182, 183, 332, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 355, 357, 371, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 653, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1750, 1752, 1754, 1757, 1759], "open": [33, 34, 35, 36, 38, 41, 42, 153, 154, 318, 319, 337, 338, 341, 348, 349, 352, 370, 497, 499, 500, 1595, 1601, 1604, 1611, 1614, 1742, 1750, 1751, 1752, 1754, 1755], "project": [33, 34, 35, 38, 41, 42, 335, 350, 358, 370, 371, 1748, 1750, 1752, 1755, 1759], "grown": 33, "consider": [33, 340, 344, 352, 1749, 1750], "recent": [33, 34, 41, 42, 350], "year": [33, 35, 333, 371, 1742, 1752], "especi": [33, 41, 333, 352, 1752], "deep": [33, 36, 39, 40, 42, 170, 171, 336, 338, 349, 353, 356, 357, 1742, 1750, 1752, 1755, 1756, 1758, 1759], "learn": [33, 34, 36, 39, 40, 41, 139, 140, 304, 305, 332, 333, 345, 353, 370, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1568, 1569, 1570, 1571, 1741, 1742, 1750, 1754, 1755, 1756, 1757, 1758, 1759], "can": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 54, 55, 56, 57, 145, 146, 149, 150, 153, 154, 178, 179, 310, 311, 314, 315, 318, 319, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 371, 439, 440, 441, 497, 502, 504, 543, 546, 579, 597, 600, 670, 692, 693, 694, 1026, 1219, 1338, 1376, 1379, 1430, 1434, 1487, 1523, 1526, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1741, 1742, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1758, 1759], "seen": [33, 34, 337, 340, 342, 348, 350, 354, 356, 357, 439, 441, 1758], "rapidli": 33, "increas": [33, 145, 146, 310, 311, 338, 342, 351, 352, 407, 417, 1338, 1450, 1454, 1487, 1498, 1501, 1563, 1567, 1572, 1584, 1752], "github": [33, 37, 39, 40, 42, 333, 338, 340, 341, 350], "repo": [33, 37, 38, 39, 41, 42, 333, 338, 348, 351], "contain": [33, 37, 38, 40, 41, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 137, 138, 145, 146, 147, 148, 149, 150, 155, 156, 157, 158, 161, 162, 163, 164, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 337, 338, 340, 341, 344, 345, 346, 347, 350, 353, 354, 355, 358, 371, 387, 388, 391, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 433, 434, 456, 458, 461, 469, 472, 474, 477, 479, 482, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 626, 629, 633, 636, 643, 646, 655, 658, 670, 684, 688, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1033, 1043, 1046, 1048, 1051, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1099, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1141, 1144, 1161, 1164, 1170, 1171, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1211, 1219, 1220, 1221, 1224, 1231, 1234, 1235, 1238, 1241, 1244, 1249, 1252, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1579, 1585, 1588, 1590, 1591, 1594, 1595, 1596, 1599, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1752, 1753, 1758], "term": [33, 42, 336, 354, 1272, 1323, 1326, 1741, 1752], "time": [33, 34, 35, 40, 41, 42, 121, 122, 139, 140, 157, 158, 286, 287, 304, 305, 322, 323, 335, 336, 337, 338, 340, 344, 345, 346, 347, 348, 350, 351, 354, 357, 359, 371, 407, 417, 423, 433, 1220, 1225, 1228, 1241, 1244, 1272, 1323, 1326, 1487, 1553, 1557, 1568, 1569, 1570, 1571, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1750, 1752, 1753, 1756, 1757, 1758], "These": [33, 34, 35, 37, 39, 40, 41, 42, 121, 122, 286, 287, 333, 336, 337, 338, 340, 341, 343, 344, 345, 347, 349, 350, 351, 354, 355, 357, 358, 359, 371, 423, 430, 1338, 1364, 1367, 1741, 1752, 1756, 1758, 1759], "written": [33, 41, 334, 341, 344, 347, 348, 350, 351, 354, 356, 359, 371, 1750, 1752, 1756, 1758, 1759], "mani": [33, 34, 35, 40, 41, 42, 149, 150, 170, 171, 314, 315, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 357, 371, 387, 388, 1487, 1533, 1536, 1748, 1752, 1755, 1758, 1759], "differ": [33, 34, 35, 39, 41, 42, 44, 47, 48, 60, 61, 121, 122, 137, 138, 167, 170, 171, 172, 173, 286, 287, 302, 303, 326, 327, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 371, 391, 393, 394, 423, 425, 426, 433, 579, 615, 618, 704, 720, 723, 930, 933, 1000, 1004, 1026, 1083, 1086, 1272, 1318, 1321, 1487, 1493, 1496, 1543, 1546, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1742, 1749, 1750, 1751, 1752, 1755, 1758, 1759], "while": [33, 34, 40, 41, 42, 167, 170, 171, 172, 173, 335, 338, 340, 343, 344, 347, 348, 350, 352, 356, 358, 359, 371, 391, 394, 497, 548, 551, 579, 654, 704, 905, 908, 910, 913, 1648, 1649, 1653, 1685, 1704, 1707, 1716, 1719, 1752, 1758, 1759], "thi": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 371, 387, 388, 391, 392, 393, 401, 402, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 427, 430, 452, 453, 456, 489, 492, 494, 496, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 633, 636, 643, 646, 654, 655, 658, 670, 671, 689, 694, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1025, 1026, 1076, 1079, 1083, 1086, 1100, 1103, 1105, 1108, 1111, 1114, 1117, 1124, 1127, 1171, 1186, 1190, 1203, 1207, 1219, 1220, 1235, 1238, 1253, 1254, 1258, 1259, 1261, 1265, 1266, 1270, 1271, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1470, 1471, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1572, 1578, 1584, 1585, 1590, 1591, 1594, 1595, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "wonder": [33, 35, 356], "thing": [33, 34, 35, 39, 40, 41, 42, 335, 343, 348, 350, 352, 356, 357, 1752], "research": [33, 370, 1752, 1759], "develop": [33, 34, 35, 36, 37, 39, 40, 41, 42, 333, 337, 351, 370, 371, 1741, 1742, 1750, 1751, 1752, 1753, 1754, 1757, 1758, 1759], "also": [33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 370, 371, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 430, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1124, 1127, 1186, 1190, 1203, 1207, 1220, 1225, 1228, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1582, 1583, 1584, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1757, 1758, 1759], "consid": [33, 34, 145, 146, 310, 311, 345, 351, 355, 356, 357, 387, 388, 704, 905, 908, 910, 913, 1338, 1354, 1357, 1395, 1398, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1749, 1753, 1757, 1759], "speed": [33, 350, 1755], "evolv": [33, 1752], "shareabl": 33, "code": [33, 34, 35, 38, 39, 40, 41, 42, 60, 61, 167, 170, 171, 172, 173, 180, 181, 182, 183, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 369, 371, 670, 671, 695, 699, 1026, 1186, 1190, 1220, 1253, 1259, 1271, 1272, 1306, 1309, 1338, 1395, 1398, 1400, 1403, 1487, 1543, 1546, 1741, 1742, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759], "significantli": [33, 1338, 1430, 1434, 1750], "hinder": [33, 344], "librari": [33, 34, 35, 36, 40, 180, 181, 333, 352, 359, 369, 371, 670, 695, 699, 704, 820, 823, 885, 888, 905, 908, 910, 913, 1338, 1364, 1367, 1368, 1370, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1741, 1742, 1748, 1749, 1750, 1752, 1756, 1759], "outdat": 33, "month": [33, 41], "rigor": [33, 350], "maintain": [33, 42, 159, 160, 324, 325, 333, 337, 1669, 1670, 1673, 1680, 1683, 1751], "against": [33, 56, 57, 145, 146, 155, 156, 178, 179, 182, 183, 310, 311, 320, 321, 350, 354, 371, 579, 587, 590, 1338, 1381, 1384, 1386, 1389, 1395, 1398, 1410, 1413, 1622, 1623, 1626, 1752], "newest": 33, "For": [33, 34, 35, 37, 38, 40, 41, 42, 139, 140, 145, 146, 304, 305, 310, 311, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 370, 371, 391, 403, 407, 417, 497, 499, 500, 538, 541, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 930, 933, 950, 953, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1220, 1235, 1238, 1266, 1270, 1338, 1430, 1434, 1445, 1449, 1487, 1488, 1491, 1543, 1546, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1708, 1711, 1720, 1724, 1749, 1750, 1753, 1758, 1759], "softwar": [33, 34, 41, 42, 1750, 1755, 1756, 1757], "pipelin": [33, 334, 359, 1741, 1752, 1753, 1758], "where": [33, 34, 35, 36, 38, 41, 42, 54, 55, 60, 61, 107, 108, 121, 122, 137, 138, 145, 146, 149, 150, 153, 154, 155, 156, 161, 162, 163, 164, 170, 171, 176, 177, 182, 183, 272, 273, 286, 287, 310, 311, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 334, 335, 336, 338, 339, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 371, 387, 388, 391, 394, 397, 398, 407, 417, 423, 427, 439, 440, 497, 526, 527, 530, 538, 541, 548, 551, 704, 740, 743, 815, 818, 860, 863, 885, 888, 920, 923, 925, 928, 930, 933, 950, 953, 1026, 1124, 1127, 1219, 1220, 1253, 1259, 1271, 1338, 1364, 1367, 1386, 1389, 1395, 1398, 1410, 1413, 1415, 1418, 1430, 1434, 1435, 1439, 1445, 1449, 1455, 1459, 1487, 1488, 1491, 1498, 1501, 1513, 1516, 1543, 1546, 1563, 1567, 1572, 1573, 1583, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1638, 1641, 1685, 1716, 1719, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1750, 1759], "rapid": [33, 34, 41, 1752], "prototyp": [33, 1752], "vital": [33, 359], "signific": [33, 34, 371, 1752], "bottleneck": 33, "As": [33, 42, 165, 166, 330, 331, 334, 336, 338, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 371, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1752, 1757], "new": [33, 34, 35, 36, 38, 40, 41, 42, 107, 108, 137, 138, 139, 140, 149, 150, 151, 152, 170, 171, 176, 177, 272, 273, 302, 303, 304, 305, 314, 315, 316, 317, 332, 335, 336, 337, 338, 340, 341, 343, 346, 347, 348, 349, 350, 351, 352, 353, 356, 359, 370, 391, 402, 423, 430, 497, 512, 521, 524, 526, 527, 530, 548, 551, 553, 554, 556, 559, 571, 573, 574, 578, 579, 664, 704, 745, 748, 945, 948, 960, 963, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1156, 1159, 1161, 1164, 1168, 1173, 1176, 1179, 1181, 1184, 1198, 1202, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1487, 1503, 1506, 1523, 1526, 1543, 1546, 1572, 1577, 1588, 1589, 1590, 1591, 1594, 1741, 1742, 1750, 1754, 1758, 1759], "futur": [33, 35, 41, 42, 338, 348, 351, 352, 356, 371, 1338, 1364, 1367, 1368, 1370, 1758], "avail": [33, 41, 42, 137, 138, 302, 303, 336, 337, 339, 341, 348, 371, 670, 675, 685, 686, 687, 701, 1026, 1063, 1066, 1757, 1758], "quickli": [33, 35, 41, 42, 357, 358, 1752, 1759], "obsolet": [33, 35], "user": [33, 34, 37, 38, 41, 42, 332, 335, 336, 338, 346, 347, 348, 350, 352, 353, 354, 371, 391, 401, 407, 417, 456, 457, 463, 1750, 1752, 1758, 1759], "constantli": [33, 351, 352], "invent": 33, "wheel": 33, "our": [33, 34, 36, 39, 40, 41, 42, 44, 165, 166, 167, 330, 331, 333, 336, 337, 338, 340, 342, 343, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 371, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1742, 1757, 1758, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "desir": [33, 42, 56, 57, 155, 156, 170, 171, 178, 179, 180, 181, 320, 321, 335, 338, 348, 354, 579, 582, 585, 597, 600, 670, 695, 699, 1622, 1633, 1636, 1752], "simultan": [33, 35], "modern": [33, 34, 1757], "simpl": [33, 40, 41, 42, 334, 336, 338, 339, 340, 341, 345, 347, 348, 350, 351, 352, 356, 358, 359, 371, 1026, 1073, 1075, 1741, 1751, 1752, 1753, 1754], "scalabl": [33, 354, 1757, 1758], "manner": [33, 41, 49, 52, 53, 174, 175, 339, 341, 348, 351, 357, 370, 371, 1572, 1584, 1748, 1750, 1758, 1759], "determin": [33, 44, 47, 48, 60, 61, 107, 108, 145, 146, 149, 150, 163, 164, 167, 170, 171, 172, 173, 182, 183, 272, 273, 302, 303, 310, 311, 324, 325, 328, 329, 336, 338, 339, 341, 345, 348, 349, 352, 391, 403, 579, 597, 600, 603, 614, 632, 633, 636, 638, 641, 643, 646, 648, 651, 669, 670, 685, 686, 687, 701, 704, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 800, 803, 815, 818, 820, 823, 845, 848, 850, 853, 855, 858, 860, 863, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 915, 918, 930, 933, 950, 953, 965, 968, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1108, 1111, 1113, 1129, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1186, 1190, 1214, 1218, 1220, 1235, 1238, 1272, 1328, 1331, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1371, 1374, 1376, 1379, 1381, 1384, 1391, 1393, 1395, 1398, 1405, 1408, 1410, 1413, 1420, 1423, 1425, 1428, 1445, 1449, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1568, 1569, 1570, 1571, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1730, 1731, 1734, 1736, 1739], "exactli": [33, 35, 336, 338, 339, 340, 352], "common": [33, 40, 60, 61, 107, 108, 170, 171, 272, 273, 336, 338, 339, 340, 343, 345, 346, 348, 351, 352, 371, 391, 393, 396, 399, 579, 654, 704, 930, 933, 1749, 1752, 1759], "ground": [33, 348, 350], "li": 33, "between": [33, 107, 108, 147, 148, 149, 150, 167, 170, 171, 172, 173, 182, 183, 312, 313, 314, 315, 334, 335, 336, 340, 344, 345, 348, 349, 350, 352, 353, 355, 356, 357, 359, 370, 391, 404, 407, 417, 497, 499, 500, 579, 615, 618, 704, 740, 743, 950, 953, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1543, 1546, 1572, 1578, 1595, 1601, 1604, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1748, 1749, 1751, 1752, 1753, 1758], "find": [33, 36, 38, 39, 40, 41, 42, 170, 171, 333, 337, 350, 352, 354, 357, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1741, 1742], "essenti": [33, 34, 40, 336, 339, 340, 345, 351, 1758], "order": [33, 38, 40, 41, 42, 44, 47, 48, 121, 122, 139, 140, 145, 146, 159, 160, 167, 170, 171, 172, 173, 286, 287, 310, 311, 324, 325, 334, 335, 336, 337, 338, 339, 340, 341, 344, 347, 348, 349, 350, 351, 352, 357, 359, 371, 387, 388, 423, 424, 425, 426, 497, 538, 541, 704, 740, 743, 1338, 1364, 1367, 1386, 1389, 1430, 1434, 1435, 1439, 1450, 1454, 1460, 1464, 1487, 1508, 1511, 1568, 1569, 1570, 1622, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1748, 1751, 1752, 1753, 1755, 1758], "design": [33, 34, 280, 281, 332, 338, 347, 348, 349, 352, 354, 356, 371, 407, 412, 413, 1748, 1750, 1752, 1755, 1756, 1757], "univers": 33, "abstract": [33, 336, 338, 348, 350, 352, 358, 371, 670, 671, 1750, 1752, 1754, 1755, 1759], "In": [33, 35, 37, 40, 41, 42, 137, 138, 149, 150, 180, 181, 314, 315, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 359, 370, 371, 670, 689, 695, 699, 700, 703, 704, 720, 723, 930, 933, 965, 968, 1026, 1032, 1124, 1127, 1487, 1523, 1526, 1595, 1611, 1614, 1742, 1748, 1750, 1752, 1753, 1755, 1758], "search": [33, 39, 41, 49, 52, 53, 128, 156, 174, 175, 293, 321, 336, 340, 350, 351, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647], "languag": [33, 35, 348, 352, 354, 1741, 1750, 1753, 1755, 1756, 1757, 1758], "first": [33, 34, 37, 38, 39, 40, 41, 42, 44, 47, 48, 60, 61, 107, 108, 115, 116, 121, 122, 145, 146, 153, 154, 155, 156, 157, 158, 161, 162, 167, 172, 173, 182, 183, 272, 273, 280, 281, 282, 283, 310, 311, 318, 319, 322, 323, 326, 327, 333, 334, 336, 340, 344, 345, 346, 347, 348, 350, 352, 354, 356, 357, 359, 387, 388, 391, 394, 395, 396, 399, 400, 407, 417, 419, 421, 423, 424, 433, 445, 446, 494, 495, 497, 532, 533, 535, 536, 579, 653, 664, 670, 675, 704, 720, 723, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 805, 808, 830, 833, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 1000, 1004, 1026, 1034, 1036, 1338, 1344, 1347, 1359, 1362, 1364, 1367, 1371, 1374, 1381, 1384, 1405, 1408, 1415, 1418, 1430, 1434, 1440, 1444, 1455, 1459, 1487, 1528, 1531, 1543, 1546, 1548, 1552, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1582, 1583, 1595, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1750, 1752, 1753, 1757], "see": [33, 36, 38, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 145, 146, 155, 156, 161, 162, 163, 164, 167, 172, 173, 182, 183, 310, 311, 320, 321, 326, 327, 328, 329, 333, 336, 337, 339, 340, 344, 345, 348, 349, 350, 351, 352, 354, 356, 357, 370, 371, 387, 388, 497, 499, 500, 521, 524, 532, 533, 535, 536, 579, 592, 595, 655, 658, 704, 720, 723, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 820, 823, 865, 868, 885, 888, 895, 898, 910, 913, 915, 918, 940, 943, 950, 953, 965, 968, 1000, 1004, 1020, 1024, 1338, 1395, 1398, 1410, 1413, 1425, 1428, 1455, 1459, 1460, 1464, 1622, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1748], "clear": [33, 34, 35, 40, 42, 338, 339, 340, 348, 352, 354, 356, 670, 674, 1752], "front": [33, 353, 354, 357, 1742, 1750, 1752], "runner": 33, "look": [33, 37, 38, 41, 42, 335, 336, 338, 339, 340, 342, 344, 345, 348, 349, 350, 351, 352, 354, 356, 358, 359, 1742, 1748, 1752], "littl": [33, 349, 356, 1754], "deeper": [33, 42, 332, 350, 353, 1572, 1583, 1584], "follow": [33, 34, 38, 40, 41, 42, 137, 138, 139, 140, 170, 171, 302, 303, 304, 305, 310, 311, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 371, 407, 417, 579, 626, 629, 670, 694, 704, 965, 968, 1026, 1114, 1117, 1119, 1122, 1124, 1127, 1176, 1179, 1181, 1184, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1328, 1331, 1333, 1336, 1338, 1386, 1389, 1415, 1418, 1460, 1464, 1572, 1578, 1584, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1749, 1752, 1755], "same": [33, 35, 37, 38, 41, 42, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 115, 116, 131, 132, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 170, 171, 176, 177, 178, 179, 182, 183, 280, 281, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 318, 319, 322, 323, 326, 327, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 371, 387, 388, 391, 393, 407, 408, 409, 414, 415, 416, 417, 445, 446, 497, 499, 500, 513, 516, 527, 530, 538, 541, 548, 551, 556, 559, 561, 565, 566, 570, 574, 578, 579, 582, 585, 587, 590, 592, 595, 670, 694, 704, 705, 708, 720, 723, 755, 758, 780, 783, 825, 828, 930, 933, 965, 968, 970, 973, 975, 978, 1015, 1019, 1220, 1235, 1238, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1391, 1393, 1400, 1403, 1410, 1413, 1415, 1418, 1425, 1428, 1430, 1434, 1445, 1449, 1455, 1459, 1487, 1493, 1496, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1568, 1569, 1570, 1572, 1585, 1595, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1742, 1749, 1751, 1758, 1759], "core": [33, 40, 41, 339, 350, 359, 670, 686, 1742, 1750, 1751, 1752, 1753, 1757, 1759], "principl": [33, 1750, 1752, 1755], "oper": [33, 40, 41, 56, 57, 107, 108, 115, 116, 137, 138, 139, 140, 143, 144, 167, 170, 171, 172, 173, 178, 179, 272, 273, 280, 281, 302, 303, 308, 309, 333, 334, 336, 338, 339, 340, 341, 345, 347, 348, 350, 352, 354, 357, 358, 391, 401, 407, 408, 409, 414, 415, 416, 497, 532, 533, 535, 536, 579, 655, 658, 704, 720, 723, 770, 773, 775, 778, 840, 843, 935, 938, 940, 943, 965, 968, 995, 998, 1026, 1037, 1040, 1058, 1061, 1063, 1066, 1068, 1071, 1186, 1190, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1318, 1321, 1741, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759], "expos": [33, 354, 358, 1026, 1053], "almost": [33, 39, 336, 349, 355, 357], "ident": [33, 35, 170, 171, 336, 345, 346, 348, 349, 351, 352, 356, 357, 371, 670, 684, 1026, 1096, 1338, 1391, 1393, 1572, 1585, 1741, 1742], "uniqu": [33, 121, 122, 157, 158, 286, 287, 322, 323, 336, 345, 348, 349, 350, 352, 371, 407, 417, 423, 430, 1568, 1569, 1570, 1571, 1572, 1578, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1755], "syntax": [33, 34, 338, 343, 1752], "There": [33, 40, 41, 42, 333, 334, 336, 338, 340, 342, 343, 345, 348, 349, 354, 357, 371, 1753, 1754, 1758, 1759], "onli": [33, 36, 40, 41, 42, 44, 47, 48, 107, 108, 149, 150, 153, 154, 170, 171, 272, 273, 314, 315, 318, 319, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 369, 371, 391, 401, 423, 424, 439, 440, 579, 653, 654, 670, 690, 703, 704, 905, 908, 910, 913, 1026, 1042, 1338, 1381, 1384, 1415, 1418, 1430, 1434, 1487, 1508, 1511, 1572, 1573, 1574, 1582, 1583, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1669, 1675, 1678, 1685, 1704, 1707, 1716, 1719, 1742, 1751, 1752, 1753, 1758, 1759], "so": [33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 371, 372, 382, 391, 393, 1572, 1573, 1583, 1742, 1752, 1753, 1754, 1756], "wai": [33, 34, 39, 40, 41, 333, 335, 338, 347, 349, 350, 352, 356, 357, 358, 359, 371, 1754, 1758, 1759], "manipul": [33, 122, 150, 287, 315, 351, 354, 359, 370, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1752], "unsurprisingli": [33, 340], "fundament": [33, 348, 352, 354, 1752], "consist": [33, 170, 171, 333, 334, 338, 342, 347, 354, 1338, 1364, 1367, 1685, 1696, 1699, 1753], "each": [33, 34, 35, 37, 40, 41, 42, 44, 47, 48, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 155, 156, 157, 158, 161, 162, 167, 170, 171, 172, 173, 178, 179, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 320, 321, 322, 323, 326, 327, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 359, 370, 371, 391, 393, 403, 407, 408, 409, 414, 415, 416, 417, 423, 425, 426, 427, 429, 430, 456, 474, 477, 479, 482, 489, 492, 497, 538, 541, 579, 587, 590, 670, 694, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1027, 1030, 1083, 1086, 1219, 1220, 1225, 1228, 1229, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1364, 1367, 1368, 1370, 1381, 1384, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1420, 1423, 1425, 1428, 1430, 1434, 1450, 1454, 1487, 1498, 1501, 1518, 1521, 1528, 1531, 1533, 1536, 1543, 1546, 1553, 1557, 1563, 1567, 1572, 1578, 1585, 1595, 1596, 1599, 1622, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1685, 1691, 1694, 1696, 1699, 1742, 1748, 1749, 1753, 1755, 1758], "veri": [33, 34, 39, 40, 41, 42, 107, 108, 272, 273, 336, 338, 339, 340, 344, 345, 347, 348, 349, 350, 351, 352, 355, 357, 358, 359, 371, 391, 401, 1742, 1748, 1749, 1750, 1752, 1753, 1754, 1757, 1758, 1759], "similar": [33, 40, 41, 336, 337, 338, 339, 342, 346, 348, 349, 350, 351, 357, 371, 704, 965, 968, 1272, 1328, 1331, 1748, 1749, 1750, 1751, 1758], "convent": [33, 335, 344, 351, 370, 1338, 1381, 1384, 1685, 1696, 1699, 1758], "those": [33, 40, 41, 42, 149, 150, 170, 171, 314, 315, 336, 338, 346, 348, 350, 352, 497, 499, 500, 579, 654, 1026, 1219, 1220, 1266, 1270, 1338, 1415, 1418, 1430, 1434, 1487, 1488, 1491, 1749], "introduc": [33, 336, 337, 338, 349, 357, 1487, 1528, 1531, 1648, 1649, 1653], "2006": 33, "layer": [33, 116, 144, 151, 152, 281, 309, 316, 317, 341, 348, 351, 352, 354, 355, 358, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309, 1311, 1314, 1316, 1317, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1590, 1591, 1594, 1742, 1750, 1752, 1756, 1759], "therefor": [33, 37, 40, 42, 60, 61, 182, 183, 333, 334, 336, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 358, 371, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 654, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1186, 1190, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1749, 1752, 1758], "present": [33, 40, 42, 170, 171, 336, 338, 339, 344, 347, 354, 1749, 1750, 1759], "itself": [33, 41, 42, 107, 108, 333, 336, 347, 348, 358, 370, 371, 391, 401, 1026, 1032, 1208, 1572, 1584, 1751, 1752, 1753, 1758], "cut": [33, 1758], "cloth": 33, "adher": [33, 34, 333, 338, 341, 344, 352, 354, 359, 1748, 1749, 1758], "semant": [33, 354, 359, 704, 965, 968, 1753], "round": [33, 34, 35, 37, 38, 40, 41, 42, 60, 61, 182, 183, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 704, 720, 723, 780, 783, 825, 828, 830, 833, 930, 933, 990, 993, 1015, 1019, 1020, 1024, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "up": [33, 34, 35, 36, 37, 38, 40, 42, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 423, 426, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "hopefulli": [33, 34, 35, 37, 38, 40, 41, 42, 44, 167, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "paint": [33, 354], "pictur": [33, 40, 354], "how": [33, 35, 36, 38, 39, 40, 41, 42, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351, 352, 353, 355, 356, 357, 358, 359, 370, 371, 1742, 1748, 1752], "pleas": [33, 34, 35, 37, 38, 40, 41, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "reach": [33, 34, 35, 37, 38, 40, 41, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1584, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "out": [33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 496, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1026, 1033, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1152, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1259, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1470, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1568, 1572, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1643, 1647, 1648, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "discord": [33, 34, 35, 37, 38, 40, 41, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "you": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 137, 138, 167, 302, 303, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 371, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1083, 1086, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1741, 1742, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "question": [33, 34, 35, 37, 38, 40, 41, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 370, 371, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "With": [34, 35, 41, 44, 47, 48, 54, 55, 56, 57, 60, 61, 121, 122, 137, 138, 139, 140, 145, 146, 155, 156, 161, 162, 167, 172, 173, 176, 177, 178, 179, 182, 183, 272, 273, 280, 281, 286, 287, 296, 297, 298, 299, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 340, 346, 348, 350, 352, 354, 391, 399, 403, 407, 417, 419, 420, 423, 424, 427, 430, 433, 434, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 509, 511, 526, 527, 530, 538, 541, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 603, 610, 612, 614, 615, 618, 626, 629, 643, 646, 655, 658, 660, 662, 670, 676, 679, 688, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1161, 1164, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1219, 1220, 1221, 1224, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1420, 1423, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1755], "central": [34, 40, 352, 1758], "goal": [34, 40, 1752, 1758], "being": [34, 35, 41, 42, 44, 47, 48, 170, 171, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 346, 347, 348, 349, 350, 352, 354, 357, 370, 371, 407, 417, 497, 499, 500, 1026, 1042, 1105, 1171, 1742, 1748, 1750, 1751, 1752, 1753, 1758, 1759], "would": [34, 36, 38, 40, 41, 42, 149, 150, 180, 181, 314, 315, 332, 333, 334, 335, 336, 338, 340, 341, 343, 344, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 359, 371, 456, 469, 472, 484, 487, 670, 695, 699, 1487, 1523, 1526, 1742, 1752, 1758], "entir": [34, 35, 40, 41, 42, 161, 162, 163, 164, 170, 171, 302, 303, 326, 327, 328, 329, 333, 334, 336, 338, 340, 347, 348, 350, 352, 354, 357, 358, 359, 371, 407, 417, 670, 694, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1758, 1759], "forgiven": 34, "rais": [34, 42, 107, 108, 137, 138, 149, 150, 153, 154, 163, 164, 170, 171, 272, 273, 302, 303, 314, 315, 318, 319, 328, 329, 333, 335, 342, 343, 347, 348, 354, 356, 391, 393, 439, 440, 579, 592, 595, 704, 815, 818, 950, 953, 1026, 1037, 1040, 1097, 1124, 1127, 1168, 1181, 1184, 1186, 1190, 1208, 1220, 1253, 1259, 1271, 1338, 1381, 1384, 1391, 1393, 1455, 1459, 1487, 1503, 1506, 1523, 1526, 1543, 1546, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1638, 1641, 1685, 1700, 1703, 1708, 1711, 1730, 1731, 1734, 1736, 1739], "an": [34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 137, 138, 139, 140, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 302, 303, 304, 305, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 370, 371, 387, 388, 391, 399, 401, 403, 404, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 430, 431, 432, 433, 439, 440, 442, 445, 446, 456, 474, 477, 479, 482, 489, 492, 494, 496, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 605, 606, 615, 618, 626, 629, 633, 636, 643, 646, 654, 655, 658, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1025, 1026, 1043, 1046, 1048, 1051, 1076, 1079, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1124, 1127, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1161, 1164, 1186, 1190, 1198, 1202, 1203, 1207, 1208, 1219, 1220, 1235, 1238, 1253, 1254, 1258, 1261, 1265, 1266, 1270, 1271, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1470, 1471, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1572, 1578, 1590, 1591, 1594, 1595, 1601, 1604, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1748, 1750, 1751, 1752, 1753, 1755, 1756, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "eyebrow": 34, "somehow": 34, "pytorch": [34, 35, 39, 40, 139, 140, 337, 338, 339, 342, 344, 345, 347, 348, 349, 351, 352, 354, 359, 371, 704, 970, 973, 1741, 1742, 1753, 1755, 1756, 1758, 1759], "other": [34, 37, 40, 41, 42, 44, 47, 48, 56, 57, 137, 138, 161, 162, 167, 170, 171, 172, 173, 178, 179, 182, 183, 302, 303, 326, 327, 333, 334, 336, 337, 340, 341, 343, 345, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 369, 370, 371, 494, 495, 497, 499, 500, 548, 551, 579, 654, 704, 820, 823, 885, 888, 1026, 1027, 1030, 1032, 1595, 1611, 1614, 1685, 1716, 1719, 1725, 1729, 1741, 1742, 1748, 1750, 1751, 1752, 1758, 1759], "strong": [34, 371, 1752], "industri": [34, 1752, 1754], "back": [34, 41, 42, 334, 338, 346, 353, 371, 1026, 1166, 1209, 1750, 1754], "momentum": 34, "won": [34, 35, 41, 42, 336, 350, 359], "ad": [34, 39, 40, 41, 42, 149, 150, 314, 315, 330, 331, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 358, 371, 1026, 1176, 1179, 1181, 1184, 1338, 1364, 1367, 1368, 1370, 1487, 1503, 1506, 1751, 1752], "just": [34, 35, 41, 42, 333, 335, 338, 340, 341, 345, 346, 347, 348, 349, 350, 354, 356, 357, 371, 387, 388, 1685, 1696, 1699, 1752, 1753, 1758], "problem": [34, 42, 334, 348, 356, 1748, 1754, 1758], "even": [34, 35, 41, 42, 115, 116, 280, 281, 333, 338, 339, 341, 344, 345, 348, 352, 356, 357, 358, 359, 371, 407, 417, 704, 950, 953, 970, 973, 1758], "wors": 34, "rather": [34, 42, 137, 138, 139, 140, 170, 171, 302, 303, 304, 305, 333, 336, 338, 341, 347, 348, 349, 350, 351, 359, 371, 497, 499, 500, 670, 694, 1026, 1130, 1133, 1136, 1139, 1146, 1149, 1220, 1235, 1238, 1748, 1751, 1752], "funni": 34, "comic": 34, "strip": 34, "easi": [34, 41, 42, 336, 345, 349, 352, 1750, 1752, 1758, 1759], "feasibl": [34, 40], "space": [34, 107, 108, 137, 138, 182, 183, 302, 303, 350, 352, 391, 404, 497, 499, 500, 532, 533, 535, 536, 1026, 1076, 1079, 1220, 1253, 1259, 1271], "case": [34, 40, 41, 42, 49, 52, 53, 125, 126, 137, 138, 149, 150, 161, 162, 167, 170, 171, 172, 173, 302, 303, 314, 315, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 371, 391, 394, 403, 439, 441, 497, 538, 541, 670, 689, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 775, 778, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 930, 933, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1124, 1127, 1161, 1164, 1487, 1523, 1526, 1572, 1575, 1581, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729, 1751, 1755], "unlik": [34, 336, 340, 347, 1757, 1759], "charger": 34, "charact": [34, 343], "encod": [34, 137, 138, 302, 303, 357, 1026, 1076, 1079], "instant": [34, 1742], "much": [34, 40, 41, 42, 334, 336, 338, 347, 348, 349, 351, 354, 356, 357, 1750, 1752, 1758, 1759], "doe": [34, 38, 40, 42, 107, 108, 149, 150, 170, 171, 272, 273, 314, 315, 332, 335, 338, 340, 341, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 371, 387, 388, 391, 401, 704, 775, 778, 1026, 1124, 1127, 1487, 1533, 1536, 1741, 1748, 1752, 1753, 1759], "mandat": [34, 338, 347, 350, 351], "adopt": [34, 42, 334, 344, 352, 1751, 1752, 1757], "continu": [34, 35, 39, 40, 41, 332, 333, 343, 350, 371, 1752], "own": [34, 35, 41, 333, 338, 341, 342, 348, 350, 351, 354, 371, 1741, 1748, 1751, 1752, 1757, 1758], "signatur": [34, 60, 61, 182, 183, 338, 339, 340, 341, 344, 347, 350, 351, 352, 407, 417, 423, 424, 579, 597, 600, 704, 845, 848, 1685, 1716, 1719, 1749, 1758], "replac": [34, 38, 42, 60, 61, 107, 108, 137, 138, 149, 150, 153, 154, 170, 171, 272, 273, 302, 303, 314, 315, 318, 319, 336, 338, 339, 340, 346, 348, 350, 356, 359, 371, 391, 401, 1026, 1156, 1159, 1161, 1164, 1487, 1488, 1491, 1595, 1596, 1599, 1759], "your": [34, 35, 36, 37, 38, 39, 40, 41, 333, 341, 351, 352, 357, 358, 371, 1742, 1752], "10": [34, 38, 41, 60, 61, 107, 108, 115, 116, 131, 132, 133, 134, 137, 138, 139, 140, 145, 146, 153, 154, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 336, 338, 340, 349, 350, 354, 356, 357, 391, 396, 399, 402, 407, 408, 414, 415, 423, 424, 445, 446, 452, 453, 497, 535, 536, 704, 715, 718, 750, 753, 755, 758, 770, 773, 790, 793, 820, 823, 840, 843, 870, 873, 880, 883, 885, 888, 955, 958, 985, 988, 990, 993, 1026, 1042, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1096, 1105, 1114, 1117, 1119, 1122, 1161, 1164, 1171, 1176, 1179, 1212, 1220, 1241, 1244, 1272, 1274, 1277, 1338, 1349, 1352, 1359, 1362, 1376, 1379, 1386, 1389, 1405, 1408, 1435, 1439, 1440, 1444, 1487, 1508, 1511, 1533, 1536, 1543, 1546, 1558, 1562, 1572, 1578, 1580, 1583, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1622, 1638, 1641, 1648, 1649, 1653, 1669, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1708, 1711, 1720, 1724, 1725, 1729, 1757], "100": [34, 35, 107, 108, 272, 273, 302, 303, 350, 357, 358, 359, 371, 387, 388, 391, 401, 704, 770, 773, 990, 993, 1026, 1088, 1091, 1119, 1122, 1161, 1164, 1338, 1376, 1379, 1572, 1578, 1742], "despit": [34, 336, 338, 339, 352, 354, 1749, 1752], "distinct": [34, 41, 336, 341, 347, 348, 353, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1752], "still": [34, 40, 42, 170, 171, 338, 341, 347, 348, 350, 352, 358, 371, 1338, 1430, 1434, 1742, 1749, 1752, 1758], "believ": [34, 42], "share": [34, 170, 171, 335, 336, 340, 345, 349, 350, 352, 354, 579, 664, 1750, 1751, 1758], "bring": [34, 333, 350, 354, 355, 1741], "benefit": [34, 35, 41, 334, 336, 347, 352, 356, 357, 371, 1750, 1754, 1757], "unrel": [34, 42], "what": [34, 35, 37, 42, 332, 336, 340, 341, 344, 346, 348, 350, 353, 354, 356, 357, 358, 359, 370, 371, 1742, 1748, 1753, 1754, 1757], "again": [34, 35, 42, 335, 336, 340, 347, 348, 350, 351, 352, 357, 359, 371, 1757, 1758], "contrari": 34, "bumpi": 34, "road": 34, "allud": [34, 357], "most": [34, 39, 40, 41, 170, 171, 176, 177, 334, 336, 338, 339, 343, 344, 345, 347, 348, 350, 351, 352, 354, 356, 357, 358, 371, 497, 548, 551, 1338, 1364, 1367, 1752, 1753, 1755, 1756, 1758, 1759], "technologi": [34, 1750, 1754], "sector": [34, 60, 61, 182, 183, 704, 715, 718, 730, 733, 745, 748], "full": [34, 35, 42, 145, 146, 338, 341, 344, 348, 350, 352, 354, 371, 497, 579, 615, 618, 704, 840, 843, 870, 873, 1026, 1167, 1210, 1272, 1298, 1301, 1338, 1395, 1398, 1415, 1418, 1425, 1428, 1430, 1434, 1750, 1752, 1758], "success": 34, "reason": [34, 40, 42, 333, 334, 336, 338, 340, 345, 347, 348, 351, 352, 354, 356, 704, 965, 968, 1758], "build": [34, 36, 37, 41, 337, 338, 345, 353, 355, 358, 359, 371, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1741, 1742, 1750, 1752, 1754, 1757, 1758, 1759], "custom": [34, 337, 342, 349, 350, 358, 1752, 1756, 1757, 1758], "comput": [34, 35, 41, 45, 46, 60, 61, 107, 108, 115, 116, 121, 122, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 161, 162, 168, 169, 170, 171, 182, 183, 272, 273, 282, 283, 286, 287, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 326, 327, 336, 338, 345, 348, 350, 352, 354, 357, 371, 391, 394, 395, 399, 402, 407, 408, 409, 410, 412, 413, 414, 415, 416, 419, 421, 423, 427, 429, 434, 452, 453, 670, 694, 704, 720, 723, 750, 753, 765, 768, 775, 778, 805, 808, 810, 813, 835, 838, 840, 843, 865, 868, 870, 873, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 965, 968, 1026, 1042, 1043, 1046, 1048, 1051, 1220, 1221, 1224, 1229, 1230, 1240, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1318, 1321, 1328, 1331, 1338, 1339, 1342, 1344, 1347, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1455, 1459, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1503, 1506, 1572, 1578, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1741, 1748, 1750, 1752, 1753, 1755, 1756, 1758], "thank": [34, 357], "interoper": [34, 1749, 1750, 1752, 1755], "compon": [34, 354, 1220, 1253, 1259, 1271, 1748, 1753, 1755], "bio": [34, 41], "hardwar": [34, 41, 44, 47, 48, 352, 1748, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758], "initi": [34, 42, 167, 170, 171, 172, 173, 335, 338, 339, 350, 354, 1272, 1323, 1326, 1752, 1758, 1759], "pcie": 34, "interfac": [34, 356, 359, 371, 1741, 1748, 1749, 1750, 1751, 1752, 1756, 1759], "motherboard": 34, "raid": 34, "storag": [34, 357], "virtual": [34, 37, 38, 42, 1755, 1756], "bluetooth": 34, "wireless": 34, "exchang": [34, 39, 1748, 1750], "btx": 34, "form": [34, 36, 49, 50, 51, 52, 53, 54, 55, 139, 140, 145, 146, 170, 171, 310, 311, 345, 350, 352, 358, 359, 407, 411, 417, 423, 428, 435, 497, 502, 504, 543, 546, 561, 565, 566, 570, 1026, 1032, 1191, 1197, 1272, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1572, 1574, 1584, 1752, 1753, 1758], "factor": [34, 139, 140, 143, 144, 145, 146, 280, 281, 304, 305, 308, 309, 310, 311, 342, 670, 692, 693, 694, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1245, 1248, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1339, 1342], "sata": 34, "connect": [34, 41, 358, 359, 1750], "host": [34, 371, 1757], "bu": 34, "adapt": [34, 304, 305, 1220, 1245, 1248], "devic": [34, 42, 44, 47, 48, 54, 55, 59, 106, 153, 154, 170, 171, 176, 177, 181, 266, 267, 271, 302, 303, 318, 319, 332, 335, 338, 342, 345, 346, 349, 351, 352, 354, 359, 371, 387, 388, 439, 440, 442, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 671, 672, 673, 674, 675, 676, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 701, 702, 703, 1026, 1033, 1081, 1082, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1741, 1751, 1752, 1754, 1755, 1756, 1757], "html": [34, 38, 60, 61, 182, 183, 341, 387, 388, 423, 424, 579, 597, 600, 704, 845, 848, 1685, 1716, 1719], "enabl": [34, 41, 42, 167, 170, 171, 172, 173, 334, 336, 345, 346, 347, 348, 350, 352, 353, 355, 357, 359, 371, 1220, 1253, 1271, 1741, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759], "anyon": [34, 36, 42, 371, 1758], "websit": [34, 333], "tcp": 34, "ip": 34, "node": [34, 170, 171, 302, 303, 336, 348, 1572, 1573, 1582, 1583, 1753], "commun": [34, 36, 40, 41, 42, 371, 1742, 1751, 1752, 1754], "network": [34, 336, 345, 354, 358, 370, 1272, 1318, 1321, 1742, 1748, 1750, 1751, 1752, 1756, 1758, 1759], "smtp": 34, "possibl": [34, 36, 40, 41, 42, 149, 150, 314, 315, 336, 337, 338, 340, 341, 347, 348, 349, 350, 352, 354, 357, 370, 371, 1026, 1152, 1487, 1523, 1526, 1685, 1700, 1703, 1708, 1711, 1750, 1752, 1758], "send": [34, 1757], "gmail": 34, "outlook": 34, "pop": [34, 41], "u": [34, 36, 41, 42, 145, 146, 310, 311, 336, 346, 347, 348, 349, 350, 351, 352, 358, 371, 1338, 1339, 1342, 1430, 1434, 1572, 1580], "email": 34, "ieee": [34, 496, 579, 615, 618, 704, 720, 723, 820, 823, 885, 888, 930, 933, 965, 968, 990, 993], "754": [34, 496, 579, 615, 618, 704, 720, 723, 820, 823, 885, 888, 930, 933, 965, 968, 990, 993], "allow": [34, 37, 40, 42, 337, 342, 343, 346, 348, 349, 350, 354, 356, 371, 497, 532, 533, 535, 536, 1026, 1152, 1669, 1675, 1678, 1741, 1750, 1752, 1756, 1757], "calcul": [34, 40, 60, 61, 147, 148, 161, 162, 167, 170, 171, 172, 173, 182, 183, 312, 313, 326, 327, 341, 349, 354, 391, 392, 400, 403, 407, 417, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 800, 803, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 920, 923, 925, 928, 930, 933, 950, 953, 980, 983, 985, 988, 990, 993, 1000, 1004, 1005, 1009, 1010, 1014, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729], "live": [34, 35, 338, 1748, 1750], "depend": [34, 37, 40, 41, 42, 56, 57, 137, 138, 159, 160, 178, 179, 324, 325, 326, 327, 338, 341, 346, 347, 348, 350, 352, 354, 371, 391, 403, 579, 582, 585, 704, 705, 708, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 950, 953, 980, 983, 985, 988, 1005, 1009, 1010, 1014, 1026, 1186, 1190, 1338, 1364, 1367, 1415, 1418, 1425, 1428, 1430, 1434, 1622, 1643, 1647, 1669, 1670, 1673, 1680, 1683, 1750, 1752, 1753], "did": [34, 40, 359, 1758], "aris": [34, 338, 371], "until": [34, 42, 343, 351, 354, 371, 1742, 1759], "substanti": [34, 42, 334, 338, 350, 1752], "innov": 34, "growth": [34, 1755], "usag": [34, 338, 354, 371, 670, 694, 1755], "relev": [34, 40, 41, 42, 336, 337, 338, 340, 349, 357, 1750, 1757, 1758], "area": [34, 60, 61, 182, 183, 347, 369, 704, 715, 718, 730, 733, 745, 748, 1742, 1748], "necess": 34, "parti": [34, 371, 1751, 1752, 1758], "could": [34, 35, 40, 41, 42, 333, 338, 340, 346, 347, 348, 349, 350, 354, 356, 357, 358, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1752, 1757, 1758], "easili": [34, 41, 337, 348, 352, 357, 358, 359, 371, 1742, 1752, 1758, 1759], "engag": [34, 36, 42], "regard": [34, 39, 336, 348, 349, 352], "effect": [34, 40, 139, 140, 161, 162, 304, 305, 326, 327, 334, 336, 341, 344, 347, 371, 497, 538, 541, 1220, 1221, 1224, 1249, 1252, 1685, 1716, 1719, 1725, 1729], "2015": [34, 1752], "sinc": [34, 41, 42, 107, 108, 272, 273, 333, 336, 347, 348, 350, 371, 391, 1752, 1758], "alongsid": 34, "machin": [34, 41, 145, 146, 310, 311, 333, 345, 370, 579, 615, 618, 626, 629, 1338, 1395, 1398, 1410, 1413, 1741, 1750, 1752, 1754, 1755, 1756, 1757, 1758], "frame": [34, 370, 1752], "less": [34, 42, 44, 47, 48, 60, 61, 145, 146, 153, 154, 161, 162, 182, 183, 310, 311, 318, 319, 336, 338, 340, 342, 344, 347, 348, 352, 353, 354, 704, 710, 713, 715, 718, 725, 728, 740, 743, 780, 783, 875, 878, 880, 883, 885, 888, 890, 893, 950, 953, 965, 968, 975, 978, 990, 993, 1338, 1391, 1393, 1395, 1398, 1410, 1413, 1460, 1464, 1595, 1611, 1614, 1685, 1716, 1719, 1725, 1729, 1752, 1754], "matur": [34, 371, 1752], "state": [34, 41, 338, 341, 342, 344, 348, 350, 353, 354, 355, 357, 370, 579, 665, 668, 704, 930, 933, 1026, 1094, 1095, 1175, 1209, 1211, 1212, 1213, 1272, 1323, 1326, 1742, 1758, 1759], "than": [34, 37, 42, 44, 47, 48, 60, 61, 107, 108, 137, 138, 139, 140, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 161, 162, 167, 170, 171, 172, 173, 182, 183, 302, 303, 304, 305, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 333, 336, 337, 338, 340, 342, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 371, 391, 404, 423, 425, 426, 497, 499, 500, 579, 615, 618, 670, 694, 704, 710, 713, 715, 718, 725, 728, 740, 743, 760, 763, 770, 773, 780, 783, 825, 828, 830, 833, 875, 878, 880, 883, 885, 888, 890, 893, 920, 923, 950, 953, 965, 968, 975, 978, 990, 993, 1015, 1019, 1026, 1130, 1133, 1136, 1139, 1146, 1149, 1220, 1235, 1238, 1338, 1344, 1347, 1381, 1384, 1391, 1393, 1395, 1398, 1410, 1413, 1460, 1464, 1487, 1488, 1491, 1508, 1511, 1538, 1541, 1595, 1611, 1614, 1622, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1749, 1750, 1751, 1752, 1758, 1759], "preced": [34, 358], "mention": [34, 40, 41, 42, 340, 344, 345, 347, 352, 1752], "aros": 34, "70": [34, 302, 303, 1338, 1405, 1408, 1685, 1696, 1699], "80": [34, 1338, 1405, 1408, 1572, 1583, 1685, 1696, 1699], "90": [34, 60, 61, 121, 122, 182, 183, 286, 287, 423, 433, 704, 775, 778, 795, 798, 955, 958, 970, 973, 1338, 1405, 1408, 1685, 1696, 1699], "effort": [34, 36, 371, 1748, 1752, 1758], "stage": [34, 36, 38, 42, 332, 343, 350, 1742, 1752], "complet": [34, 40, 42, 170, 171, 333, 334, 336, 337, 340, 348, 349, 350, 356, 357, 1338, 1415, 1418, 1750], "natur": [34, 145, 146, 310, 311, 334, 340, 349, 370, 704, 815, 818, 875, 878, 885, 888, 970, 973, 1338, 1420, 1423], "like": [34, 38, 40, 41, 42, 107, 108, 139, 140, 272, 273, 296, 297, 304, 305, 332, 338, 339, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 370, 371, 391, 392, 393, 396, 397, 398, 400, 407, 417, 445, 446, 579, 602, 654, 1220, 1235, 1238, 1595, 1611, 1614, 1742, 1752, 1757], "certainli": [34, 1758], "mission": [34, 1742, 1754], "creat": [34, 36, 37, 38, 40, 41, 42, 54, 55, 107, 108, 125, 126, 153, 154, 170, 171, 176, 177, 272, 273, 290, 291, 302, 303, 318, 319, 338, 339, 342, 346, 347, 348, 349, 350, 352, 354, 355, 358, 369, 370, 387, 388, 391, 401, 407, 417, 439, 440, 441, 442, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 571, 573, 574, 578, 1026, 1192, 1196, 1219, 1220, 1260, 1261, 1265, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1741, 1742, 1752, 1753, 1758], "At": [34, 40, 41, 333, 348, 350, 351, 1752], "process": [34, 35, 36, 38, 41, 42, 336, 345, 348, 349, 350, 352, 354, 359, 670, 689, 703, 1750, 1751, 1752, 1755, 1756, 1758, 1759], "ourselv": [34, 1758], "lead": [34, 35, 167, 170, 171, 172, 173, 340, 371, 1338, 1415, 1418, 1430, 1434], "quansight": [34, 1758], "compani": [34, 1748], "made": [34, 37, 40, 42, 333, 337, 347, 351, 354, 356, 419, 421, 1752], "organ": [34, 334, 336, 345, 348, 351, 1741], "panda": 34, "scipi": [34, 1754, 1759], "conda": [34, 38, 41, 1754], "dask": [34, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "apach": [34, 1754, 1758], "mxnet": [34, 1759], "onnx": [34, 1750, 1758], "scikit": 34, "jupyt": [34, 1754], "aw": 34, "cupi": [34, 1752, 1759], "net": [34, 35, 354, 359], "sympi": 34, "rai": [34, 704, 740, 743], "modin": 34, "spyder": 34, "includ": [34, 40, 42, 54, 55, 107, 108, 137, 138, 155, 156, 161, 162, 163, 164, 170, 171, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 298, 299, 302, 303, 310, 311, 320, 321, 326, 327, 328, 329, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 370, 371, 387, 388, 391, 399, 497, 499, 500, 502, 504, 532, 533, 543, 546, 1026, 1108, 1111, 1214, 1218, 1338, 1460, 1464, 1572, 1573, 1595, 1611, 1614, 1622, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1749, 1750, 1752, 1754, 1757, 1758, 1759], "member": [34, 40, 42, 348], "googl": [34, 1742], "octoml": [34, 1758], "einop": [34, 137, 138, 302, 303, 1026, 1058, 1061, 1063, 1066, 1068, 1071], "further": [34, 35, 38, 42, 333, 334, 340, 342, 348, 350, 353, 354, 357, 358, 1742, 1757, 1758], "sponsor": 34, "lg": 34, "electron": 34, "microsoft": [34, 1752, 1757, 1759], "d": [34, 35, 36, 41, 115, 116, 121, 122, 143, 144, 145, 146, 280, 281, 286, 287, 308, 309, 310, 311, 332, 336, 350, 357, 387, 388, 407, 408, 409, 414, 415, 416, 419, 420, 423, 425, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1354, 1357, 1359, 1362, 1386, 1389, 1405, 1408, 1450, 1454, 1572, 1575, 1579, 1580, 1588, 1589, 1742, 1748], "shaw": 34, "co": [34, 39, 60, 61, 137, 138, 182, 183, 338, 354, 370, 704, 1026, 1076, 1079, 1742], "intel": [34, 1750, 1757], "togeth": [34, 170, 171, 334, 336, 343, 348, 351, 352, 358, 359, 371, 1750, 1752, 1753, 1758], "major": [34, 338, 339, 350, 371, 1622, 1638, 1641, 1749, 1752], "involv": [34, 36, 38, 56, 57, 178, 179, 332, 338, 340, 352, 359, 579, 655, 658, 704, 720, 723, 930, 933, 1752, 1758], "anoth": [34, 40, 41, 42, 336, 338, 345, 346, 348, 349, 350, 352, 354, 356, 359, 497, 521, 524, 579, 587, 590, 597, 600, 1741, 1752, 1758], "promis": 34, "sign": [34, 41, 60, 61, 145, 146, 182, 183, 310, 311, 354, 359, 497, 499, 500, 704, 705, 708, 720, 723, 740, 743, 770, 773, 930, 933, 965, 968, 1338, 1420, 1423, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "pursuit": 34, "unif": [34, 36, 356, 1748, 1758], "clearli": [34, 40, 42, 340, 349, 350, 1756], "lot": [34, 35, 338, 346, 350, 371, 1751], "thought": [34, 41, 42, 344, 1750], "care": [34, 42, 350, 352, 359], "attent": [34, 42, 334, 1272, 1328, 1331, 1333, 1336], "gone": [34, 353], "simplifi": [34, 342, 348, 354, 355, 358, 1748, 1750, 1751, 1752, 1755, 1758, 1759], "compat": [34, 44, 47, 48, 60, 61, 145, 146, 149, 150, 155, 156, 161, 162, 163, 164, 167, 172, 173, 182, 183, 310, 311, 314, 315, 320, 321, 326, 327, 328, 329, 335, 344, 348, 349, 351, 354, 371, 579, 592, 595, 704, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004, 1020, 1024, 1338, 1395, 1398, 1410, 1413, 1425, 1428, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1523, 1526, 1622, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742], "excit": [34, 36, 332, 1742], "complianc": 34, "hope": [34, 371, 1758], "due": [34, 37, 41, 333, 347, 348, 704, 930, 933, 970, 973, 1752], "suit": [34, 41, 332, 333, 337, 350, 357, 370, 1741, 1752, 1758], "some": [34, 35, 40, 41, 42, 170, 171, 304, 305, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 356, 357, 358, 370, 371, 670, 671, 704, 820, 823, 885, 888, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1266, 1270, 1272, 1311, 1314, 1572, 1583, 1741, 1742, 1748, 1749, 1751, 1752, 1753, 1758, 1759], "motiv": [34, 356], "great": [34, 35, 42, 350, 354, 356, 1758], "convinc": 34, "celebr": 34, "encourag": [34, 370, 371], "foundat": [34, 1755], "mai": [35, 39, 40, 41, 42, 60, 61, 107, 108, 159, 160, 180, 181, 182, 183, 324, 325, 333, 336, 338, 347, 348, 350, 355, 356, 358, 391, 401, 497, 499, 500, 521, 524, 670, 695, 699, 704, 805, 808, 840, 843, 870, 873, 905, 908, 910, 913, 1026, 1055, 1057, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1759], "ask": [35, 40, 41, 340, 354, 356, 371], "perfectli": 35, "happi": [35, 41, 371], "abund": 35, "better": [35, 37, 332, 348, 349, 351, 352, 353, 356, 357, 358, 1755], "ll": [35, 36, 41, 42, 340, 347, 357], "give": [35, 37, 41, 42, 332, 335, 340, 341, 344, 579, 654, 1487, 1523, 1526, 1752, 1756], "two": [35, 40, 41, 44, 47, 48, 54, 55, 121, 122, 145, 146, 167, 172, 173, 286, 287, 310, 311, 333, 334, 338, 340, 341, 348, 350, 352, 353, 357, 359, 387, 388, 391, 394, 395, 407, 417, 419, 420, 423, 433, 434, 497, 499, 500, 518, 519, 538, 541, 561, 565, 566, 570, 579, 653, 664, 704, 770, 773, 970, 973, 1026, 1034, 1036, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1455, 1459, 1487, 1548, 1552, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1749, 1757], "streamlin": [35, 1755], "workflow": [35, 40, 42, 335, 337, 338, 348, 357, 369, 1741, 1742, 1751, 1758, 1759], "save": [35, 37, 170, 171, 343, 350, 371, 670, 671, 1026, 1107, 1173, 1751], "week": [35, 42, 1742], "let": [35, 37, 137, 138, 161, 162, 302, 303, 336, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 1026, 1083, 1086, 1685, 1704, 1707, 1716, 1719, 1720, 1724, 1725, 1729, 1742, 1759], "sai": [35, 41, 346, 356], "deepmind": 35, "releas": [35, 40, 41, 42, 338, 348, 351, 352, 371, 1742, 1752, 1758], "awesom": 35, "paper": 35, "love": 35, "choic": [35, 41, 161, 162, 326, 327, 347, 348, 357, 1685, 1716, 1719, 1725, 1729, 1752], "perceiverio": 35, "happen": [35, 41, 42, 350, 357, 391, 404], "slew": 35, "rush": 35, "f": [35, 36, 38, 42, 332, 336, 343, 354, 357, 1026, 1113, 1129, 1572, 1575, 1579, 1580, 1588, 1589, 1748], "g": [35, 36, 40, 41, 125, 126, 153, 154, 318, 319, 332, 333, 336, 350, 354, 371, 439, 440, 441, 579, 581, 655, 658, 670, 672, 1572, 1575, 1579, 1588, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1708, 1711, 1712, 1715, 1720, 1724, 1741, 1748], "inevit": [35, 1753], "deviat": [35, 151, 152, 153, 154, 316, 317, 318, 319, 333, 1590, 1591, 1594, 1595, 1606, 1609, 1685, 1716, 1719], "often": [35, 39, 333, 342, 343, 344, 345, 348, 350, 371, 1753, 1756, 1759], "erron": 35, "train": [35, 139, 140, 304, 305, 336, 339, 345, 357, 358, 359, 369, 370, 371, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1741, 1742, 1750, 1751, 1756, 1758, 1759], "poor": 35, "converg": 35, "perform": [35, 139, 140, 161, 162, 163, 164, 302, 303, 326, 327, 328, 329, 334, 335, 336, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 371, 456, 469, 472, 484, 487, 497, 532, 533, 535, 536, 704, 1020, 1024, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1114, 1117, 1119, 1122, 1124, 1127, 1166, 1167, 1272, 1311, 1314, 1323, 1326, 1338, 1430, 1434, 1568, 1569, 1570, 1571, 1572, 1579, 1580, 1685, 1686, 1689, 1691, 1694, 1730, 1731, 1734, 1736, 1739, 1749, 1752, 1753, 1754, 1755, 1756, 1757, 1759], "issu": [35, 36, 39, 40, 333, 335, 338, 340, 342, 348, 350, 354, 358, 371], "etc": [35, 40, 41, 42, 54, 55, 153, 154, 165, 166, 302, 303, 318, 319, 330, 331, 333, 334, 336, 337, 338, 340, 342, 344, 348, 349, 350, 351, 354, 356, 357, 371, 439, 440, 442, 497, 532, 533, 535, 536, 548, 551, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1741, 1750, 1752, 1758], "publish": [35, 371], "manag": [35, 36, 347, 371, 1754, 1756], "get": [35, 36, 39, 40, 41, 60, 61, 170, 171, 332, 337, 338, 339, 345, 346, 347, 348, 349, 350, 351, 354, 355, 356, 357, 358, 456, 579, 610, 612, 614, 615, 618, 626, 629, 670, 675, 676, 679, 681, 684, 689, 693, 700, 703, 704, 930, 933, 1026, 1033, 1093, 1094, 1095, 1097, 1098, 1099, 1105, 1107, 1155, 1175, 1741, 1752, 1758], "work": [35, 39, 40, 41, 42, 332, 333, 336, 338, 339, 340, 342, 348, 349, 350, 351, 353, 354, 356, 358, 359, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "repositori": [35, 37, 38, 41, 42, 332, 333, 337, 343], "pull": [35, 36, 37, 38, 40, 41, 333, 340, 351, 352, 371], "request": [35, 36, 40, 340, 351, 352, 670, 686], "confus": [35, 338, 342, 347, 352, 1741], "do": [35, 40, 41, 42, 137, 138, 139, 140, 170, 171, 304, 305, 333, 334, 335, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 351, 352, 354, 356, 357, 358, 359, 371, 704, 965, 968, 1026, 1124, 1127, 1220, 1235, 1238, 1266, 1270, 1572, 1573, 1582, 1583, 1584, 1741, 1753, 1758, 1759], "don": [35, 40, 41, 42, 165, 166, 330, 331, 338, 350, 358, 371], "expect": [35, 42, 338, 342, 350, 371, 579, 654, 1026, 1033, 1742], "codebas": [35, 36, 332, 338, 347, 350, 351, 353, 670, 692, 693, 1742], "total": [35, 36, 42, 161, 162, 167, 170, 171, 172, 173, 326, 327, 338, 339, 340, 350, 352, 357, 358, 371, 670, 700, 1622, 1638, 1641, 1685, 1716, 1719, 1725, 1729], "hour": [35, 337], "spent": 35, "spin": 35, "off": [35, 41, 353, 1338, 1359, 1362, 1445, 1449, 1758], "test": [35, 39, 40, 60, 61, 163, 164, 182, 183, 328, 329, 332, 338, 340, 342, 343, 346, 348, 351, 371, 391, 397, 398, 579, 633, 636, 643, 646, 704, 845, 848, 850, 853, 855, 858, 860, 863, 1730, 1731, 1734, 1736, 1739, 1752], "discuss": [35, 41, 42, 338, 339, 347, 348, 350, 352, 355, 356, 357, 371, 1742, 1748, 1753], "error": [35, 39, 41, 42, 60, 61, 170, 171, 182, 183, 334, 335, 337, 338, 339, 340, 342, 343, 344, 348, 350, 351, 356, 371, 456, 458, 461, 704, 810, 813, 1338, 1435, 1439, 1685, 1700, 1703, 1708, 1711, 1752], "iter": [35, 49, 50, 51, 52, 53, 137, 138, 165, 166, 167, 170, 171, 172, 173, 302, 303, 330, 331, 336, 354, 357, 407, 417, 423, 431, 432, 494, 495, 670, 694, 1026, 1027, 1030, 1152, 1487, 1498, 1501, 1518, 1521, 1553, 1557, 1563, 1567, 1572, 1573, 1574, 1575, 1577, 1578, 1580, 1581, 1582, 1583, 1584, 1586, 1587, 1589], "address": [35, 40, 42, 333, 334, 354, 1026, 1198, 1202, 1748, 1750, 1752, 1758], "sake": 35, "singl": [35, 40, 41, 42, 107, 108, 153, 154, 170, 171, 182, 183, 318, 319, 333, 336, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 357, 358, 359, 371, 391, 404, 439, 440, 1026, 1203, 1207, 1214, 1218, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1648, 1649, 1653], "multipl": [35, 42, 107, 108, 151, 152, 161, 162, 163, 164, 170, 171, 182, 183, 272, 273, 280, 281, 302, 303, 304, 305, 310, 311, 314, 315, 316, 317, 326, 327, 328, 329, 335, 336, 340, 342, 345, 347, 352, 354, 371, 391, 399, 704, 770, 773, 895, 898, 920, 923, 925, 928, 930, 933, 1026, 1027, 1030, 1152, 1220, 1221, 1224, 1231, 1234, 1235, 1238, 1241, 1244, 1249, 1252, 1254, 1258, 1272, 1284, 1287, 1338, 1339, 1342, 1376, 1379, 1386, 1389, 1487, 1488, 1491, 1503, 1506, 1528, 1531, 1533, 1536, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1750, 1751, 1752, 1759], "line": [35, 41, 333, 334, 340, 343, 346, 350, 352, 355, 356, 357, 358, 369, 1742, 1755], "convert": [35, 40, 49, 50, 51, 52, 53, 54, 55, 60, 61, 174, 175, 182, 183, 334, 346, 350, 354, 371, 372, 382, 497, 502, 504, 543, 546, 579, 580, 581, 670, 672, 673, 674, 675, 689, 700, 703, 704, 795, 798, 955, 958, 1026, 1166, 1191, 1197, 1198, 1202, 1203, 1207, 1209, 1338, 1465, 1469, 1572, 1574, 1584, 1585, 1741, 1750, 1751, 1758], "directli": [35, 42, 333, 334, 336, 337, 338, 339, 341, 345, 346, 347, 348, 349, 351, 352, 354, 356, 358, 359, 370, 371, 1572, 1584, 1756, 1757, 1758], "graph": [35, 139, 140, 336, 345, 348, 352, 355, 371, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1741, 1748, 1752, 1755], "guarante": [35, 334, 371, 1648, 1649, 1653, 1659, 1663], "turn": [35, 41, 336, 340, 348, 350], "4": [35, 38, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 157, 158, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 335, 336, 340, 350, 354, 356, 357, 358, 359, 387, 388, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 407, 408, 411, 414, 415, 417, 419, 420, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 435, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 484, 487, 497, 509, 511, 527, 530, 538, 541, 556, 559, 574, 578, 579, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 638, 641, 643, 646, 655, 658, 670, 676, 679, 681, 688, 692, 704, 705, 708, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 750, 753, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 850, 853, 855, 858, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1108, 1111, 1114, 1117, 1161, 1164, 1176, 1179, 1192, 1196, 1208, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1274, 1277, 1284, 1287, 1289, 1291, 1293, 1296, 1306, 1309, 1318, 1321, 1323, 1326, 1333, 1336, 1338, 1339, 1342, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1471, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1752, 1758, 1759], "step": [35, 37, 38, 40, 41, 42, 121, 122, 139, 140, 176, 177, 286, 287, 304, 305, 334, 335, 336, 338, 339, 340, 348, 350, 354, 357, 358, 359, 370, 423, 427, 497, 499, 500, 532, 533, 535, 536, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1568, 1569, 1570, 1571, 1742, 1752], "take": [35, 36, 40, 41, 42, 161, 162, 280, 281, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 352, 354, 356, 358, 359, 371, 497, 548, 551, 704, 775, 778, 1742, 1749, 1750, 1758], "few": [35, 39, 40, 42, 336, 338, 339, 344, 345, 347, 350, 352, 354, 355, 356, 357, 358, 369, 1742, 1752, 1754], "second": [35, 41, 44, 47, 48, 60, 61, 107, 108, 139, 140, 145, 146, 153, 154, 157, 158, 167, 172, 173, 182, 183, 272, 273, 282, 283, 304, 305, 310, 311, 322, 323, 333, 338, 340, 347, 348, 350, 356, 387, 388, 391, 394, 395, 396, 399, 400, 419, 421, 423, 433, 579, 653, 664, 704, 720, 723, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 805, 808, 830, 833, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 1000, 1004, 1026, 1034, 1036, 1105, 1171, 1212, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1338, 1344, 1347, 1359, 1362, 1364, 1367, 1371, 1374, 1381, 1384, 1405, 1408, 1415, 1418, 1430, 1434, 1440, 1444, 1455, 1459, 1487, 1543, 1546, 1548, 1552, 1568, 1570, 1572, 1574, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1757], "automat": [35, 40, 41, 42, 332, 336, 337, 338, 343, 345, 352, 353, 355, 358, 359, 1741, 1742, 1752, 1755, 1759], "convers": [35, 40, 50, 51, 52, 53, 60, 61, 100, 175, 265, 346, 353, 355, 359, 370, 371, 1026, 1166, 1167, 1741, 1742, 1751, 1758], "everyon": [35, 36, 42, 371], "regardless": [35, 36, 170, 171, 338, 356, 359, 494, 495], "wouldn": 35, "nice": [35, 350, 1752], "write": [35, 38, 39, 40, 42, 45, 46, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 332, 333, 335, 338, 340, 341, 345, 347, 348, 349, 351, 354, 356, 359, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1633, 1636, 1643, 1647, 1648, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1759], "onc": [35, 40, 41, 42, 153, 154, 318, 319, 333, 336, 338, 339, 340, 348, 350, 352, 354, 357, 371, 670, 694, 1338, 1364, 1367, 1368, 1370, 1376, 1379, 1430, 1434, 1595, 1596, 1599], "know": [35, 42, 349, 350, 351, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1753], "among": [35, 170, 171, 350, 352, 1752], "frantic": 35, "port": 35, "lucid": 35, "honk": 35, "improv": [35, 42, 338, 344, 345, 352, 354, 1741, 1750, 1752, 1754, 1755], "understand": [35, 37, 38, 39, 40, 41, 42, 332, 333, 340, 341, 344, 349, 352, 353, 1748, 1758], "pattern": [35, 137, 138, 302, 303, 338, 341, 1026, 1058, 1061, 1063, 1066, 1068, 1071], "hasn": 35, "chang": [35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 335, 336, 337, 338, 340, 341, 348, 350, 351, 352, 354, 358, 371, 1487, 1523, 1526, 1572, 1574, 1584, 1742, 1755, 1758], "now": [35, 38, 41, 333, 335, 336, 338, 343, 344, 346, 348, 350, 351, 352, 356, 357, 359, 370, 371, 497, 574, 578, 1752], "spend": [35, 1752], "torchvis": 35, "probabl": [35, 153, 154, 318, 319, 350, 1272, 1311, 1314, 1595, 1596, 1599], "sonnet": 35, "about": [35, 39, 40, 41, 42, 333, 337, 338, 344, 350, 351, 352, 353, 354, 356, 357, 358, 359, 371, 579, 615, 618, 626, 629, 1753, 1754, 1757], "next": [35, 37, 40, 41, 42, 335, 340, 341, 346, 348, 351, 355, 356, 357, 579, 615, 618, 1742, 1752, 1754], "everyth": [35, 40, 42, 340, 348, 349, 350, 351, 355, 371], "zero": [35, 54, 55, 56, 57, 60, 61, 121, 122, 139, 140, 145, 146, 155, 156, 161, 162, 163, 164, 176, 177, 178, 179, 182, 183, 286, 287, 298, 299, 304, 305, 310, 311, 318, 319, 320, 321, 326, 327, 328, 329, 334, 336, 338, 339, 340, 344, 346, 354, 357, 358, 391, 401, 402, 403, 407, 417, 423, 427, 430, 456, 464, 467, 474, 477, 497, 509, 511, 512, 518, 519, 538, 541, 548, 551, 561, 565, 566, 570, 574, 578, 579, 582, 585, 587, 590, 704, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 760, 763, 770, 773, 785, 788, 790, 793, 795, 798, 820, 823, 825, 828, 845, 848, 850, 853, 855, 858, 860, 863, 885, 888, 905, 908, 910, 913, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 965, 968, 970, 973, 980, 983, 990, 993, 995, 998, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1048, 1051, 1152, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1311, 1314, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1349, 1352, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1455, 1459, 1460, 1464, 1487, 1503, 1506, 1508, 1511, 1513, 1516, 1528, 1531, 1563, 1567, 1590, 1591, 1594, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1751], "need": [35, 37, 38, 40, 41, 42, 137, 138, 149, 150, 302, 303, 314, 315, 333, 334, 336, 338, 340, 341, 342, 345, 347, 348, 349, 351, 352, 354, 356, 357, 370, 371, 1026, 1043, 1046, 1048, 1051, 1487, 1488, 1491, 1572, 1583, 1748, 1752, 1753, 1754, 1758], "said": 35, "high": [35, 40, 153, 154, 318, 319, 348, 352, 357, 1595, 1601, 1604, 1611, 1614, 1741, 1748, 1749, 1750, 1751, 1752, 1756, 1758, 1759], "level": [35, 36, 40, 42, 336, 345, 348, 352, 353, 354, 357, 358, 359, 371, 1741, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1756, 1757, 1758, 1759], "optim": [35, 139, 140, 304, 305, 347, 355, 357, 359, 370, 1026, 1033, 1220, 1249, 1252, 1568, 1569, 1570, 1571, 1742, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1759], "trainer": [35, 369, 371, 1742, 1759], "statu": [35, 40, 337], "quo": 35, "kera": [35, 1758], "dopamin": 35, "ignit": 35, "catalyst": 35, "lightn": 35, "fastai": 35, "haiku": [35, 359, 1752], "flax": [35, 359, 371, 1752], "trax": [35, 359], "objax": [35, 359], "idea": [35, 37, 348, 351, 355, 370, 1751], "fulli": [35, 334, 338, 344, 347, 352, 354, 355, 356, 357, 358, 359, 371, 1750, 1751, 1752, 1758, 1759], "offer": [35, 41, 348, 358, 1752, 1758, 1759], "strongli": [36, 41, 1758, 1759], "welcom": [36, 41, 42], "absolut": [36, 41, 60, 61, 145, 146, 170, 171, 182, 183, 310, 311, 352, 704, 705, 708, 1338, 1386, 1389, 1391, 1393, 1395, 1398, 1420, 1423], "skill": [36, 1754], "whether": [36, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 137, 138, 139, 140, 149, 150, 153, 154, 161, 162, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 338, 340, 344, 347, 348, 350, 351, 352, 391, 401, 456, 458, 461, 494, 495, 497, 502, 504, 579, 582, 585, 605, 606, 608, 609, 610, 612, 620, 621, 623, 624, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 669, 670, 675, 676, 679, 682, 683, 685, 686, 689, 690, 694, 701, 703, 704, 855, 858, 860, 863, 920, 923, 925, 928, 965, 968, 1026, 1027, 1030, 1034, 1036, 1055, 1057, 1073, 1075, 1076, 1079, 1081, 1082, 1099, 1100, 1103, 1108, 1111, 1113, 1124, 1127, 1129, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1152, 1166, 1167, 1170, 1172, 1174, 1186, 1190, 1198, 1202, 1210, 1211, 1214, 1218, 1220, 1225, 1228, 1229, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1271, 1272, 1311, 1314, 1338, 1364, 1367, 1368, 1370, 1487, 1523, 1526, 1558, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1582, 1583, 1584, 1585, 1595, 1596, 1599, 1685, 1686, 1689, 1691, 1694, 1730, 1731, 1734, 1736, 1739], "veteran": 36, "beginn": [36, 1752], "aspect": [36, 348, 357, 1742, 1752], "guid": [36, 40, 41, 42, 343, 1742, 1758], "through": [36, 39, 40, 42, 332, 335, 336, 340, 345, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 359, 370, 704, 740, 743, 1572, 1575, 1750, 1752, 1753, 1754], "journei": [36, 1742], "inclusvi": 36, "big": [36, 371, 1752], "team": [36, 40, 41, 42, 348, 1754], "board": 36, "contributor": [36, 41, 42, 348, 353, 1742, 1752], "split": [36, 42, 149, 150, 170, 171, 314, 315, 353, 354, 371, 670, 692, 693, 694, 1026, 1152, 1487, 1742, 1759], "section": [36, 37, 39, 40, 42, 332, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1748, 1755, 1758], "below": [36, 38, 40, 41, 54, 55, 326, 327, 332, 336, 337, 338, 339, 340, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 370, 387, 388, 497, 561, 565, 566, 570, 704, 860, 863, 1338, 1359, 1362, 1445, 1449, 1742, 1748, 1750, 1755, 1757], "best": [36, 39, 40, 41, 42, 332, 338, 343, 350, 351, 1026, 1152, 1755, 1756], "go": [36, 37, 40, 41, 42, 332, 335, 338, 340, 348, 349, 351, 353, 357, 371, 1572, 1583, 1748, 1752, 1753, 1757, 1759], "start": [36, 37, 38, 40, 41, 42, 170, 171, 176, 177, 332, 337, 338, 340, 341, 344, 348, 350, 352, 353, 354, 356, 357, 358, 370, 371, 423, 424, 497, 499, 500, 532, 533, 535, 536, 670, 671, 1752, 1758], "finish": [36, 40, 41, 332, 1742], "dive": [36, 39, 40, 42, 336, 338, 349, 353, 356, 357, 371, 1742, 1758], "right": [36, 41, 42, 145, 146, 167, 170, 171, 172, 173, 310, 311, 332, 340, 352, 357, 423, 425, 704, 760, 763, 770, 773, 1338, 1430, 1434, 1450, 1454, 1669, 1675, 1678], "environ": [36, 37, 38, 42, 370, 1752, 1754], "basic": [36, 38, 40, 340], "fork": [36, 41, 333, 1026, 1153], "doc": [36, 39, 40, 340, 341, 344, 349, 350, 354, 357, 358, 387, 388, 1742], "document": [36, 39, 42, 338, 340, 348, 349, 350, 357, 359, 1026, 1219], "local": [36, 37, 38, 41, 333, 345], "task": [36, 42, 348, 349, 370, 1568, 1569, 1570, 1571, 1742, 1752, 1758, 1759], "help": [36, 37, 40, 41, 334, 335, 336, 338, 340, 346, 350, 351, 352, 356, 357, 358, 369, 1026, 1032, 1685, 1720, 1724, 1741, 1742, 1748, 1752, 1754, 1758], "appli": [36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 356, 357, 358, 359, 369, 371, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 579, 655, 658, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1220, 1241, 1244, 1245, 1248, 1272, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1395, 1398, 1410, 1413, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1543, 1546, 1568, 1569, 1570, 1572, 1578, 1581, 1584, 1585, 1590, 1591, 1594, 1685, 1691, 1694, 1741, 1742, 1753], "resourc": [36, 40], "video": [36, 41, 42, 333, 334, 335, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 1750], "contribut": [37, 39, 40, 41, 42, 354, 1756], "toward": [37, 41, 149, 150, 314, 315, 351, 354, 423, 433, 704, 1020, 1024, 1487, 1528, 1531, 1748, 1752], "requir": [37, 38, 40, 41, 107, 108, 272, 273, 334, 337, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 354, 356, 371, 391, 401, 407, 417, 494, 495, 704, 990, 993, 1338, 1364, 1367, 1368, 1370, 1487, 1543, 1546, 1752, 1758], "slightli": [37, 336, 348, 354, 358], "more": [37, 39, 40, 42, 121, 122, 149, 150, 157, 158, 286, 287, 314, 315, 322, 323, 332, 333, 334, 335, 336, 337, 338, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 370, 371, 423, 433, 497, 499, 500, 579, 587, 590, 704, 820, 823, 885, 888, 1338, 1381, 1384, 1487, 1508, 1511, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1742, 1750, 1751, 1752, 1753, 1754, 1755, 1758, 1759], "complex": [37, 40, 338, 340, 348, 352, 357, 358, 359, 371, 704, 860, 863, 1026, 1176, 1179, 1338, 1364, 1367, 1368, 1370, 1430, 1434, 1741, 1748, 1750, 1752, 1754, 1758, 1759], "setup": [37, 41, 42], "alon": [37, 350, 670, 689, 703], "instanc": [37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 338, 340, 341, 344, 345, 346, 347, 350, 357, 358, 359, 372, 382, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 456, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 597, 600, 615, 618, 633, 636, 643, 646, 670, 691, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1124, 1127, 1172, 1186, 1190, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1753], "mech": 37, "vision": [37, 369, 1742, 1748, 1758], "demo": [37, 370, 1742], "util": [37, 136, 164, 301, 329, 339, 342, 351, 670, 681, 1731, 1734, 1736, 1739, 1750, 1758, 1759], "thu": [37, 40, 342, 348, 704, 770, 773, 950, 953, 965, 968, 1338, 1364, 1367], "relat": [37, 39, 41, 42, 343, 348, 350, 351, 352, 370, 670, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759], "folder": [37, 38, 41, 42, 333, 345, 348, 350, 351], "To": [37, 38, 41, 333, 336, 338, 340, 342, 343, 345, 348, 349, 350, 351, 357, 358, 359, 1026, 1168, 1169, 1171, 1173, 1742], "grasp": [37, 348], "directori": [37, 38, 40, 41, 42, 337, 348, 350, 670, 671, 1026, 1107, 1173], "tree": [37, 38, 338], "place": [37, 39, 42, 49, 51, 53, 54, 55, 60, 61, 107, 108, 137, 138, 149, 150, 170, 171, 176, 177, 180, 181, 182, 183, 272, 273, 302, 303, 314, 315, 318, 319, 332, 333, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 359, 387, 388, 391, 401, 402, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1186, 1190, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1754], "dir": [37, 357], "clone": [37, 38, 42], "mutual": [37, 336, 345], "git": [37, 39, 41, 42, 333, 350], "http": [37, 41, 60, 61, 182, 183, 304, 305, 333, 338, 341, 387, 388, 423, 424, 579, 597, 600, 704, 845, 848, 1220, 1221, 1224, 1225, 1228, 1338, 1465, 1469, 1685, 1716, 1719], "com": [37, 41, 333, 338], "unifyai": [37, 38, 41, 42], "venv": 37, "python3": [37, 38, 41, 42], "m": [37, 38, 41, 42, 44, 47, 48, 54, 55, 121, 122, 125, 126, 145, 146, 153, 154, 182, 183, 286, 287, 310, 311, 318, 319, 332, 354, 387, 388, 423, 425, 426, 433, 439, 440, 441, 497, 538, 541, 561, 565, 566, 570, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1572, 1580, 1595, 1601, 1604, 1606, 1609, 1611, 1614], "ivy_dev": [37, 38, 41, 42], "activ": [37, 38, 41, 42, 46, 64, 137, 138, 165, 166, 169, 186, 330, 331, 351, 358, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 1742, 1752, 1755], "window": [37, 38, 42, 115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1757], "script": [37, 38, 41, 42, 340, 354, 371, 1752], "bat": [37, 38, 41, 42], "mac": [37, 38, 41, 42], "linux": [37, 38, 41, 42, 1755, 1757], "bin": [37, 38, 41, 42, 333, 336], "instal": [37, 38, 41, 42, 335, 343, 370, 1742], "packag": [37, 38, 41, 343, 348, 371, 1752, 1754], "edit": [37, 40, 41, 42], "mode": [37, 41, 42, 115, 116, 145, 146, 170, 171, 280, 281, 310, 311, 336, 340, 352, 371, 407, 417, 494, 495, 670, 694, 704, 720, 723, 930, 933, 1026, 1099, 1166, 1167, 1170, 1172, 1209, 1210, 1211, 1213, 1338, 1415, 1418, 1752, 1755], "cd": [37, 38, 41, 42], "pip": [37, 41, 370, 1742], "repeat": [37, 42, 137, 138, 149, 150, 302, 303, 314, 315, 334, 335, 340, 341, 343, 350, 1026, 1068, 1071, 1487, 1553, 1557], "note": [37, 40, 41, 42, 60, 61, 338, 340, 341, 348, 349, 350, 351, 387, 388, 579, 654, 704, 885, 888, 965, 968, 970, 973, 1026, 1042, 1338, 1364, 1367, 1430, 1434, 1487, 1543, 1546, 1648, 1654, 1658, 1685, 1704, 1707], "link": [37, 40, 41, 337, 338, 348, 1748, 1750], "reflect": [37, 42, 334, 350, 407, 417], "immedi": [37, 352, 1742], "ivy_robot": [37, 370], "docker": [37, 39], "desktop": [37, 41], "imag": [37, 38, 41, 114, 115, 116, 142, 143, 144, 279, 280, 281, 307, 308, 309, 351, 354, 355, 357, 359, 370, 407, 408, 414, 415, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1298, 1301, 1303, 1304, 1306, 1309, 1742, 1752], "my": [37, 351], "mount": [37, 42], "run": [37, 38, 40, 41, 139, 140, 304, 305, 332, 335, 337, 340, 343, 344, 348, 349, 354, 355, 356, 357, 358, 359, 370, 371, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1568, 1569, 1570, 1571, 1750, 1752, 1753, 1754, 1755, 1757, 1758, 1759], "rm": [37, 42], "v": [37, 41, 42, 143, 144, 159, 160, 308, 309, 324, 325, 349, 354, 357, 358, 359, 1272, 1333, 1336, 1669, 1675, 1678, 1742], "pwd": 37, "volum": [37, 115, 116, 280, 281, 407, 409, 416, 1272, 1293, 1296], "rebuild": [37, 167, 170, 171, 172, 173], "after": [37, 38, 40, 41, 42, 139, 140, 151, 152, 170, 171, 304, 305, 316, 317, 333, 338, 340, 342, 344, 348, 350, 353, 407, 417, 579, 664, 670, 671, 704, 990, 993, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1572, 1583, 1590, 1591, 1594, 1752], "everi": [37, 38, 40, 42, 54, 55, 137, 138, 302, 303, 333, 335, 336, 337, 338, 340, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 358, 497, 526, 527, 530, 1026, 1027, 1030, 1752], "id": [37, 39, 41, 334, 336, 343, 670, 675], "pycharm": 37, "configur": [37, 38, 41, 42, 170, 171, 337, 338, 346, 670, 693, 1572, 1585], "part": [37, 42, 54, 55, 139, 140, 333, 345, 348, 350, 351, 352, 354, 355, 359, 370, 371, 387, 388, 407, 417, 497, 561, 565, 566, 570, 704, 860, 863, 1750, 1752, 1757, 1758, 1759], "vscode": [37, 41], "found": [37, 40, 41, 42, 167, 170, 171, 172, 173, 334, 335, 336, 338, 341, 343, 346, 347, 348, 352, 670, 684, 1572, 1583, 1754], "devcontain": 37, "extens": [37, 39, 41, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 341, 348, 350, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1025, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1749, 1752, 1759], "remot": [37, 41, 333], "codespac": 37, "config": [37, 170, 171, 333, 357, 1572, 1585, 1753], "json": [37, 170, 171, 357], "good": [37, 38, 39, 40, 41, 42, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 358], "feel": [37, 38, 40, 41, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "free": [37, 38, 39, 40, 42, 44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "channel": [37, 38, 40, 41, 42, 44, 137, 138, 167, 302, 303, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1076, 1079, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "pre": [37, 40, 350, 359, 371, 1752], "commit": [37, 40, 333, 337, 340, 350], "_": [37, 38, 41, 60, 61, 182, 183, 304, 305, 341, 343, 347, 350, 357, 423, 424, 579, 597, 600, 704, 845, 848, 1220, 1221, 1224, 1225, 1228, 1338, 1435, 1439, 1465, 1469, 1572, 1579, 1685, 1716, 1719], "builder": [38, 369, 371, 1741, 1742], "dockerfil": [38, 41], "command": [38, 41, 333, 346, 1742], "maco": [38, 1757], "latest": [38, 40, 41, 42, 60, 61, 182, 183, 335, 337, 338, 341, 351, 371, 423, 424, 579, 597, 600, 704, 845, 848, 1685, 1716, 1719, 1757], "ubuntu": [38, 337], "uid": 38, "bash": [38, 42, 333], "root": [38, 41, 42, 60, 61, 182, 183, 348, 357, 704, 990, 993], "both": [38, 42, 60, 61, 107, 108, 121, 122, 145, 146, 176, 177, 182, 183, 310, 311, 335, 336, 338, 339, 340, 341, 344, 345, 347, 348, 350, 352, 354, 356, 357, 358, 359, 370, 371, 391, 393, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 427, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 653, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1755, 1757, 1758, 1759], "termin": [38, 41, 42, 167, 170, 171, 172, 173, 336, 354, 357], "3": [38, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 157, 158, 161, 162, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 333, 335, 336, 338, 340, 350, 354, 356, 357, 358, 359, 387, 388, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 441, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 496, 497, 527, 530, 538, 541, 556, 559, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 638, 641, 643, 646, 655, 658, 670, 675, 676, 679, 688, 690, 692, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1034, 1036, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1073, 1075, 1083, 1086, 1088, 1091, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1152, 1161, 1164, 1174, 1176, 1179, 1192, 1196, 1203, 1207, 1208, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1465, 1469, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1759], "8": [38, 41, 44, 47, 48, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 131, 132, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 167, 172, 173, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 325, 326, 327, 336, 340, 350, 353, 357, 391, 392, 393, 399, 402, 404, 407, 408, 409, 414, 415, 419, 421, 423, 424, 428, 434, 435, 445, 446, 456, 458, 461, 479, 482, 497, 526, 527, 530, 574, 578, 579, 605, 606, 608, 609, 615, 618, 670, 681, 700, 704, 720, 723, 730, 733, 750, 753, 770, 773, 780, 783, 790, 793, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 905, 908, 910, 913, 920, 923, 925, 928, 930, 933, 955, 958, 970, 973, 975, 978, 990, 993, 995, 998, 1010, 1014, 1026, 1042, 1048, 1051, 1083, 1086, 1100, 1103, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1161, 1164, 1176, 1179, 1186, 1190, 1220, 1221, 1224, 1230, 1235, 1238, 1240, 1249, 1252, 1260, 1272, 1274, 1277, 1298, 1301, 1306, 1309, 1318, 1321, 1338, 1349, 1352, 1354, 1357, 1359, 1362, 1381, 1384, 1386, 1389, 1405, 1408, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1471, 1472, 1475, 1487, 1488, 1491, 1508, 1511, 1533, 1536, 1543, 1546, 1558, 1562, 1572, 1574, 1580, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1643, 1647, 1648, 1649, 1653, 1659, 1663, 1669, 1670, 1673, 1680, 1683, 1685, 1691, 1694, 1696, 1699, 1704, 1707, 1720, 1724, 1725, 1729, 1742], "built": [38, 41, 42, 336, 350, 355, 497, 499, 500, 1741, 1751, 1752, 1756], "explicit": [38, 41, 336, 338, 347, 348, 354, 371, 1752], "cmd": [38, 41], "file": [38, 40, 41, 42, 170, 171, 333, 334, 335, 336, 337, 341, 343, 345, 348, 349, 350, 351, 354, 357, 1026, 1107, 1173, 1748, 1751, 1752, 1753], "abov": [38, 41, 42, 54, 55, 60, 61, 153, 154, 168, 169, 182, 183, 318, 319, 334, 335, 336, 337, 338, 340, 341, 343, 344, 345, 347, 348, 349, 350, 352, 354, 356, 357, 358, 359, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 456, 489, 492, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1595, 1601, 1604, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752, 1757], "OR": [38, 41, 42, 163, 164, 328, 329, 704, 765, 768, 910, 913, 1730, 1736, 1739], "move": [38, 42, 121, 122, 180, 181, 286, 287, 351, 387, 388, 423, 430, 670, 695, 699], "execut": [38, 41, 42, 336, 340, 347, 350, 352, 354, 356, 359, 371, 670, 671, 1026, 1208, 1741, 1748, 1752, 1753, 1754, 1755, 1756, 1758], "insid": [38, 41, 42, 336, 338, 346, 350, 351, 423, 434, 1758], "make_docs_without_dock": 38, "path": [38, 41, 347, 348, 349, 1026, 1107, 1752], "rel": [38, 42, 44, 47, 48, 139, 140, 145, 146, 149, 150, 159, 160, 176, 177, 304, 305, 310, 311, 314, 315, 324, 325, 349, 352, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1338, 1359, 1362, 1395, 1398, 1410, 1413, 1445, 1449, 1487, 1508, 1511, 1528, 1531, 1669, 1670, 1673, 1680, 1683, 1742, 1752, 1754], "assum": [38, 60, 61, 107, 108, 182, 183, 335, 338, 341, 349, 352, 356, 357, 371, 391, 403, 404, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "gener": [38, 40, 41, 42, 60, 61, 110, 138, 139, 140, 153, 154, 165, 166, 182, 183, 275, 303, 304, 305, 318, 319, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 356, 358, 359, 370, 371, 387, 388, 407, 411, 423, 424, 431, 432, 439, 441, 494, 497, 499, 500, 532, 533, 535, 536, 579, 597, 600, 704, 845, 848, 965, 968, 1027, 1030, 1032, 1033, 1034, 1036, 1037, 1040, 1042, 1043, 1046, 1048, 1051, 1053, 1054, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1081, 1082, 1083, 1086, 1088, 1091, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1103, 1105, 1106, 1107, 1108, 1111, 1113, 1114, 1117, 1119, 1122, 1124, 1127, 1129, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1159, 1161, 1164, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1219, 1220, 1235, 1238, 1338, 1450, 1454, 1595, 1596, 1599, 1601, 1604, 1611, 1614, 1616, 1685, 1716, 1719, 1741, 1742, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758], "prefer": [38, 41, 336, 346, 348, 352, 1752], "browser": [38, 41], "affect": [38, 348], "page": [38, 41, 42, 337, 355, 356, 359, 369, 1742], "It": [38, 40, 41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 340, 341, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 391, 403, 407, 409, 416, 417, 419, 420, 421, 423, 433, 439, 440, 442, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1633, 1636, 1643, 1647, 1648, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1730, 1731, 1734, 1736, 1739, 1750, 1752, 1753, 1755, 1756, 1757, 1758, 1759], "synchron": [38, 337], "respons": [38, 42, 338], "rest": [38, 41, 337, 359, 1754], "remove_doc": 38, "privat": [38, 350], "access": [38, 40, 41, 42, 170, 171, 338, 348, 1752, 1754, 1756], "fulfil": [38, 353, 1742], "purpos": [38, 42, 334, 336, 337, 340, 342, 344, 345, 346, 348, 350, 352, 353, 356, 387, 388, 704, 820, 823, 885, 888, 1741, 1742, 1751, 1753, 1756, 1757, 1758], "delet": [38, 42, 1220, 1259], "autogenerated_sourc": 38, "Then": [38, 40, 42, 346, 351, 371], "format": [38, 168, 169, 170, 171, 174, 175, 332, 338, 339, 340, 341, 342, 354, 356, 357, 456, 489, 492, 579, 610, 612, 670, 676, 679, 1685, 1696, 1699, 1742, 1748, 1750, 1752, 1753], "png": [38, 357], "_imag": 38, "lastli": 38, "docstr": [38, 39, 40, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 343, 344, 345, 348, 351, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1219, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "structur": [38, 42, 167, 170, 171, 172, 173, 334, 336, 345, 349, 351, 357, 358, 1026, 1053, 1572, 1585, 1751, 1752], "rst": [38, 447], "main": [38, 41, 54, 55, 145, 146, 310, 311, 336, 343, 346, 350, 387, 388, 419, 420, 497, 518, 519, 561, 565, 566, 570, 1338, 1354, 1357, 1359, 1362, 1445, 1449, 1750, 1752, 1753, 1758], "submodul": [38, 40, 41, 42, 44, 167, 333, 337, 339, 345, 346, 350, 353, 354, 358, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1741, 1742, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "skip": [38, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 337, 346, 350, 1572, 1585], "read": [38, 40, 170, 171, 1742, 1752], "partial_sourc": 38, "conf": 38, "copi": [38, 42, 54, 55, 56, 57, 107, 108, 137, 138, 149, 150, 170, 171, 176, 177, 178, 179, 180, 181, 272, 273, 302, 303, 314, 315, 335, 338, 341, 348, 349, 354, 357, 370, 371, 391, 401, 445, 446, 497, 502, 504, 509, 511, 521, 524, 579, 582, 585, 670, 695, 699, 1026, 1198, 1202, 1203, 1207, 1487, 1523, 1526, 1572, 1574, 1669, 1680, 1683], "5": [38, 41, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 121, 122, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 333, 335, 336, 340, 344, 349, 350, 356, 357, 358, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 423, 424, 427, 428, 430, 433, 434, 435, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 484, 487, 489, 492, 497, 527, 530, 538, 541, 556, 559, 571, 573, 574, 578, 579, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 643, 646, 655, 658, 670, 676, 679, 688, 692, 704, 705, 708, 715, 718, 720, 723, 725, 728, 730, 733, 740, 743, 745, 748, 750, 753, 765, 768, 770, 773, 780, 783, 790, 793, 795, 798, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1026, 1042, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1096, 1108, 1111, 1114, 1117, 1119, 1122, 1161, 1164, 1176, 1179, 1186, 1190, 1192, 1196, 1208, 1219, 1220, 1221, 1224, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1272, 1274, 1277, 1284, 1287, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1376, 1379, 1381, 1384, 1386, 1389, 1400, 1403, 1405, 1408, 1410, 1413, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1471, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "create_rst_fil": 38, "filter": [38, 115, 116, 143, 144, 280, 281, 308, 309, 350, 407, 409, 412, 413, 416, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1317], "recurs": [38, 41, 49, 50, 51, 52, 53, 170, 171, 174, 175, 333, 336, 345, 358, 371, 579, 620, 621, 623, 624, 670, 682, 683, 1026, 1081, 1082, 1572, 1573, 1574, 1582, 1583, 1584], "repres": [38, 60, 61, 145, 146, 182, 183, 310, 311, 352, 356, 407, 417, 419, 421, 497, 538, 541, 548, 551, 579, 614, 704, 715, 718, 720, 723, 730, 733, 745, 748, 790, 793, 930, 933, 985, 988, 1010, 1014, 1220, 1253, 1271, 1272, 1318, 1321, 1338, 1420, 1423, 1425, 1428, 1749, 1750, 1753], "its": [38, 40, 41, 42, 49, 52, 53, 56, 57, 149, 150, 170, 171, 178, 179, 302, 303, 314, 315, 338, 341, 346, 348, 349, 350, 351, 352, 359, 371, 391, 404, 579, 587, 590, 605, 606, 670, 694, 1026, 1197, 1338, 1381, 1384, 1487, 1503, 1506, 1523, 1526, 1528, 1531, 1548, 1552, 1572, 1578, 1741, 1751, 1752, 1758], "overal": [38, 336, 338, 339, 341, 359, 1748, 1750, 1751, 1752], "markup": 38, "6": [38, 44, 47, 48, 54, 55, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 159, 160, 161, 162, 167, 172, 173, 176, 177, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 335, 336, 340, 350, 352, 354, 356, 357, 358, 391, 392, 396, 400, 404, 407, 414, 417, 419, 421, 423, 424, 428, 433, 435, 445, 446, 452, 453, 456, 458, 461, 464, 467, 484, 487, 497, 526, 527, 530, 538, 541, 574, 578, 579, 587, 590, 592, 595, 610, 612, 615, 618, 670, 688, 703, 704, 705, 708, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 825, 828, 830, 833, 835, 838, 840, 843, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 885, 888, 895, 898, 905, 908, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1055, 1057, 1063, 1066, 1083, 1086, 1088, 1091, 1114, 1117, 1119, 1122, 1161, 1164, 1176, 1179, 1186, 1190, 1192, 1196, 1208, 1220, 1221, 1224, 1230, 1231, 1234, 1240, 1241, 1244, 1249, 1252, 1260, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1381, 1384, 1386, 1389, 1405, 1408, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1574, 1583, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1720, 1724, 1725, 1729], "extract": [38, 348, 351, 1748, 1752, 1753, 1758], "get_functions_and_class": 38, "doctr": 38, "7": [38, 42, 44, 45, 46, 47, 48, 60, 61, 107, 108, 115, 116, 121, 122, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 167, 172, 173, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 322, 323, 324, 325, 326, 327, 336, 340, 345, 347, 350, 391, 392, 407, 408, 409, 411, 413, 414, 417, 423, 424, 428, 433, 435, 452, 453, 456, 464, 467, 474, 477, 579, 615, 618, 626, 629, 655, 658, 670, 681, 704, 705, 708, 720, 723, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 790, 793, 800, 803, 805, 808, 815, 818, 825, 828, 830, 833, 835, 838, 840, 843, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 895, 898, 905, 908, 915, 918, 920, 923, 925, 928, 930, 933, 945, 948, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1114, 1117, 1119, 1122, 1161, 1164, 1186, 1190, 1220, 1221, 1224, 1225, 1228, 1230, 1231, 1234, 1240, 1241, 1244, 1249, 1252, 1260, 1272, 1274, 1277, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1381, 1384, 1405, 1408, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1503, 1506, 1508, 1511, 1533, 1536, 1543, 1546, 1548, 1552, 1558, 1562, 1572, 1574, 1580, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1643, 1647, 1648, 1649, 1653, 1659, 1663, 1669, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1704, 1707, 1720, 1724, 1725, 1729], "readm": [38, 371], "module_nam": 38, "copy_readme_to_rst": 38, "tabl": [38, 338, 348, 1752], "content": [38, 40, 170, 171, 347, 354, 357], "toc": 38, "append": [38, 170, 171, 342, 350, 354, 357, 704, 760, 763, 1338, 1359, 1362, 1381, 1384, 1487, 1503, 1506], "append_toctree_to_rst": 38, "9": [38, 44, 47, 48, 60, 61, 115, 116, 121, 122, 131, 132, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 153, 154, 159, 160, 161, 162, 167, 172, 173, 178, 179, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 318, 319, 322, 323, 324, 325, 326, 327, 336, 340, 350, 357, 358, 407, 408, 414, 415, 423, 424, 434, 445, 446, 456, 458, 461, 579, 605, 606, 608, 609, 615, 618, 704, 720, 723, 730, 733, 750, 753, 755, 758, 770, 773, 800, 803, 805, 808, 830, 833, 845, 848, 875, 878, 880, 883, 885, 888, 905, 908, 910, 913, 920, 923, 925, 928, 930, 933, 955, 958, 970, 973, 975, 978, 990, 993, 995, 998, 1000, 1004, 1020, 1024, 1026, 1048, 1051, 1068, 1071, 1083, 1086, 1114, 1117, 1119, 1122, 1136, 1139, 1146, 1149, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1338, 1344, 1347, 1349, 1352, 1359, 1362, 1381, 1384, 1386, 1389, 1405, 1408, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1487, 1488, 1491, 1508, 1511, 1528, 1531, 1533, 1536, 1543, 1546, 1558, 1562, 1572, 1574, 1578, 1580, 1583, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1643, 1647, 1648, 1649, 1653, 1659, 1663, 1669, 1680, 1683, 1685, 1691, 1694, 1696, 1699, 1720, 1724, 1725, 1729, 1748], "index": [38, 54, 55, 137, 138, 155, 156, 157, 158, 159, 160, 170, 171, 176, 177, 302, 303, 320, 321, 322, 323, 324, 325, 336, 345, 349, 350, 356, 423, 431, 432, 496, 497, 518, 519, 538, 541, 670, 691, 1026, 1032, 1088, 1091, 1096, 1220, 1259, 1487, 1543, 1546, 1572, 1575, 1576, 1579, 1580, 1581, 1586, 1588, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1752], "create_index_rst": 38, "14": [38, 56, 57, 60, 61, 115, 116, 153, 154, 161, 162, 178, 179, 182, 183, 280, 281, 302, 303, 310, 311, 314, 315, 318, 319, 336, 340, 350, 407, 408, 416, 423, 424, 579, 582, 585, 615, 618, 704, 710, 713, 730, 733, 740, 743, 795, 798, 895, 898, 910, 913, 955, 958, 1020, 1024, 1026, 1176, 1179, 1220, 1221, 1224, 1272, 1274, 1277, 1333, 1336, 1338, 1359, 1362, 1405, 1408, 1445, 1449, 1487, 1558, 1562, 1648, 1649, 1653, 1685, 1691, 1694, 1696, 1699], "\u03c0": [38, 496, 704, 710, 713, 725, 728, 735, 738, 740, 743], "namespac": [38, 40, 338, 346, 348, 349, 351, 354, 359], "remov": [38, 40, 145, 146, 170, 171, 310, 311, 335, 338, 341, 345, 350, 352, 359, 1220, 1259, 1338, 1359, 1362, 1381, 1384, 1445, 1449, 1487, 1538, 1541, 1568, 1569, 1570, 1752], "resours": 39, "climb": 39, "steep": 39, "curv": 39, "respect": [39, 40, 42, 60, 61, 139, 140, 182, 183, 304, 305, 334, 336, 338, 340, 344, 348, 350, 351, 497, 538, 541, 704, 705, 708, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 965, 968, 1000, 1004, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1260, 1338, 1415, 1418, 1430, 1434, 1568, 1569, 1570, 1571, 1748, 1758], "behaviour": [39, 40, 42, 332, 333, 334, 336, 338, 341, 342, 344, 347, 348, 350, 351, 356, 391, 401], "frontend": [39, 332, 338, 350, 351, 353, 355, 1026, 1130, 1133, 1741, 1752], "refer": [39, 40, 41, 42, 161, 162, 163, 164, 304, 305, 326, 327, 328, 329, 333, 338, 344, 345, 348, 349, 350, 371, 387, 388, 419, 420, 497, 518, 519, 704, 820, 823, 885, 888, 1220, 1221, 1224, 1225, 1228, 1338, 1354, 1357, 1455, 1459, 1685, 1716, 1719, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1752], "realpython": 39, "pyn": 39, "kind": [39, 121, 122, 348, 350, 352, 354, 371, 579, 615, 618, 626, 629, 631, 704, 950, 953, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "stack": [39, 44, 47, 48, 145, 146, 149, 150, 170, 171, 286, 287, 310, 311, 314, 315, 354, 423, 428, 435, 497, 561, 565, 566, 570, 1026, 1167, 1210, 1338, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1430, 1434, 1435, 1439, 1445, 1449, 1487, 1572, 1573, 1582, 1583, 1742, 1748, 1750, 1757, 1758], "overflow": [39, 338, 704, 720, 723, 1685, 1720, 1724], "platform": [39, 41, 1750, 1754, 1756], "sort": [39, 132, 160, 167, 170, 171, 172, 173, 297, 325, 351, 391, 404, 446, 1338, 1364, 1367, 1430, 1434, 1435, 1439, 1670, 1673, 1675, 1678], "inform": [39, 40, 41, 42, 139, 140, 304, 305, 333, 336, 342, 349, 350, 579, 615, 618, 626, 629, 1026, 1032, 1220, 1254, 1258, 1755], "pilot": 39, "bit": [39, 40, 41, 336, 338, 340, 345, 354, 356, 579, 614, 615, 618, 626, 629, 704, 755, 758, 760, 763, 770, 773, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1758], "thei": [39, 40, 42, 107, 108, 145, 146, 153, 154, 170, 171, 310, 311, 318, 319, 332, 333, 335, 336, 337, 338, 339, 340, 345, 346, 347, 348, 350, 351, 352, 354, 356, 357, 358, 359, 371, 391, 393, 404, 579, 653, 1338, 1450, 1454, 1568, 1569, 1570, 1595, 1596, 1599, 1742, 1749, 1752, 1754, 1755, 1758, 1759], "done": [39, 40, 41, 42, 333, 340, 343, 348, 350, 357, 1752], "faster": [39, 494, 495, 1338, 1430, 1434, 1741, 1754, 1757], "head": [39, 41, 1272, 1328, 1331, 1742], "stuck": [39, 40], "spell": 39, "check": [39, 40, 41, 42, 49, 50, 51, 52, 53, 56, 57, 137, 138, 139, 140, 170, 171, 178, 179, 302, 303, 304, 305, 333, 336, 340, 342, 346, 348, 351, 353, 354, 356, 357, 358, 579, 602, 603, 620, 621, 623, 624, 632, 638, 641, 648, 651, 669, 670, 682, 683, 689, 703, 1026, 1037, 1040, 1073, 1075, 1081, 1082, 1099, 1108, 1111, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1170, 1186, 1190, 1211, 1214, 1218, 1220, 1235, 1238, 1338, 1364, 1367, 1368, 1370, 1572, 1573, 1582, 1583, 1584, 1742], "though": [39, 40, 42, 338, 341, 345, 348, 352, 357, 371], "sound": [39, 353], "odd": [39, 333, 407, 417, 704, 950, 953], "peopl": [39, 41, 42, 332, 1752, 1754], "action": [39, 340, 350], "integr": [39, 41, 56, 57, 107, 108, 178, 179, 182, 183, 332, 391, 404, 579, 582, 585, 1750, 1752, 1754, 1755, 1756], "keep": [39, 40, 41, 42, 149, 150, 170, 171, 314, 315, 333, 336, 337, 350, 351, 352, 357, 359, 1487, 1558, 1562], "explain": [40, 41, 42, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 350, 351, 352, 354, 355, 356, 357, 358, 359, 1742, 1748, 1755, 1758], "frequent": [40, 42, 1752], "wherebi": [40, 1572, 1584, 1749], "outlin": [40, 41, 42, 332, 336, 338, 341, 345, 347, 348, 350], "broad": [40, 1754], "individu": [40, 42, 333, 337, 345, 347, 348, 1752, 1755, 1758, 1759], "sub": [40, 42, 149, 150, 167, 170, 171, 172, 173, 174, 175, 182, 183, 302, 303, 314, 315, 332, 336, 342, 348, 349, 350, 356, 357, 358, 1338, 1359, 1362, 1487, 1533, 1536, 1568, 1569, 1570, 1571, 1742, 1748], "distribut": [40, 125, 126, 147, 148, 153, 154, 290, 291, 312, 313, 318, 319, 339, 371, 439, 440, 441, 442, 1272, 1311, 1314, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1752, 1755], "across": [40, 155, 156, 170, 171, 302, 303, 320, 321, 333, 336, 338, 340, 342, 344, 345, 348, 350, 352, 670, 692, 693, 1026, 1034, 1036, 1572, 1578, 1622, 1628, 1631, 1750, 1752, 1757], "todo": [40, 338, 348], "detail": [40, 42, 333, 335, 336, 337, 344, 345, 346, 348, 349, 350, 351, 354, 356, 357, 358, 497, 521, 524, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1754, 1758], "select": [40, 41, 42, 161, 162, 326, 327, 347, 350, 354, 356, 359, 371, 1685, 1686, 1689, 1691, 1694, 1752, 1755, 1756], "alloc": [40, 42, 54, 55, 56, 57, 178, 179, 371, 497, 561, 565, 566, 570, 579, 582, 585], "describ": [40, 42, 337, 350, 354, 359, 1685, 1696, 1699, 1712, 1715, 1720, 1724, 1752], "explan": [40, 42, 336, 341, 344, 348, 356], "instead": [40, 41, 42, 60, 61, 182, 183, 333, 336, 338, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 357, 371, 704, 965, 968, 1750, 1752, 1758, 1759], "focu": [40, 1750, 1751, 1754, 1759], "alwai": [40, 42, 56, 57, 139, 140, 149, 150, 178, 179, 304, 305, 314, 315, 334, 335, 336, 338, 341, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 371, 391, 393, 579, 582, 585, 704, 720, 723, 930, 933, 1026, 1124, 1127, 1220, 1235, 1238, 1487, 1523, 1526], "NOT": [40, 704, 905, 908], "pypi": [40, 41, 371], "instruct": [40, 41, 333, 1750, 1753, 1756, 1758], "static": [40, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 340, 341, 345, 346, 348, 371, 494, 495, 497, 509, 511, 704, 820, 823, 910, 913, 1751, 1752, 1753], "method": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 338, 340, 341, 343, 344, 345, 346, 350, 351, 354, 355, 358, 359, 371, 456, 479, 482, 484, 487, 489, 492, 497, 509, 511, 521, 524, 574, 578, 579, 582, 585, 615, 618, 704, 725, 728, 740, 743, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 890, 893, 905, 908, 910, 913, 935, 938, 940, 943, 990, 993, 995, 998, 1000, 1004, 1026, 1053, 1156, 1159, 1161, 1164, 1220, 1241, 1244, 1245, 1248, 1253, 1259, 1271, 1272, 1298, 1301, 1333, 1336, 1338, 1435, 1439, 1471, 1472, 1475, 1487, 1528, 1531, 1548, 1552, 1572, 1573, 1583, 1584, 1585, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1685, 1696, 1699, 1700, 1703, 1704, 1707, 1712, 1715, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1742, 1753, 1759], "revers": [40, 44, 47, 48, 121, 122, 137, 138, 145, 146, 161, 162, 167, 172, 173, 286, 287, 310, 311, 326, 327, 336, 338, 340, 341, 348, 352, 359, 371, 423, 425, 426, 1026, 1055, 1057, 1338, 1450, 1454, 1487, 1508, 1511, 1685, 1686, 1689, 1691, 1694], "familiar": [40, 41], "yourself": [40, 42, 348, 350, 352, 370], "hypothesi": [40, 42, 333, 346], "fail": [40, 41, 42, 333, 337, 338, 340, 343, 348], "els": [40, 137, 138, 153, 154, 318, 319, 335, 338, 342, 345, 347, 348, 349, 350, 351, 352, 354, 356, 358, 359, 371, 439, 440, 579, 605, 606, 609, 1026, 1037, 1040, 1055, 1057, 1073, 1075, 1572, 1582, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1753], "cover": [40, 333, 340, 341, 345, 346, 350, 352, 353], "lambda": [40, 350, 354, 357, 456, 457, 463, 1026, 1055, 1057, 1220, 1230, 1240, 1260, 1572, 1579, 1580], "direct": [40, 348, 349, 352, 358, 359, 370, 423, 425, 426, 433, 1669, 1680, 1683, 1748, 1752, 1753, 1756], "bind": [40, 336, 1751, 1752], "defin": [40, 41, 54, 55, 121, 122, 137, 138, 145, 146, 176, 177, 286, 287, 302, 303, 310, 311, 337, 338, 341, 344, 348, 349, 350, 351, 356, 358, 371, 387, 388, 391, 401, 407, 410, 412, 413, 417, 423, 433, 497, 548, 551, 704, 930, 933, 965, 968, 1026, 1114, 1117, 1119, 1122, 1338, 1344, 1347, 1364, 1367, 1368, 1370, 1425, 1428, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1741, 1749, 1750, 1751, 1752, 1753, 1756, 1758, 1759], "def": [40, 41, 336, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 447, 1026, 1042, 1572, 1578, 1742], "special": [40, 44, 47, 48, 161, 162, 167, 172, 173, 310, 311, 333, 334, 340, 341, 342, 344, 347, 351, 391, 403, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 775, 778, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 930, 933, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729, 1752, 1753, 1754], "sure": [40, 41, 42, 333, 337, 348, 349, 352], "aforement": 40, "correct": [40, 42, 161, 162, 326, 327, 332, 336, 338, 339, 343, 344, 345, 349, 350, 579, 664, 1487, 1488, 1491, 1685, 1716, 1719, 1725, 1729, 1742], "categori": [40, 333, 334, 336, 338, 348, 351, 353, 1742], "parent": [40, 356, 1220, 1253, 1271], "arraywithelementwis": [40, 44, 47, 48, 60, 334, 356], "containerwithmanipul": [40, 167, 172, 173, 314], "hint": [40, 60, 61, 182, 183, 334, 341, 344, 345, 347, 348, 351, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "add": [40, 41, 42, 44, 47, 48, 60, 61, 151, 152, 165, 166, 167, 170, 171, 172, 173, 182, 183, 316, 317, 330, 331, 332, 333, 334, 335, 336, 338, 341, 344, 345, 347, 348, 350, 351, 352, 354, 356, 371, 704, 1026, 1152, 1208, 1220, 1253, 1271, 1590, 1591, 1594, 1742, 1748, 1750, 1752], "thorough": [40, 341, 344, 350], "ensur": [40, 41, 42, 137, 138, 334, 338, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 1026, 1124, 1127, 1752], "produc": [40, 280, 281, 338, 350, 351, 407, 411, 1272, 1333, 1336, 1753, 1755], "comment": [40, 41, 42, 333, 338, 343, 348], "add_reformatting_checklist_": 40, "category_nam": [40, 338, 339, 341, 344, 345], "pr": [40, 42, 333, 348], "belong": [40, 170, 171, 333, 358], "shown": [40, 42, 165, 166, 170, 171, 330, 331, 337, 338, 340, 343, 344, 348, 349, 350, 351, 354, 356, 371, 704, 860, 863], "trigger": [40, 337], "autom": [40, 350, 1741, 1742, 1754], "bot": 40, "proper": 40, "markdown": 40, "text": [40, 42, 340, 341], "might": [40, 41, 42, 137, 138, 338, 340, 343, 346, 347, 348, 350, 351, 352, 354, 356, 357, 579, 654, 1026, 1055, 1057, 1741], "moment": [40, 139, 140, 304, 305, 335, 371, 1220, 1221, 1224, 1225, 1228, 1241, 1244], "patient": [40, 41], "modifi": [40, 41, 42, 121, 122, 170, 171, 286, 287, 333, 335, 338, 339, 341, 343, 345, 351, 354, 407, 417, 423, 429], "item": [40, 49, 53, 137, 138, 165, 166, 170, 171, 272, 273, 302, 303, 336, 338, 354, 356, 357, 359, 579, 604, 670, 675, 1026, 1053, 1083, 1086, 1106, 1176, 1179, 1181, 1184, 1220, 1259, 1572, 1577, 1578, 1579, 1580, 1584, 1588, 1589, 1742], "symbol": [40, 41, 1752, 1753], "emoji": 40, "within": [40, 42, 49, 52, 53, 348, 349, 350, 358, 371, 497, 499, 500, 1595, 1611, 1614, 1748, 1749, 1753], "legend": 40, "mark": [40, 42, 350], "review": [40, 42, 340, 348, 351], "checkbox": [40, 41], "proce": [40, 41], "elabor": 40, "struggl": 40, "assigne": 40, "author": [40, 42, 1742, 1750, 1754], "later": [40, 170, 171, 350, 1026, 1042, 1752], "status": 40, "manual": [40, 41, 42, 337, 348, 350, 358, 1572, 1573, 1582, 1583], "refrain": 40, "transpil": [40, 348, 353, 354, 355, 1741, 1742, 1752, 1758, 1759], "locat": [40, 42, 335, 339, 348, 349, 350, 351, 497, 548, 551, 1595, 1596, 1599, 1669, 1675, 1678, 1750], "subsect": [40, 42, 333, 337], "verifi": [40, 338, 339, 348, 350, 351], "miss": [40, 41, 334, 336, 340, 343, 350], "simpler": [40, 42, 348, 1753, 1759], "titl": [40, 42, 348, 1742], "label": [40, 42, 147, 148, 312, 313, 337, 348, 353, 354, 355, 359, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1752], "suggest": [40, 41, 42, 338, 348, 350, 351], "simpli": [40, 42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 335, 336, 338, 339, 340, 341, 344, 345, 347, 348, 349, 350, 352, 354, 358, 359, 371, 704, 820, 823, 885, 888, 1741, 1753, 1758], "leav": [40, 49, 52, 53, 167, 172, 173, 174, 175, 280, 281, 302, 303, 314, 315, 326, 327, 336, 338, 340, 341, 344, 345, 347, 350, 357, 358, 1487, 1543, 1546, 1572, 1573, 1574, 1582, 1583, 1584], "assess": [40, 352], "appropri": [40, 42, 155, 156, 165, 166, 320, 321, 330, 331, 346, 350, 704, 720, 723, 930, 933, 1622, 1623, 1626], "wait": [40, 42, 167, 170, 171, 172, 173, 348, 1026, 1171], "composit": [40, 332, 334, 335, 336, 338, 347, 349, 350, 352, 354, 358, 359, 371, 391, 404, 419, 421, 1741, 1753], "temporari": [40, 338, 1026, 1107, 1173], "merg": [40, 42, 333, 348, 1752], "close": [40, 41, 42, 341, 348, 350, 352, 704, 820, 823, 885, 888, 970, 973, 1338, 1430, 1434, 1487, 1503, 1506, 1752], "normal": [40, 151, 152, 153, 154, 316, 317, 318, 319, 357, 391, 403, 1487, 1493, 1496, 1543, 1546, 1590, 1591, 1594, 1595, 1606, 1609, 1750], "altern": [40, 41, 107, 108, 272, 273, 347, 348, 357, 391, 402, 1755], "composition": [40, 347, 348], "choos": [40, 41, 42, 155, 156, 180, 181, 355, 359, 670, 695, 699, 704, 905, 908, 910, 913, 1622, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1759], "decid": [40, 41, 170, 171, 338, 352, 1572, 1583], "addit": [40, 41, 42, 137, 138, 151, 152, 180, 181, 302, 303, 316, 317, 336, 338, 340, 341, 348, 350, 351, 352, 356, 357, 359, 670, 695, 699, 704, 720, 723, 970, 973, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1219, 1590, 1591, 1594, 1752, 1753, 1754, 1758], "potenti": [40, 41, 42, 338, 348, 353, 704, 820, 823, 885, 888, 1755], "pend": 40, "show": [40, 41, 42, 170, 171, 337, 340, 347, 348, 350, 370, 371, 1026, 1167, 1210, 1742, 1752], "helpfulli": [40, 352, 1750], "prevent": [40, 42, 139, 140, 304, 305, 338, 343, 347, 348, 351, 352, 1026, 1042, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1685, 1720, 1724], "problemat": [40, 41], "unimpl": 40, "final": [40, 42, 137, 138, 302, 303, 334, 338, 340, 341, 343, 345, 347, 348, 352, 353, 357, 497, 532, 533, 535, 536, 1026, 1076, 1079, 1748, 1758], "issue_link": 40, "chosen": [40, 497, 499, 500, 704, 740, 743, 1622, 1643, 1647], "correctli": [40, 41, 42, 145, 146, 155, 156, 310, 311, 320, 321, 336, 338, 340, 342, 343, 344, 347, 349, 350, 352, 358, 371, 1338, 1386, 1389, 1622, 1623, 1626], "alias": [40, 348, 349], "detect": [40, 41, 170, 171, 335, 336, 343, 350, 357, 358, 1572, 1573, 1583], "alias_nam": 40, "function_nam": 40, "notic": [40, 352], "alia": [40, 496], "alreadi": [40, 41, 42, 170, 171, 335, 336, 338, 344, 348, 352, 371, 407, 417, 704, 780, 783, 825, 828, 930, 933, 970, 973, 1015, 1019, 1338, 1371, 1374, 1405, 1408, 1742, 1752, 1754, 1759], "push": [40, 42, 333, 343, 1758], "liner": 40, "meanwhil": 40, "reselect": 40, "too": [40, 41, 42, 333, 337, 338, 343, 371, 704, 720, 723, 930, 933], "placement": 40, "categoris": [40, 333, 348], "faithfulli": 40, "descript": [40, 60, 61, 182, 183, 310, 311, 341, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "inner": [40, 145, 146, 176, 177, 310, 311, 347, 497, 548, 551, 1338, 1364, 1367, 1381, 1384, 1568, 1569, 1570, 1571], "fall": [40, 42, 338, 353, 1742], "under": [40, 41, 42, 332, 333, 336, 340, 341, 345, 348, 350, 352, 353, 354, 357, 359, 371, 1752, 1755, 1759], "linalg": [40, 118, 146, 283, 311, 347, 420, 421, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1742], "match": [40, 56, 57, 170, 171, 178, 179, 336, 340, 579, 582, 585, 704, 965, 968, 1026, 1152, 1753, 1758], "creation_routin": [40, 349], "fft": [40, 1752], "indexing_routin": 40, "logic": [40, 163, 164, 328, 329, 334, 338, 339, 342, 346, 348, 350, 356, 670, 686, 704, 900, 903, 905, 908, 910, 913, 1730, 1731, 1734, 1736, 1739, 1742], "ma": 40, "manipulation_routin": 40, "mathematical_funct": [40, 348], "matrix": [40, 44, 47, 48, 137, 138, 143, 144, 145, 146, 302, 303, 308, 309, 310, 311, 338, 348, 387, 388, 497, 538, 541, 561, 565, 566, 570, 1026, 1027, 1030, 1043, 1046, 1272, 1318, 1321, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1450, 1454, 1465, 1469, 1750, 1752], "random": [40, 126, 154, 170, 171, 291, 319, 339, 350, 351, 359, 370, 440, 441, 442, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1617, 1620, 1742, 1752], "sorting_searching_count": 40, "statist": [40, 134, 162, 299, 327, 330, 331, 338, 348, 350, 351, 407, 417, 453, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1752], "ufunc": 40, "hierarchi": [40, 170, 171, 357, 1748, 1758], "decomposit": [40, 1338, 1339, 1342, 1415, 1418, 1430, 1434, 1759], "matrix_and_vector_product": 40, "matrix_eigenvalu": 40, "norms_and_other_numb": 40, "solving_equations_and_inverting_matric": 40, "product": [40, 60, 61, 145, 146, 161, 162, 182, 183, 282, 283, 310, 311, 326, 327, 354, 419, 421, 704, 930, 933, 1272, 1328, 1331, 1333, 1336, 1338, 1344, 1347, 1371, 1374, 1381, 1384, 1405, 1408, 1455, 1459, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1712, 1715, 1752, 1754], "seem": [40, 41, 352, 358, 359, 371, 1752], "func": [40, 170, 171, 340, 494, 495, 670, 694, 1026, 1042, 1219, 1220, 1229, 1230, 1240, 1260, 1572, 1585], "gleam": 40, "yet": [40, 41, 371], "uncom": 40, "test_numpy_inn": 40, "mirror": [40, 407, 417, 1752], "correspond": [40, 42, 56, 57, 60, 61, 107, 108, 121, 122, 137, 138, 149, 150, 161, 162, 167, 170, 171, 172, 173, 178, 179, 182, 183, 272, 273, 282, 283, 286, 287, 314, 315, 326, 327, 334, 335, 336, 337, 338, 340, 341, 344, 345, 346, 348, 350, 352, 354, 391, 393, 397, 398, 404, 423, 425, 426, 456, 457, 463, 579, 587, 590, 704, 740, 743, 950, 953, 1026, 1219, 1338, 1344, 1347, 1364, 1367, 1386, 1389, 1425, 1428, 1487, 1528, 1531, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1752], "ivy_test": [40, 41, 42, 333, 337, 349], "test_ivi": [40, 41, 42, 337, 349, 350], "test_frontend": [40, 349], "unsur": [40, 350], "put": [40, 350, 371, 1758], "explor": [40, 41, 42, 338, 352, 355, 359, 370, 1752, 1755], "outer": [40, 145, 146, 310, 311, 1338, 1568, 1569, 1570, 1571], "confirm": 40, "ve": [40, 41, 42, 153, 154, 318, 319, 352, 353, 356, 1595, 1596, 1599, 1741, 1742], "empti": [40, 41, 137, 138, 170, 171, 302, 303, 334, 338, 339, 407, 417, 497, 499, 500, 1026, 1043, 1046, 1161, 1164, 1220, 1253, 1259, 1271, 1685, 1720, 1724, 1730, 1731, 1734, 1736, 1739], "along": [40, 45, 46, 107, 108, 121, 122, 133, 134, 137, 138, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 182, 183, 272, 273, 286, 287, 298, 299, 302, 303, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 340, 347, 351, 352, 354, 391, 402, 404, 407, 417, 423, 425, 426, 434, 445, 446, 452, 453, 497, 532, 533, 535, 536, 670, 694, 1026, 1083, 1086, 1338, 1445, 1449, 1455, 1459, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1508, 1511, 1518, 1521, 1528, 1531, 1533, 1536, 1543, 1546, 1553, 1557, 1558, 1562, 1568, 1569, 1570, 1571, 1595, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752], "backend_nam": [40, 335, 338, 339, 341, 344, 345, 346], "relevant_submodul": 40, "sometim": [40, 41, 42, 338, 348, 350, 351, 352], "behav": [40, 333, 342, 347, 349, 356, 1753], "helper": [40, 337, 338, 342, 357, 579, 602, 1741], "recreat": 40, "defer": [40, 334, 336, 338, 339, 345, 346, 347, 348, 350, 1758], "clearer": [40, 342, 357], "mind": [40, 334, 336, 350], "posit": [40, 42, 49, 50, 51, 60, 61, 107, 108, 121, 122, 137, 138, 145, 146, 149, 150, 182, 183, 272, 273, 286, 287, 302, 303, 310, 311, 314, 315, 333, 336, 346, 348, 349, 350, 351, 357, 370, 387, 388, 391, 398, 401, 419, 420, 423, 430, 496, 497, 518, 519, 579, 615, 618, 704, 705, 708, 845, 848, 850, 853, 930, 933, 960, 963, 965, 968, 1026, 1042, 1076, 1079, 1219, 1338, 1339, 1342, 1354, 1357, 1487, 1503, 1506, 1528, 1531, 1595, 1616, 1622, 1638, 1641, 1730, 1731, 1734, 1736, 1739, 1754], "keyword": [40, 49, 50, 51, 167, 170, 171, 172, 173, 336, 338, 339, 346, 347, 348, 349, 350, 351, 357, 391, 401, 407, 417, 497, 538, 541, 1026, 1033, 1042, 1152, 1208, 1572, 1578, 1685, 1720, 1724], "strategi": [40, 346, 349], "draw": [40, 153, 154, 318, 319, 349, 350, 439, 441, 1595, 1596, 1599, 1606, 1609, 1611, 1614], "realli": [41, 336, 371, 1757, 1758], "gh": 41, "your_fold": 41, "cours": [41, 42, 333, 340, 351, 352, 357, 371, 1757, 1758], "whatev": [41, 336, 371], "elig": 41, "student": 41, "licenc": 41, "remind": 41, "account": [41, 341, 348], "licens": [41, 1755], "expir": 41, "abl": [41, 42, 170, 171, 333, 338, 345, 347, 348, 352, 354, 359, 1755, 1758], "profession": 41, "trial": 41, "jetbrain": 41, "valid": [41, 115, 116, 143, 144, 163, 164, 280, 281, 308, 309, 328, 329, 335, 338, 340, 349, 350, 407, 408, 409, 414, 415, 416, 579, 603, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1487, 1503, 1506, 1543, 1546, 1730, 1731, 1734, 1736, 1739, 1753], "bui": [41, 1758], "paid": 41, "pace": 41, "align": [41, 42, 117, 118, 170, 171, 282, 283, 354, 356, 419, 420, 1741, 1758], "stabl": [41, 137, 138, 159, 160, 302, 303, 324, 325, 335, 338, 354, 371, 387, 388, 1026, 1097, 1098, 1168, 1169, 1176, 1179, 1181, 1184, 1669, 1670, 1673, 1680, 1683], "mayb": [41, 49, 52, 53, 354, 356], "person": [41, 42], "experi": [41, 350, 355, 357, 371], "avoid": [41, 42, 335, 336, 338, 343, 346, 348, 350, 351, 704, 820, 823, 885, 888, 1026, 1042, 1752], "abil": [41, 352, 355, 371, 1752], "certain": [41, 42, 170, 171, 333, 338, 350, 352, 371, 497, 499, 500, 532, 533, 535, 536, 1756], "perhap": [41, 356, 357, 358, 371, 1758], "track": [41, 42, 1572, 1584, 1752], "click": [41, 42, 337, 341, 355, 1742], "icon": [41, 42], "side": [41, 42, 159, 160, 324, 325, 1669, 1675, 1678], "left": [41, 42, 107, 108, 133, 134, 145, 146, 155, 156, 159, 160, 272, 273, 298, 299, 310, 311, 320, 321, 324, 325, 338, 340, 391, 402, 423, 425, 452, 453, 704, 760, 763, 1338, 1364, 1367, 1386, 1389, 1430, 1434, 1450, 1454, 1622, 1623, 1626, 1669, 1675, 1678], "panel": 41, "drop": [41, 371], "down": [41, 350, 423, 426, 1741, 1752, 1758], "builtin": [41, 356, 358], "virtualenv": 41, "o": [41, 332, 354, 1026, 1152], "tick": [41, 42, 337], "test_array_api": [41, 42, 333, 350], "r": [41, 42, 170, 171, 332, 1220, 1229, 1338, 1415, 1418, 1487, 1558, 1562], "txt": [41, 333, 351], "visual": [41, 348, 371, 1752, 1754, 1757], "mitig": [41, 1758], "conflict": [41, 42, 348, 357], "particular": [41, 42, 333, 335, 338, 340, 346, 347, 348, 349, 350, 351, 352, 704, 705, 708, 905, 908, 1748, 1752, 1758], "system": [41, 42, 335, 338, 371, 1338, 1425, 1428, 1750, 1752, 1755, 1757, 1759], "wsl": 41, "powershel": 41, "admin": 41, "visit": [41, 42, 349], "deploy": [41, 1751, 1754, 1755, 1758, 1759], "top": [41, 42, 121, 122, 149, 150, 286, 287, 338, 348, 350, 357, 358, 423, 434, 1752, 1756], "press": [41, 42, 357, 1742], "ok": 41, "debug": [41, 42, 336, 337, 350, 352, 357, 1752], "dialog": 41, "invalid": [41, 163, 164, 328, 329, 338, 343, 1338, 1455, 1459, 1487, 1503, 1506, 1730, 1731, 1734, 1736, 1739], "caus": [41, 42, 333, 335, 336, 337, 338, 340, 347, 350, 371], "earlier": [41, 42], "necessari": [41, 42, 149, 150, 314, 315, 335, 336, 340, 346, 347, 348, 350, 352, 1487, 1523, 1526], "virtualis": 41, "sudo": 41, "apt": 41, "ca": 41, "certif": 41, "curl": 41, "gnupg": 41, "lsb": 41, "mkdir": 41, "p": [41, 42, 137, 138, 302, 303, 310, 311, 332, 391, 392, 497, 538, 541, 1026, 1043, 1046, 1048, 1051, 1272, 1311, 1314, 1338, 1386, 1389, 1460, 1464, 1572, 1580], "keyr": 41, "fssl": 41, "download": [41, 350], "gpg": 41, "dearmor": 41, "echo": 41, "deb": 41, "arch": 41, "dpkg": 41, "architectur": [41, 359, 371, 1750, 1751, 1752, 1755, 1756, 1757], "lsb_releas": 41, "tee": 41, "dev": [41, 58, 59, 170, 171, 180, 181, 339, 345, 356, 358, 670, 684, 690], "null": 41, "ce": 41, "cli": 41, "containerd": 41, "io": 41, "compos": [41, 336, 350, 371, 1752, 1759], "plugin": 41, "systemctl": 41, "permiss": 41, "post": [41, 151, 152, 316, 317, 359, 1590, 1591, 1594], "coupl": [41, 334, 356, 358, 1752], "unit": [41, 45, 46, 168, 169, 333, 338, 348, 349, 350, 371, 456, 458, 461, 464, 467, 474, 477, 1753, 1756], "test_ab": [41, 350], "context": [41, 42, 143, 144, 308, 309, 340, 670, 1026, 1153, 1272, 1328, 1331], "menu": 41, "editor": 41, "green": [41, 42, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 1802, 1803], "appear": [41, 42, 352, 423, 425, 426, 1026, 1219], "pytest": [41, 42, 333, 350], "keyboard": 41, "shortcut": [41, 407, 417], "displai": [41, 336, 350, 357], "screenshot": 41, "ctrl": [41, 42], "shift": [41, 42, 149, 150, 167, 172, 173, 176, 177, 314, 315, 340, 344, 387, 388, 704, 760, 763, 770, 773, 1487, 1528, 1531], "bottom": [41, 1758], "screen": [41, 170, 171, 357], "elsewher": [41, 497, 518, 519, 1622, 1643, 1647], "test_elementwis": 41, "tab": [41, 337, 357, 1742], "progress": [41, 42, 359, 1338, 1450, 1454], "bar": 41, "shell": [41, 42], "run_tests_cli": [41, 333], "run_ivy_core_test": 41, "run_ivy_nn_test": 41, "run_ivy_stateful_test": 41, "run_test": 41, "sh": [41, 42, 333], "test_depend": 41, "test_ivy_cor": 41, "test_ivy_nn": 41, "test_ivy_st": 41, "test_": [41, 333, 337, 349], "test_funct": [41, 42, 337, 349, 350], "test_cor": [41, 42, 337, 349], "wish": [41, 348], "ivy_cor": 41, "ivy_nn": 41, "ivy_st": 41, "dure": [41, 139, 140, 161, 162, 170, 171, 180, 181, 304, 305, 326, 327, 336, 338, 339, 342, 345, 346, 347, 348, 349, 350, 352, 371, 494, 495, 670, 695, 699, 1026, 1208, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1338, 1381, 1384, 1568, 1569, 1570, 1571, 1685, 1716, 1719, 1725, 1729, 1752, 1753, 1758], "simplest": [41, 340, 350, 352], "valu": [41, 42, 54, 55, 56, 57, 60, 61, 107, 108, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 333, 336, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 356, 371, 387, 388, 391, 397, 398, 401, 403, 404, 407, 417, 419, 420, 423, 427, 431, 434, 439, 440, 442, 447, 450, 456, 489, 492, 497, 499, 500, 518, 519, 526, 527, 530, 532, 533, 535, 536, 548, 551, 579, 582, 585, 604, 605, 606, 608, 631, 654, 670, 693, 694, 704, 705, 708, 710, 713, 720, 723, 725, 728, 735, 738, 780, 783, 805, 808, 810, 813, 825, 828, 830, 833, 835, 838, 840, 843, 860, 863, 865, 868, 870, 873, 920, 923, 925, 928, 930, 933, 940, 943, 945, 948, 950, 953, 960, 963, 970, 973, 1010, 1014, 1015, 1019, 1026, 1042, 1043, 1046, 1048, 1051, 1053, 1055, 1057, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1105, 1106, 1113, 1114, 1117, 1119, 1122, 1129, 1156, 1159, 1161, 1164, 1168, 1169, 1171, 1186, 1190, 1212, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1241, 1244, 1253, 1259, 1271, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1354, 1357, 1386, 1389, 1391, 1393, 1395, 1398, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1460, 1464, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1518, 1521, 1523, 1526, 1563, 1567, 1568, 1569, 1570, 1572, 1576, 1577, 1578, 1579, 1580, 1585, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1616, 1622, 1623, 1626, 1628, 1631, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1752, 1753], "becaus": [41, 42, 334, 335, 336, 338, 339, 341, 344, 345, 346, 347, 348, 349, 350, 352, 354, 358, 359, 371, 1752, 1755, 1758], "header": [41, 42], "summari": [41, 42, 170, 171, 350, 579, 604, 631, 661, 1026, 1053, 1106], "recommend": [41, 42, 335, 704, 905, 908, 910, 913, 965, 968, 1685, 1704, 1707, 1716, 1719], "advanc": [41, 1751], "q": [41, 42, 308, 309, 332, 371, 1272, 1333, 1336, 1338, 1364, 1367, 1415, 1418, 1572, 1580], "fix": [41, 42, 337, 338, 350, 351], "arrow": 41, "button": [41, 42], "funcion": 41, "target": [41, 332, 349, 351, 353, 357, 358, 359, 670, 674, 1742, 1748, 1750, 1751, 1752, 1755, 1757, 1758], "test_stat": [41, 337], "test_submodule_nam": 41, "test_function_nam": 41, "debugg": 41, "studio": 41, "easiest": 41, "effici": [41, 42, 336, 343, 345, 346, 347, 350, 354, 357, 371, 1752, 1754, 1755], "afterward": [41, 357], "background": [41, 1752, 1754], "restart": 41, "corner": [41, 42, 350], "overlap": [41, 351, 352, 1753], "test_file_path": 41, "test_fn_nam": 41, "enter": [41, 42, 334, 338, 339, 344, 346, 670, 1220, 1253, 1259, 1271], "forward": [41, 335, 341, 350, 351, 352, 359, 370, 371, 1752, 1753], "slash": 41, "regular": [41, 42, 348, 349, 1752], "headach": 41, "arm": [41, 42], "m1": 41, "featur": [41, 42, 344, 348, 351, 352, 357, 371, 1742, 1752, 1753, 1754, 1758], "vm": 41, "azur": 41, "cloud": [41, 370, 1754], "mean": [41, 42, 137, 138, 143, 144, 153, 154, 161, 162, 170, 171, 302, 303, 308, 309, 318, 319, 326, 327, 330, 331, 332, 333, 335, 336, 338, 339, 340, 345, 347, 348, 350, 351, 352, 354, 356, 357, 358, 359, 370, 371, 407, 417, 419, 420, 439, 440, 670, 694, 1026, 1063, 1066, 1220, 1230, 1240, 1260, 1272, 1298, 1301, 1306, 1309, 1338, 1354, 1357, 1568, 1569, 1570, 1571, 1572, 1578, 1595, 1601, 1604, 1606, 1609, 1648, 1649, 1653, 1685, 1741, 1742, 1749, 1752], "longer": [41, 338, 346, 347, 350, 1752], "worri": 41, "agnost": [41, 334, 344, 354, 356, 359, 371, 1742, 1758, 1759], "usual": [41, 333, 348, 350, 352], "favourit": 41, "theme": 41, "unsupport": [41, 343, 348, 579, 623, 624, 670, 683, 1026, 1081, 1082], "old": [41, 170, 171, 335, 347], "slow": 41, "ipad": 41, "long": [41, 42, 337, 338, 340, 354, 1272, 1323, 1326, 1752], "cool": [41, 351], "sever": [41, 42, 351, 371, 1338, 1376, 1379, 1750, 1756], "requisit": 41, "pane": [41, 42], "readi": 41, "begin": [41, 333, 349, 407, 417, 1572, 1573, 1583], "dropdown": 41, "master": [41, 42, 333, 351, 1752], "view": [41, 42, 121, 122, 286, 287, 337, 423, 430, 433, 497, 521, 524, 1752], "box": 41, "upto": [41, 42], "15": [41, 60, 61, 107, 108, 115, 116, 153, 154, 161, 162, 167, 172, 173, 176, 177, 182, 183, 272, 273, 280, 281, 302, 303, 308, 309, 314, 315, 318, 319, 326, 327, 340, 391, 399, 407, 408, 416, 423, 424, 497, 527, 530, 579, 615, 618, 704, 720, 723, 750, 753, 770, 773, 800, 803, 895, 898, 965, 968, 970, 973, 1026, 1048, 1051, 1063, 1066, 1105, 1114, 1117, 1119, 1122, 1171, 1176, 1179, 1212, 1272, 1274, 1277, 1318, 1321, 1338, 1359, 1362, 1376, 1379, 1405, 1408, 1435, 1439, 1440, 1444, 1487, 1528, 1531, 1558, 1562, 1595, 1601, 1604, 1606, 1609, 1622, 1638, 1641, 1648, 1649, 1653, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1755], "minut": 41, "launch": 41, "12": [41, 60, 61, 107, 108, 115, 116, 137, 138, 153, 154, 161, 162, 182, 183, 280, 281, 302, 303, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 326, 327, 335, 336, 338, 340, 351, 407, 408, 412, 413, 415, 423, 424, 704, 720, 723, 770, 773, 775, 778, 790, 793, 800, 803, 805, 808, 930, 933, 970, 973, 1026, 1048, 1051, 1063, 1066, 1098, 1161, 1164, 1169, 1176, 1179, 1272, 1318, 1321, 1338, 1359, 1362, 1386, 1389, 1405, 1408, 1440, 1444, 1445, 1449, 1487, 1508, 1511, 1528, 1531, 1558, 1562, 1590, 1591, 1594, 1595, 1601, 1604, 1606, 1609, 1622, 1643, 1647, 1648, 1649, 1653, 1685, 1686, 1689, 1696, 1699, 1720, 1724], "output": [41, 42, 45, 46, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 351, 354, 356, 358, 359, 371, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 592, 595, 654, 670, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1042, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1088, 1091, 1156, 1159, 1161, 1164, 1166, 1209, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1260, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1572, 1585, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1633, 1636, 1638, 1641, 1643, 1647, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1753], "That": [41, 42, 350, 356, 357, 358, 704, 965, 968, 1753], "approach": [41, 42, 336, 338, 345, 346, 350, 352, 356, 357, 371, 1749, 1756, 1758], "colour": 41, "applic": [41, 338, 339, 346, 358, 1272, 1328, 1331, 1333, 1336, 1572, 1578, 1584, 1749, 1750, 1752, 1754, 1756, 1758], "chanc": 41, "troubleshoot": 41, "ever": 41, "64": [41, 60, 61, 107, 108, 143, 144, 167, 172, 173, 182, 183, 272, 273, 302, 303, 308, 309, 310, 311, 318, 319, 357, 358, 391, 392, 393, 579, 614, 704, 770, 773, 990, 993, 995, 998, 1026, 1063, 1066, 1220, 1241, 1244, 1272, 1298, 1301, 1306, 1309, 1338, 1405, 1408, 1435, 1439, 1685, 1696, 1699, 1742, 1757], "usr": 41, "flask": 41, "toolbar": [41, 42], "_array_modul": [41, 333], "array_api_test": [41, 42, 333], "refresh": 41, "conftest": 41, "nutshel": [41, 344], "hook": 41, "lint": 41, "accept": [41, 42, 49, 60, 61, 174, 182, 183, 334, 336, 339, 340, 341, 344, 345, 346, 347, 349, 350, 351, 356, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1186, 1190, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741, 1742, 1750], "attempt": [41, 343, 371], "succe": 41, "properli": [41, 332, 342, 350], "server": [42, 1752], "suitabl": [42, 280, 281, 336, 351, 407, 412, 413, 1669, 1675, 1678, 1752], "quick": [42, 332, 349, 358], "tendenc": 42, "land": 42, "end": [42, 335, 347, 351, 352, 353, 370, 371, 407, 417, 423, 424, 497, 499, 500, 704, 740, 743, 1742, 1750, 1755], "world": [42, 1754], "come": [42, 348, 351, 352, 358, 369, 1741, 1742, 1752], "fly": [42, 1752], "hard": [42, 350, 356, 1752], "receiv": [42, 338, 339, 350, 1026, 1033, 1152], "internship": 42, "bug": [42, 348, 350, 351], "serv": [42, 334, 336, 344, 345, 350, 352, 353, 1741, 1742, 1750], "suspect": 42, "observ": [42, 342, 354, 1754], "act": [42, 340, 371, 1759], "placehold": [42, 334, 343, 344, 1572, 1584, 1741], "ii": [42, 1685, 1696, 1699], "iii": 42, "issue_numb": 42, "No": [42, 1752], "soon": [42, 338, 369, 371, 1742], "partial": [42, 170, 171, 1220, 1240], "solut": [42, 336, 338, 350, 352, 1338, 1425, 1428, 1750, 1754], "respond": 42, "shape": [42, 44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 338, 339, 340, 341, 344, 347, 348, 349, 350, 351, 354, 356, 357, 358, 359, 387, 388, 391, 393, 403, 407, 409, 412, 413, 416, 417, 419, 420, 421, 423, 430, 432, 433, 434, 439, 440, 441, 442, 445, 446, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 670, 690, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1100, 1103, 1156, 1159, 1161, 1164, 1172, 1191, 1197, 1213, 1219, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1633, 1636, 1638, 1641, 1643, 1647, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1730, 1731, 1734, 1736, 1739, 1742], "dai": [42, 337], "warn": 42, "without": [42, 170, 171, 334, 336, 338, 339, 340, 342, 343, 344, 345, 349, 350, 351, 352, 356, 357, 358, 370, 371, 1026, 1105, 1171, 1208, 1487, 1523, 1526, 1572, 1574, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1749, 1752, 1753, 1754, 1758], "likewis": [42, 336, 338, 341, 344, 345, 348, 352, 357, 1758], "freed": 42, "flag": [42, 139, 140, 170, 171, 304, 305, 338, 346, 347, 348, 350, 670, 675, 1220, 1235, 1238], "remain": [42, 149, 150, 155, 156, 314, 315, 320, 321, 337, 340, 351, 352, 371, 704, 720, 723, 930, 933, 965, 968, 1487, 1523, 1526, 1572, 1578, 1622, 1638, 1641], "short": [42, 338, 348, 351, 354, 358, 1272, 1323, 1326], "basi": [42, 333, 357], "situat": [42, 359], "upon": [42, 340, 347, 350, 352, 371, 1751, 1752], "period": [42, 280, 281, 351, 407, 410, 411, 412, 413], "unabl": [42, 352], "obvious": 42, "never": [42, 149, 150, 314, 315, 338, 348, 350, 352, 1487, 1523, 1526], "qualiti": 42, "hypothet": 42, "frustrat": 42, "delai": 42, "busi": 42, "fine": [42, 338, 340, 348, 356, 359, 1758], "inact": 42, "me": 42, "unfairli": 42, "definit": [42, 107, 108, 145, 146, 182, 183, 310, 311, 338, 345, 356, 391, 404, 1338, 1339, 1342], "investig": 42, "maximum": [42, 60, 61, 107, 108, 137, 138, 139, 140, 149, 150, 155, 156, 167, 170, 171, 172, 173, 182, 183, 272, 273, 302, 303, 304, 305, 314, 315, 320, 321, 340, 357, 391, 394, 407, 417, 670, 694, 704, 1026, 1043, 1046, 1048, 1051, 1076, 1079, 1220, 1241, 1244, 1338, 1386, 1389, 1487, 1488, 1491, 1572, 1584, 1622, 1623, 1626, 1685, 1700, 1703, 1708, 1711, 1742, 1759], "incomplet": 42, "three": [42, 336, 340, 348, 350, 352, 353, 354, 497, 538, 541, 1742, 1753, 1758], "per": [42, 115, 116, 143, 144, 280, 281, 308, 309, 348, 350, 357, 407, 408, 409, 414, 415, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309], "self": [42, 44, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 342, 348, 349, 354, 356, 357, 358, 359, 670, 1742], "assign": [42, 335, 338, 343, 347, 356], "sequenc": [42, 121, 122, 125, 126, 149, 150, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 290, 291, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 338, 339, 340, 342, 350, 351, 354, 359, 370, 391, 404, 423, 428, 430, 435, 439, 441, 494, 495, 1026, 1152, 1219, 1338, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1572, 1579, 1588, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1755], "regist": 42, "wherea": [42, 334, 336, 338, 339, 340, 344, 345, 350, 351, 359, 1749], "primarili": [42, 336, 704, 965, 968, 1752], "invit": 42, "roadmap": [42, 337, 1742], "mainli": [42, 332, 355, 357, 1741, 1752], "extend": [42, 335, 341, 344, 348, 351, 371, 407, 417, 1749, 1752, 1758], "ideal": [42, 347, 357], "Such": [42, 350, 1338, 1450, 1454], "easier": [42, 334, 338, 348, 351, 1741, 1752, 1754], "interv": [42, 153, 154, 163, 164, 318, 319, 328, 329, 497, 499, 500, 532, 533, 535, 536, 1338, 1455, 1459, 1487, 1488, 1491, 1503, 1506, 1543, 1546, 1595, 1601, 1604, 1611, 1614, 1730, 1731, 1734, 1736, 1739], "forth": 42, "rare": [42, 339, 371, 1757], "scenario": 42, "someon": [42, 371], "someth": [42, 351, 357, 358, 371, 1758], "unfortun": 42, "redund": [42, 338, 342, 348, 352], "behind": [42, 139, 140, 332, 344, 350, 353, 355], "well": [42, 302, 303, 337, 338, 347, 348, 349, 350, 358, 359, 370, 1026, 1108, 1111, 1338, 1425, 1428, 1751, 1752, 1753, 1757], "practic": [42, 337, 1755], "separ": [42, 334, 336, 350, 354, 356, 357, 1753, 1757], "branch": [42, 333, 371, 494, 495, 704, 740, 743, 1752], "role": [42, 348, 355, 1753, 1755, 1759], "kept": [42, 167, 170, 171, 172, 173, 347, 351, 1568, 1569, 1570], "date": [42, 351], "upstream": [42, 333], "complic": [42, 349, 354], "merge_with_upstream": 42, "name_of_your_branch": 42, "resolv": [42, 333, 338, 354, 1487, 1503, 1506, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "abort": 42, "tediou": [42, 340], "resolut": [42, 579, 615, 618], "stash": 42, "reinstat": 42, "fetch": [42, 333], "uncommit": 42, "unstag": 42, "untrack": 42, "comprehens": [42, 333], "atlassian": 42, "tutori": [42, 348], "wrote": 42, "piec": [42, 334, 345, 346, 354, 1748, 1750], "tag": 42, "navig": [42, 332], "blame": 42, "revis": 42, "log": [42, 60, 61, 145, 146, 182, 183, 310, 311, 336, 337, 340, 345, 347, 348, 350, 352, 354, 357, 497, 535, 536, 704, 885, 888, 895, 898, 1338, 1420, 1423, 1742], "eg": 42, "16": [42, 44, 47, 48, 60, 61, 107, 108, 115, 116, 143, 144, 145, 146, 153, 154, 161, 162, 167, 172, 173, 178, 179, 182, 183, 280, 281, 302, 303, 308, 309, 314, 315, 318, 319, 340, 357, 391, 393, 407, 414, 415, 423, 424, 579, 626, 629, 704, 770, 773, 885, 888, 1005, 1009, 1220, 1260, 1272, 1306, 1309, 1318, 1321, 1338, 1339, 1342, 1359, 1362, 1405, 1408, 1435, 1439, 1487, 1558, 1562, 1572, 1580, 1622, 1643, 1647, 1685, 1691, 1694, 1696, 1699], "past": [42, 349, 1752], "l": [42, 145, 146, 182, 183, 310, 311, 332, 1338, 1339, 1342, 1364, 1367, 1368, 1370, 1381, 1384, 1445, 1449], "filepath": [42, 170, 171, 333], "grep": 42, "commit_id": 42, "handi": 42, "histori": 42, "toggl": 42, "vertic": [42, 423, 435], "highlight": [42, 340], "previou": [42, 139, 140, 304, 305, 333, 344, 348, 350, 352, 359, 371, 579, 665, 668, 1026, 1209, 1211, 1212, 1213, 1220, 1225, 1228, 1241, 1244, 1755], "whenev": [42, 337, 338, 342, 346, 350, 357], "think": [42, 340, 1753], "gain": [42, 333, 353, 358, 1752], "quit": [42, 334, 340, 341, 345, 346, 350, 352, 1752, 1758], "newli": [42, 56, 57, 178, 179, 347, 350, 494, 495, 579, 582, 585, 1026, 1042], "cannot": [42, 333, 335, 338, 348, 354, 359, 1758], "least": [42, 107, 108, 121, 122, 272, 273, 286, 287, 334, 338, 340, 345, 350, 391, 399, 423, 425, 1338, 1381, 1384], "approv": 42, "hash": [42, 357], "cancel": 42, "speedup": 42, "unavail": 42, "tickbox": 42, "lower": [42, 54, 55, 60, 61, 145, 146, 153, 154, 182, 183, 310, 311, 318, 319, 340, 348, 350, 352, 354, 371, 497, 518, 519, 561, 565, 704, 920, 923, 1338, 1339, 1342, 1595, 1611, 1614, 1741, 1748, 1749, 1750, 1752, 1753, 1758, 1759], "span": [42, 352, 1750, 1758], "intent": [42, 347], "larg": [42, 107, 108, 272, 273, 357, 391, 401, 704, 720, 723, 930, 933, 1752], "discourag": 42, "philosophi": 42, "increment": [42, 137, 138, 302, 303, 351, 1026, 1119, 1122, 1752], "valuabl": 42, "infrequ": 42, "earli": [42, 1742, 1752], "wast": 42, "spot": [42, 340, 345], "mistak": [42, 343], "propos": [42, 348, 352, 1752], "mountain": 42, "around": [42, 167, 170, 171, 172, 173, 334, 344, 345, 348, 351, 356, 371, 407, 417, 1741, 1750, 1752, 1759], "advoc": [42, 371], "style": [42, 407, 417, 1622, 1638, 1641, 1752], "were": [42, 170, 171, 178, 179, 338, 343, 350, 351, 352, 354, 1752, 1753, 1758], "actual": [42, 332, 345, 347, 350, 352, 353, 358, 371, 1753, 1758], "aim": [42, 333, 350, 353, 1750, 1752, 1755], "session": [42, 1752], "block": [42, 336, 342, 343, 345, 350, 353, 355, 359, 371, 419, 421, 670, 1220, 1253, 1271, 1741, 1742, 1757, 1759], "smaller": [42, 149, 150, 314, 315, 354, 1487, 1488, 1491, 1528, 1531, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "exact": [42, 168, 169, 170, 171, 333, 340, 354, 1648, 1649, 1653, 1659, 1663], "beauti": 42, "particularli": [42, 357, 371, 1750], "concern": [42, 332, 336, 340, 347, 352, 353, 1758], "difficult": [42, 333, 338, 350, 371, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "undo": 42, "stress": 42, "frequenc": [42, 137, 138, 302, 303, 337, 1026, 1076, 1079], "advantag": [42, 347, 348, 1752], "nifti": 42, "reassur": 42, "isol": [42, 1753, 1758], "fact": [42, 348, 350, 354, 357], "local_path_to_ivi": 42, "overwrit": [42, 170, 171, 347, 348, 354, 670, 694], "subfold": [42, 349, 350, 351], "wide": [42, 350, 1750, 1752], "via": [42, 333, 336, 338, 339, 347, 348, 351, 352, 354, 356, 357, 370, 1572, 1573, 1582, 1583, 1752], "dep": 42, "fresh": 42, "arsen": 42, "declar": 42, "exec": 42, "rf": 42, "cp": 42, "ivy_contain": 42, "test_imag": 42, "test_random_crop": 42, "test_creation_funct": 42, "test_arang": 42, "variou": [42, 333, 338, 341, 342, 344, 346, 349, 350, 370, 1741, 1748, 1750, 1751, 1752, 1755, 1758], "cpu": [42, 54, 55, 58, 59, 153, 154, 180, 181, 302, 303, 318, 319, 339, 348, 371, 439, 440, 442, 497, 526, 532, 533, 535, 536, 548, 551, 574, 578, 670, 675, 676, 679, 681, 686, 689, 691, 692, 695, 699, 700, 702, 703, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1750, 1752, 1755, 1757], "gpu": [42, 339, 356, 670, 675, 681, 685, 687, 689, 691, 692, 693, 700, 702, 703, 1750, 1752, 1755, 1756, 1757], "combin": [42, 167, 170, 171, 172, 173, 334, 336, 338, 340, 345, 350, 352, 359, 1026, 1081, 1082, 1338, 1344, 1347, 1381, 1384, 1752], "num": [42, 176, 177, 344, 354, 497, 532, 533, 535, 536], "integ": [42, 44, 47, 48, 60, 61, 125, 126, 149, 150, 153, 154, 161, 162, 163, 164, 167, 170, 171, 172, 173, 182, 183, 290, 291, 310, 311, 314, 315, 318, 319, 326, 327, 328, 329, 336, 338, 346, 349, 350, 354, 356, 391, 393, 407, 417, 439, 440, 441, 442, 497, 499, 500, 526, 579, 626, 629, 631, 643, 646, 654, 655, 658, 662, 704, 705, 708, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 825, 828, 830, 833, 915, 918, 950, 953, 965, 968, 970, 973, 1015, 1019, 1020, 1024, 1026, 1096, 1219, 1338, 1354, 1357, 1391, 1393, 1455, 1459, 1460, 1464, 1487, 1533, 1536, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1616, 1617, 1620, 1669, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "greater": [42, 44, 47, 48, 60, 61, 107, 108, 153, 154, 167, 172, 173, 182, 183, 318, 319, 349, 391, 404, 704, 710, 713, 725, 728, 740, 743, 760, 763, 770, 773, 825, 828, 830, 833, 950, 953, 965, 968, 975, 978, 1015, 1019, 1338, 1344, 1347, 1391, 1393, 1487, 1538, 1541, 1595, 1611, 1614], "prompt": [42, 1742], "whole": 42, "multipli": [42, 60, 61, 161, 162, 182, 183, 334, 335, 336, 340, 704, 720, 723, 1000, 1004, 1685, 1686, 1689], "cursor": 42, "alt": 42, "j": [42, 54, 55, 145, 146, 176, 177, 182, 183, 310, 311, 332, 497, 548, 551, 1026, 1034, 1036, 1338, 1445, 1449, 1685, 1696, 1699, 1748], "blog": 42, "breakpoint": 42, "gutter": 42, "caret": 42, "f8": 42, "f9": 42, "Into": 42, "f7": 42, "smart": 42, "interest": 42, "consol": [42, 350, 356, 1026, 1155], "store": [42, 56, 57, 137, 138, 139, 140, 145, 146, 149, 150, 170, 171, 178, 179, 302, 303, 304, 305, 310, 311, 314, 315, 334, 335, 336, 341, 348, 354, 356, 357, 358, 497, 574, 578, 1026, 1076, 1079, 1220, 1266, 1270, 1338, 1445, 1449, 1487, 1533, 1536, 1741], "variabl": [42, 137, 138, 139, 140, 151, 152, 170, 171, 302, 303, 304, 305, 316, 317, 335, 338, 341, 343, 344, 347, 350, 351, 354, 357, 358, 359, 371, 439, 441, 1026, 1037, 1040, 1124, 1127, 1129, 1130, 1133, 1136, 1139, 1146, 1149, 1186, 1190, 1220, 1225, 1228, 1229, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1260, 1266, 1270, 1272, 1328, 1331, 1338, 1425, 1428, 1568, 1569, 1570, 1571, 1590, 1591, 1594, 1742, 1753], "fragment": [42, 1748, 1750, 1754], "except": [42, 137, 138, 149, 150, 153, 154, 163, 164, 170, 171, 302, 303, 310, 311, 318, 319, 328, 329, 332, 333, 334, 338, 341, 343, 344, 347, 348, 352, 354, 356, 371, 439, 440, 579, 592, 595, 1026, 1037, 1040, 1055, 1057, 1124, 1127, 1167, 1186, 1190, 1208, 1210, 1338, 1410, 1413, 1487, 1493, 1496, 1503, 1506, 1543, 1546, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1638, 1641, 1730, 1731, 1734, 1736, 1739], "pychram": 42, "depth": [42, 54, 55, 176, 177, 357, 358, 359, 370, 497, 548, 551, 1026, 1106, 1572, 1584], "dummi": 42, "wherein": [42, 346, 350], "evalu": [42, 60, 61, 170, 171, 182, 183, 286, 287, 336, 338, 352, 423, 429, 704, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 935, 938, 975, 978, 995, 998, 1220, 1260, 1572, 1573, 1582, 1583, 1730, 1731, 1734, 1736, 1739, 1752], "failur": [42, 333, 337, 350], "arraywithactiv": [44, 45, 47, 48, 356], "arraywithcr": [44, 47, 48, 54, 356], "arraywithdatatyp": [44, 47, 48, 56, 356], "arraywithdevic": [44, 47, 48, 58, 356], "arraywithgener": [44, 47, 48, 137, 356], "arraywithgradi": [44, 47, 48, 139, 356], "arraywithimag": [44, 47, 48, 141, 356], "arraywithlay": [44, 47, 48, 143, 356], "arraywithlinalg": [44, 47, 48, 145, 356], "arraywithloss": [44, 47, 48, 147, 356], "arraywithmanipul": [44, 47, 48, 149, 356], "arraywithnorm": [44, 47, 48, 151, 356], "arraywithrandom": [44, 47, 48, 153, 356], "arraywithsearch": [44, 47, 48, 155, 356], "arraywithset": [44, 47, 48, 157, 356], "arraywithsort": [44, 47, 48, 159, 356], "arraywithstatist": [44, 47, 48, 161, 356], "arraywithutil": [44, 47, 48, 163, 356], "arraywithactivationsextens": [44, 47, 48, 63], "arraywithconversionsextens": [44, 47, 48, 99], "arraywithcreationextens": [44, 47, 48, 101], "arraywithdata_typeextens": [44, 47, 48, 103], "arraywithdeviceextens": [44, 47, 48, 105], "arraywithelementwiseextens": [44, 47, 48, 107], "arraywithgeneralextens": [44, 47, 48, 109], "arraywithgradientsextens": [44, 47, 48, 111], "arraywithimageextens": [44, 47, 48, 113], "arraywithlayersextens": [44, 47, 48, 115], "arraywithlinalgextens": [44, 47, 48, 117], "arraywithlossesextens": [44, 47, 48, 119], "arraywithmanipulationextens": [44, 47, 48, 121], "arraywithnormsextens": [44, 47, 48, 123], "arraywithrandomextens": [44, 47, 48, 125], "arraywithsearchingextens": [44, 47, 48, 127], "arraywithsetextens": [44, 47, 48, 129], "arraywithsortingextens": [44, 47, 48, 131], "arraywithstatisticalextens": [44, 47, 48, 133], "arraywithutilityextens": [44, 47, 48, 135], "properti": [44, 47, 48, 170, 171, 336, 340, 345, 349, 350, 356, 357, 358, 447, 1758], "transpos": [44, 47, 48, 145, 146, 170, 171, 310, 311, 347, 356, 359, 1272, 1273, 1279, 1282, 1289, 1291, 1298, 1301, 1303, 1304, 1338, 1400, 1403, 1410, 1413, 1742], "dimension": [44, 47, 48, 107, 108, 145, 146, 149, 150, 155, 156, 161, 162, 163, 164, 170, 171, 182, 183, 310, 311, 314, 315, 326, 327, 328, 329, 354, 387, 388, 391, 404, 419, 420, 423, 424, 497, 499, 500, 518, 519, 538, 541, 1338, 1344, 1347, 1349, 1352, 1371, 1374, 1381, 1384, 1395, 1398, 1405, 1408, 1410, 1413, 1455, 1459, 1460, 1464, 1487, 1533, 1536, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1749, 1752, 1759], "whose": [44, 47, 48, 54, 55, 60, 61, 107, 108, 121, 122, 137, 138, 145, 146, 149, 150, 157, 158, 176, 177, 182, 183, 272, 273, 286, 287, 302, 303, 310, 311, 314, 315, 322, 323, 326, 327, 341, 350, 423, 430, 497, 561, 565, 566, 570, 704, 715, 718, 730, 733, 745, 748, 785, 788, 790, 793, 795, 798, 950, 953, 955, 958, 980, 983, 985, 988, 1005, 1009, 1010, 1014, 1026, 1042, 1186, 1190, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1487, 1508, 1511, 1528, 1531, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1685, 1696, 1699], "dimens": [44, 47, 48, 54, 55, 107, 108, 115, 116, 121, 122, 133, 134, 137, 138, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 167, 170, 171, 172, 173, 176, 177, 272, 273, 280, 281, 286, 287, 298, 299, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 340, 342, 349, 350, 352, 354, 357, 391, 402, 407, 408, 409, 414, 415, 416, 423, 424, 433, 439, 441, 452, 453, 456, 469, 472, 484, 487, 497, 548, 551, 561, 565, 566, 570, 1026, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1100, 1103, 1219, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1323, 1326, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1455, 1459, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1558, 1562, 1568, 1569, 1570, 1571, 1595, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "ax": [44, 45, 46, 47, 48, 107, 108, 121, 122, 133, 134, 145, 146, 149, 150, 155, 156, 161, 162, 163, 164, 168, 169, 272, 273, 286, 287, 298, 299, 310, 311, 314, 315, 320, 321, 326, 327, 328, 329, 338, 340, 350, 351, 354, 356, 391, 402, 407, 417, 423, 430, 433, 452, 453, 670, 694, 1026, 1219, 1338, 1386, 1389, 1425, 1428, 1440, 1444, 1460, 1464, 1487, 1498, 1501, 1508, 1511, 1513, 1516, 1528, 1531, 1538, 1541, 1548, 1552, 1563, 1567, 1622, 1623, 1626, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "permut": [44, 47, 48, 1487, 1513, 1516, 1548, 1552], "__add__": [44, 47, 48, 167, 172, 173, 334, 336, 340, 341, 344, 348, 356], "variant": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 340, 341, 352], "wrap": [44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 350, 354, 356, 359, 371, 372, 382, 407, 417, 1026, 1042, 1220, 1266, 1270, 1741, 1748, 1752, 1753, 1758, 1759], "minim": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 117, 118, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 341, 347, 349, 352, 354, 1750, 1758], "input": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 131, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 336, 338, 339, 340, 341, 345, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 371, 372, 382, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 431, 433, 434, 439, 440, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 626, 629, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 662, 664, 670, 675, 676, 679, 688, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1032, 1034, 1036, 1037, 1040, 1043, 1046, 1048, 1051, 1055, 1057, 1058, 1061, 1063, 1066, 1068, 1071, 1073, 1075, 1076, 1079, 1083, 1086, 1088, 1091, 1099, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1156, 1159, 1161, 1164, 1166, 1170, 1174, 1176, 1179, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1209, 1211, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1260, 1261, 1265, 1266, 1270, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1578, 1579, 1580, 1583, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1753, 1756], "numer": [44, 47, 48, 56, 57, 60, 61, 137, 138, 145, 146, 153, 154, 155, 156, 167, 172, 173, 178, 179, 182, 183, 302, 303, 310, 311, 318, 319, 320, 321, 324, 325, 338, 346, 348, 349, 350, 351, 352, 354, 358, 439, 440, 497, 538, 541, 579, 582, 585, 704, 705, 708, 720, 723, 780, 783, 800, 803, 820, 823, 825, 828, 830, 833, 845, 848, 850, 853, 855, 858, 865, 868, 905, 908, 910, 913, 930, 933, 935, 938, 940, 943, 950, 953, 965, 968, 975, 978, 995, 998, 1000, 1004, 1015, 1019, 1020, 1024, 1026, 1097, 1098, 1168, 1169, 1176, 1179, 1181, 1184, 1338, 1344, 1347, 1371, 1374, 1381, 1384, 1405, 1408, 1430, 1434, 1440, 1444, 1445, 1449, 1455, 1459, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1685, 1700, 1703, 1712, 1715, 1720, 1724, 1749, 1752, 1758], "broadcast": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 336, 338, 340, 341, 350, 351, 354, 391, 393, 403, 407, 409, 416, 417, 419, 420, 421, 423, 433, 434, 439, 440, 442, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 582, 585, 587, 590, 592, 595, 670, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1083, 1086, 1088, 1091, 1156, 1159, 1161, 1164, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1425, 1428, 1435, 1439, 1440, 1444, 1445, 1449, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1563, 1567, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1643, 1647, 1648, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "element": [44, 45, 46, 47, 48, 54, 55, 60, 61, 107, 108, 121, 122, 133, 134, 137, 138, 145, 146, 149, 150, 153, 154, 155, 156, 157, 158, 161, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 182, 183, 272, 273, 282, 283, 286, 287, 298, 299, 302, 303, 310, 311, 314, 315, 318, 319, 320, 321, 322, 323, 326, 327, 341, 349, 350, 352, 354, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 423, 424, 425, 426, 427, 429, 434, 452, 453, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 499, 500, 509, 511, 526, 527, 530, 561, 565, 566, 570, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1034, 1036, 1043, 1046, 1048, 1051, 1083, 1086, 1198, 1202, 1203, 1207, 1220, 1253, 1271, 1272, 1311, 1314, 1338, 1344, 1347, 1354, 1357, 1364, 1367, 1381, 1384, 1415, 1418, 1430, 1434, 1487, 1488, 1491, 1508, 1511, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1572, 1575, 1595, 1596, 1599, 1622, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1756], "wise": [44, 45, 46, 47, 48, 60, 61, 107, 108, 121, 122, 145, 146, 167, 168, 169, 172, 173, 182, 183, 272, 273, 282, 283, 286, 287, 310, 311, 352, 391, 392, 394, 395, 396, 397, 398, 399, 400, 423, 427, 428, 429, 435, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 704, 705, 708, 710, 713, 720, 723, 725, 728, 735, 738, 740, 743, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 810, 813, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004, 1020, 1024, 1487, 1488, 1491], "sum": [44, 47, 48, 60, 61, 107, 108, 137, 138, 145, 146, 147, 148, 161, 162, 167, 170, 171, 172, 173, 182, 183, 272, 273, 302, 303, 310, 311, 312, 313, 326, 327, 336, 338, 345, 347, 354, 391, 402, 670, 694, 704, 720, 723, 895, 898, 1026, 1063, 1066, 1156, 1159, 1161, 1164, 1272, 1333, 1336, 1338, 1386, 1389, 1430, 1434, 1445, 1449, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1685, 1691, 1694, 1696, 1699], "promot": [44, 47, 48, 56, 57, 60, 61, 107, 108, 145, 146, 167, 172, 173, 178, 179, 182, 183, 272, 273, 310, 311, 324, 325, 333, 341, 342, 345, 391, 393, 403, 579, 582, 585, 597, 600, 653, 654, 655, 658, 664, 704, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 745, 748, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 785, 788, 790, 793, 800, 803, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 915, 918, 930, 933, 950, 953, 965, 968, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1020, 1024, 1338, 1339, 1342, 1344, 1347, 1371, 1374, 1376, 1379, 1381, 1384, 1391, 1393, 1395, 1398, 1405, 1408, 1410, 1413, 1425, 1428, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1543, 1546, 1685, 1704, 1707, 1716, 1719], "y": [44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 282, 283, 286, 287, 296, 297, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 335, 336, 340, 348, 349, 351, 352, 354, 356, 391, 403, 404, 407, 417, 423, 428, 434, 435, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 509, 511, 527, 530, 538, 541, 553, 554, 556, 559, 574, 578, 579, 582, 585, 587, 590, 592, 595, 610, 612, 615, 618, 626, 629, 655, 658, 670, 676, 679, 684, 688, 689, 690, 693, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 955, 958, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1043, 1046, 1048, 1051, 1055, 1057, 1073, 1075, 1083, 1086, 1088, 1091, 1105, 1108, 1111, 1114, 1117, 1119, 1122, 1168, 1169, 1171, 1173, 1174, 1176, 1179, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1208, 1212, 1214, 1218, 1219, 1220, 1254, 1258, 1261, 1265, 1272, 1298, 1301, 1306, 1309, 1318, 1321, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1376, 1379, 1381, 1384, 1386, 1389, 1400, 1403, 1405, 1408, 1410, 1413, 1420, 1423, 1435, 1439, 1440, 1444, 1445, 1449, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1572, 1575, 1578, 1579, 1588, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1654, 1658, 1659, 1663, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "z": [44, 47, 48, 60, 61, 137, 138, 145, 146, 147, 148, 153, 154, 167, 172, 173, 182, 183, 302, 303, 310, 311, 312, 313, 318, 319, 335, 336, 340, 354, 356, 670, 684, 704, 720, 723, 740, 743, 750, 753, 765, 768, 775, 778, 835, 838, 840, 843, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 895, 898, 910, 913, 915, 918, 920, 923, 925, 928, 1000, 1004, 1026, 1034, 1036, 1083, 1086, 1088, 1091, 1114, 1117, 1119, 1122, 1161, 1164, 1174, 1176, 1179, 1208, 1219, 1338, 1344, 1347, 1381, 1384, 1471, 1472, 1475, 1477, 1480, 1487, 1488, 1491, 1572, 1575, 1579, 1588, 1595, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1685, 1696, 1699, 1700, 1703, 1708, 1711, 1712, 1715], "__le__": [44, 47, 48], "equal": [44, 47, 48, 54, 55, 56, 57, 60, 61, 137, 138, 145, 146, 149, 150, 153, 154, 159, 160, 161, 162, 167, 170, 171, 172, 173, 178, 179, 182, 183, 302, 303, 310, 311, 314, 315, 318, 319, 324, 325, 336, 338, 340, 342, 497, 518, 519, 526, 527, 530, 579, 582, 585, 704, 760, 763, 770, 773, 845, 848, 850, 853, 950, 953, 970, 973, 1026, 1027, 1030, 1034, 1036, 1219, 1338, 1359, 1362, 1391, 1393, 1395, 1398, 1410, 1413, 1487, 1488, 1491, 1498, 1501, 1533, 1536, 1563, 1567, 1595, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1704, 1707, 1716, 1719, 1720, 1724, 1725, 1729], "bool": [44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 107, 108, 121, 122, 133, 134, 137, 138, 139, 140, 145, 146, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 338, 340, 342, 347, 348, 350, 351, 354, 359, 391, 397, 398, 401, 402, 407, 410, 411, 412, 413, 423, 434, 452, 453, 494, 495, 497, 502, 504, 526, 532, 533, 538, 541, 579, 582, 585, 597, 600, 602, 604, 605, 606, 608, 609, 610, 612, 620, 621, 623, 624, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 660, 665, 669, 670, 675, 676, 679, 685, 686, 689, 690, 694, 701, 703, 704, 750, 753, 755, 758, 765, 768, 775, 778, 805, 808, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 900, 903, 905, 908, 910, 913, 920, 923, 925, 928, 940, 943, 965, 968, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1055, 1057, 1073, 1075, 1076, 1079, 1094, 1095, 1099, 1100, 1103, 1108, 1111, 1124, 1127, 1130, 1133, 1135, 1136, 1139, 1141, 1144, 1146, 1149, 1151, 1152, 1174, 1175, 1186, 1190, 1198, 1202, 1214, 1218, 1220, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1271, 1272, 1311, 1314, 1338, 1339, 1342, 1386, 1389, 1430, 1434, 1450, 1454, 1460, 1464, 1487, 1523, 1526, 1533, 1536, 1558, 1562, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1578, 1582, 1583, 1584, 1595, 1596, 1599, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "__radd__": [44, 47, 48, 167, 172, 173, 340, 341, 348], "__rrshift__": [44, 47, 48, 167, 172, 173], "bitwise_right_shift": [44, 47, 48, 60, 61, 182, 183, 704], "32": [44, 47, 48, 60, 61, 107, 108, 115, 116, 153, 154, 167, 172, 173, 182, 183, 272, 273, 318, 319, 357, 391, 392, 407, 408, 409, 456, 464, 467, 579, 614, 704, 715, 718, 770, 773, 1026, 1119, 1122, 1272, 1298, 1301, 1306, 1309, 1318, 1321, 1338, 1381, 1384, 1405, 1408, 1595, 1611, 1614, 1622, 1643, 1647, 1685, 1696, 1699, 1757], "__rshift__": [44, 47, 48, 167, 172, 173], "__rsub__": [44, 47, 48, 167, 172, 173], "subtract": [44, 47, 48, 60, 61, 167, 172, 173, 182, 183, 334, 336, 340, 407, 417, 704], "__sub__": [44, 47, 48, 167, 172, 173, 334, 336, 340, 344, 356], "nativearrai": [44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 121, 122, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 296, 297, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 334, 336, 340, 342, 343, 344, 345, 346, 347, 348, 351, 354, 356, 372, 382, 391, 394, 395, 396, 399, 400, 401, 402, 403, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 456, 458, 461, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 497, 502, 504, 509, 511, 513, 516, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 556, 559, 561, 565, 566, 570, 574, 578, 579, 582, 585, 587, 590, 592, 595, 597, 600, 610, 612, 615, 618, 626, 629, 633, 636, 638, 641, 643, 646, 648, 651, 654, 655, 658, 664, 670, 675, 676, 679, 688, 694, 695, 699, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1136, 1139, 1146, 1149, 1156, 1159, 1161, 1164, 1166, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1192, 1196, 1198, 1202, 1203, 1207, 1209, 1214, 1218, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1261, 1265, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1572, 1574, 1575, 1579, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741], "resid": [44, 47, 48, 348, 354, 358, 1487, 1503, 1506], "mt": [44, 47, 48, 356], "matric": [44, 47, 48, 54, 55, 145, 146, 310, 311, 370, 497, 538, 541, 561, 565, 566, 570, 1272, 1318, 1321, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1752], "n": [44, 47, 48, 54, 55, 107, 108, 125, 126, 145, 146, 149, 150, 153, 154, 155, 156, 161, 162, 163, 164, 182, 183, 310, 311, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 332, 350, 387, 388, 391, 404, 439, 440, 441, 497, 538, 541, 561, 565, 566, 570, 1272, 1311, 1314, 1338, 1359, 1362, 1371, 1374, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1430, 1434, 1435, 1439, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1487, 1498, 1501, 1503, 1506, 1513, 1516, 1543, 1546, 1563, 1567, 1572, 1580, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1638, 1641, 1685, 1704, 1707, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "ndim": [44, 47, 48, 155, 156, 320, 321, 336, 350, 1026, 1219, 1338, 1415, 1418, 1430, 1434, 1622, 1638, 1641], "int": [44, 45, 46, 47, 48, 54, 55, 56, 57, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 168, 169, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 336, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 354, 359, 387, 388, 391, 396, 401, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 430, 433, 434, 439, 440, 441, 442, 452, 453, 456, 469, 472, 484, 487, 489, 492, 494, 495, 497, 502, 504, 518, 519, 526, 527, 530, 532, 533, 535, 536, 548, 551, 561, 565, 566, 570, 579, 592, 595, 608, 614, 615, 618, 626, 629, 643, 646, 670, 686, 687, 688, 694, 695, 699, 704, 720, 723, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 1000, 1004, 1026, 1032, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1083, 1086, 1100, 1103, 1156, 1159, 1176, 1179, 1219, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1338, 1344, 1347, 1354, 1357, 1359, 1362, 1386, 1389, 1391, 1393, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1471, 1477, 1480, 1482, 1485, 1487, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1575, 1578, 1579, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1616, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1669, 1670, 1673, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "size": [44, 47, 48, 107, 108, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 137, 138, 145, 146, 149, 150, 153, 154, 155, 156, 167, 170, 171, 172, 173, 272, 273, 280, 281, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 310, 311, 314, 315, 318, 319, 320, 321, 349, 350, 357, 391, 402, 407, 408, 411, 414, 415, 418, 423, 434, 439, 441, 445, 446, 452, 453, 497, 532, 533, 535, 536, 670, 692, 693, 694, 1026, 1156, 1159, 1272, 1333, 1336, 1338, 1359, 1362, 1371, 1374, 1386, 1389, 1405, 1408, 1415, 1418, 1430, 1434, 1455, 1459, 1487, 1503, 1506, 1528, 1531, 1533, 1536, 1538, 1541, 1595, 1596, 1599, 1622, 1623, 1626, 1638, 1641, 1730, 1731, 1734, 1736, 1739], "overview": [44, 167, 350, 353, 370, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "forum": [44, 167, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 456, 494, 496, 497, 579, 670, 704, 1025, 1026, 1220, 1272, 1470, 1471, 1487, 1568, 1572, 1590, 1595, 1622, 1669, 1685, 1730, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1761, 1764, 1766, 1776, 1788, 1791, 1793, 1799], "abc": [45, 46, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 356, 670, 671, 1026, 1073, 1075, 1572, 1589], "gelu": [45, 46, 168, 169, 456], "approxim": [45, 46, 107, 108, 145, 146, 168, 169, 182, 183, 310, 311, 341, 348, 391, 403, 404, 456, 458, 461, 704, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 815, 818, 820, 823, 875, 878, 880, 883, 885, 888, 890, 893, 950, 953, 980, 983, 985, 988, 1005, 1009, 1010, 1014, 1338, 1395, 1398, 1410, 1413], "185": [45, 46, 168, 169], "046": [45, 46, 168, 169], "leaky_relu": [45, 46, 168, 169, 349, 456, 1742], "alpha": [45, 46, 60, 61, 125, 126, 153, 154, 168, 169, 182, 183, 280, 281, 290, 291, 318, 319, 348, 349, 407, 410, 439, 440, 441, 442, 456, 464, 467, 704, 720, 723, 1000, 1004], "39": [45, 46, 60, 61, 115, 116, 153, 154, 168, 169, 182, 183, 304, 305, 318, 319, 407, 408, 416, 456, 464, 467, 704, 730, 733, 815, 818, 875, 878, 885, 888, 895, 898, 1220, 1221, 1224, 1338, 1405, 1408, 1595, 1606, 1609, 1685, 1696, 1699], "85": [45, 46, 153, 154, 168, 169, 182, 183, 304, 305, 308, 309, 318, 319, 456, 464, 467, 704, 770, 773, 775, 778, 955, 958, 1026, 1176, 1179, 1220, 1231, 1234, 1272, 1318, 1321, 1595, 1611, 1614], "17": [45, 46, 115, 116, 167, 168, 169, 172, 173, 182, 183, 280, 281, 302, 303, 304, 305, 308, 309, 318, 319, 336, 340, 407, 414, 415, 423, 424, 456, 464, 467, 704, 800, 803, 895, 898, 1026, 1119, 1122, 1220, 1221, 1224, 1272, 1318, 1321, 1338, 1359, 1362, 1435, 1439, 1572, 1580, 1595, 1611, 1614, 1617, 1620], "log_softmax": [45, 46, 168, 169, 456], "98": [45, 46, 139, 140, 153, 154, 168, 169, 182, 183, 304, 305, 318, 319, 456, 469, 472, 704, 775, 778, 1220, 1231, 1234, 1338, 1405, 1408, 1572, 1574, 1622, 1643, 1647, 1685, 1696, 1699], "37": [45, 46, 60, 61, 168, 169, 182, 183, 280, 281, 704, 730, 733, 770, 773, 1005, 1009, 1272, 1318, 1321, 1572, 1580, 1595, 1606, 1609], "35": [45, 46, 143, 144, 168, 169, 182, 183, 280, 281, 308, 309, 310, 311, 318, 319, 704, 740, 743, 990, 993, 1272, 1318, 1321, 1333, 1336, 1338, 1344, 1347, 1622, 1643, 1647, 1685, 1696, 1699], "0719": [45, 46, 168, 169], "62": [45, 46, 168, 169, 272, 273, 316, 317, 318, 319, 704, 985, 988, 1590, 1591, 1594, 1595, 1611, 1614], "221": [45, 46], "82": [45, 46, 60, 61, 304, 305, 318, 319, 1220, 1221, 1224], "relu": [45, 46, 165, 166, 168, 169, 349, 357, 358, 456, 464, 467, 1742], "sigmoid": [45, 46, 168, 169, 354, 357, 358, 456, 457, 463, 1742], "269": [45, 46, 168, 169, 456, 479, 482], "731": [45, 46, 168, 169, 456, 479, 482], "881": [45, 46, 60, 61, 168, 169, 182, 183, 456, 479, 482, 704, 730, 733, 795, 798], "softmax": [45, 46, 165, 166, 168, 169, 456, 1272, 1328, 1331, 1333, 1336, 1742], "union": [45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 107, 108, 115, 116, 121, 122, 125, 126, 133, 134, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 338, 339, 340, 342, 343, 344, 345, 347, 348, 351, 352, 354, 359, 387, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 433, 434, 439, 440, 441, 442, 445, 446, 452, 453, 456, 457, 458, 461, 463, 464, 467, 469, 472, 474, 477, 479, 482, 484, 487, 489, 492, 494, 495, 497, 499, 500, 502, 504, 509, 511, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 580, 581, 582, 585, 587, 590, 592, 595, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 655, 658, 660, 661, 662, 663, 664, 669, 670, 672, 673, 674, 675, 676, 679, 681, 684, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1027, 1030, 1034, 1036, 1037, 1040, 1043, 1046, 1048, 1051, 1058, 1061, 1063, 1066, 1068, 1071, 1076, 1079, 1083, 1086, 1088, 1091, 1096, 1100, 1103, 1108, 1111, 1114, 1117, 1119, 1122, 1124, 1127, 1136, 1139, 1146, 1149, 1152, 1156, 1159, 1161, 1164, 1174, 1176, 1179, 1181, 1184, 1186, 1190, 1191, 1192, 1196, 1197, 1198, 1202, 1203, 1207, 1214, 1218, 1219, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1235, 1238, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1261, 1265, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1311, 1314, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1371, 1374, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1445, 1449, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1579, 1583, 1584, 1588, 1589, 1590, 1591, 1594, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1675, 1678, 1680, 1683, 1685, 1686, 1689, 1691, 1694, 1696, 1699, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "422": [45, 46, 168, 169, 456, 484, 487], "155": [45, 46, 168, 169, 308, 309, 456, 484, 487, 1272, 1318, 1321], "softplu": [45, 46, 168, 169, 352, 456, 1742], "beta": [45, 46, 151, 152, 153, 154, 168, 169, 280, 281, 316, 317, 318, 319, 352, 407, 410, 412, 413, 439, 441, 442, 456, 489, 492, 1590, 1591, 1594], "threshold": [45, 46, 60, 61, 168, 169, 182, 183, 352, 456, 489, 492, 704, 920, 923, 925, 928], "3461": [45, 46, 168, 169, 456, 489, 492], "6491": [45, 46, 168, 169, 456, 489, 492], "22": [45, 46, 60, 61, 115, 116, 137, 138, 153, 154, 161, 162, 168, 169, 280, 281, 302, 303, 308, 309, 318, 319, 336, 407, 414, 415, 416, 456, 489, 492, 704, 775, 778, 1272, 1318, 1321, 1338, 1359, 1362, 1376, 1379, 1405, 1408, 1572, 1580, 1589, 1622, 1643, 1647, 1685, 1696, 1699], "09": [45, 46, 304, 305, 318, 319, 456, 489, 492, 704, 885, 888, 995, 998, 1220, 1221, 1224, 1272, 1333, 1336], "31": [45, 46, 60, 61, 115, 116, 182, 183, 302, 303, 308, 309, 318, 319, 357, 407, 409, 456, 469, 472, 489, 492, 704, 770, 773, 895, 898, 990, 993, 1026, 1043, 1046, 1338, 1435, 1439], "55": [45, 46, 318, 319, 704, 770, 773, 1026, 1114, 1117, 1338, 1376, 1379, 1405, 1408, 1435, 1439, 1595, 1606, 1609, 1685, 1696, 1699], "13": [45, 46, 60, 61, 115, 116, 143, 144, 153, 154, 161, 162, 182, 183, 272, 273, 280, 281, 302, 303, 304, 305, 308, 309, 314, 315, 318, 319, 326, 327, 336, 340, 350, 423, 424, 456, 489, 492, 579, 626, 629, 670, 681, 704, 750, 753, 775, 778, 790, 793, 820, 823, 830, 833, 990, 993, 1026, 1043, 1046, 1048, 1051, 1063, 1066, 1119, 1122, 1169, 1176, 1179, 1220, 1221, 1224, 1272, 1318, 1321, 1333, 1336, 1338, 1359, 1362, 1405, 1408, 1435, 1439, 1487, 1558, 1562, 1622, 1643, 1647, 1648, 1649, 1653, 1685, 1686, 1689, 1691, 1694, 1696, 1699], "collect": [49, 170, 171, 174, 342, 349, 350, 370, 456, 494, 670, 1026, 1220, 1272, 1471, 1572, 1585, 1590, 1595, 1750, 1752, 1755], "args_to_ivi": 49, "include_deriv": [49, 50, 51, 52, 53, 174, 175, 1572, 1574, 1584], "nest": [49, 50, 51, 52, 53, 167, 170, 171, 172, 173, 174, 175, 334, 336, 345, 351, 357, 358, 371, 1026, 1192, 1196, 1219, 1220, 1253, 1259, 1271, 1568, 1569, 1570, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1741, 1752], "unchang": [49, 50, 51, 52, 53, 423, 424], "deriv": [49, 50, 51, 52, 53, 54, 55, 139, 140, 174, 175, 176, 177, 280, 281, 304, 305, 338, 339, 356, 358, 407, 412, 497, 513, 516, 527, 530, 556, 559, 574, 578, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1572, 1574, 1584], "tupl": [49, 50, 51, 52, 53, 54, 55, 56, 57, 107, 108, 115, 116, 121, 122, 125, 126, 133, 134, 137, 138, 143, 144, 145, 146, 149, 150, 155, 156, 157, 158, 161, 162, 163, 164, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 280, 281, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 338, 343, 344, 349, 350, 354, 357, 358, 371, 387, 388, 391, 392, 393, 396, 397, 398, 400, 402, 407, 408, 409, 414, 415, 416, 417, 423, 432, 433, 434, 439, 441, 445, 446, 452, 453, 497, 502, 504, 543, 546, 579, 592, 595, 620, 621, 623, 624, 654, 664, 670, 675, 682, 683, 1026, 1076, 1079, 1219, 1220, 1221, 1224, 1241, 1244, 1272, 1284, 1287, 1289, 1291, 1298, 1301, 1303, 1304, 1306, 1309, 1323, 1326, 1338, 1364, 1367, 1386, 1389, 1395, 1398, 1410, 1413, 1415, 1418, 1420, 1423, 1430, 1434, 1440, 1444, 1460, 1464, 1487, 1493, 1496, 1498, 1501, 1513, 1516, 1528, 1531, 1543, 1546, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1574, 1575, 1577, 1580, 1581, 1583, 1584, 1586, 1587, 1588, 1589, 1622, 1638, 1641, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1685, 1700, 1703, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "kei": [49, 50, 51, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 343, 349, 350, 357, 1026, 1032, 1053, 1272, 1328, 1331, 1333, 1336, 1568, 1569, 1570, 1572, 1575, 1581, 1585, 1752, 1755, 1759], "word": [49, 50, 51, 336, 348, 497, 499, 500, 1595, 1611, 1614, 1741], "args_to_n": [49, 347], "cont_inplac": [49, 51, 53], "ignore_frontend_arrai": [49, 51], "to_ivi": [49, 174, 175, 1572, 1585], "leaf": [49, 52, 170, 171, 326, 327, 336, 345, 357, 1572, 1573, 1582, 1583], "travers": [49, 52, 53, 174, 175, 336, 338, 354, 1572, 1584], "lowest": [49, 52, 53, 153, 154, 174, 175, 318, 319, 345, 371, 1572, 1584, 1595, 1601, 1604, 1741, 1749, 1753, 1757], "to_n": [49, 174, 175, 354], "asarrai": [54, 55, 137, 138, 302, 303, 346, 347, 497, 1026, 1100, 1103, 1176, 1179, 1272, 1274, 1277, 1648, 1654, 1658], "boolean": [54, 55, 56, 57, 60, 61, 107, 108, 137, 138, 139, 140, 149, 150, 155, 156, 170, 171, 178, 179, 182, 183, 272, 273, 302, 303, 304, 305, 314, 315, 320, 321, 336, 348, 349, 350, 352, 391, 397, 398, 497, 502, 504, 526, 579, 582, 585, 632, 669, 670, 685, 701, 704, 750, 753, 755, 758, 765, 768, 775, 778, 900, 903, 905, 908, 910, 913, 915, 918, 1026, 1027, 1030, 1034, 1036, 1096, 1108, 1111, 1113, 1129, 1130, 1133, 1136, 1139, 1141, 1144, 1146, 1149, 1166, 1167, 1170, 1172, 1214, 1218, 1220, 1235, 1238, 1253, 1271, 1487, 1523, 1526, 1568, 1569, 1570, 1572, 1582, 1685, 1708, 1711], "nativedtyp": [54, 55, 56, 57, 107, 108, 125, 126, 153, 154, 155, 156, 161, 162, 176, 177, 272, 273, 280, 281, 290, 291, 318, 319, 320, 321, 326, 327, 338, 339, 344, 348, 351, 354, 391, 402, 407, 411, 412, 418, 439, 440, 441, 442, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 553, 554, 556, 559, 571, 573, 574, 578, 579, 581, 582, 585, 603, 604, 605, 606, 608, 609, 610, 612, 614, 631, 632, 653, 660, 669, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1623, 1626, 1628, 1631, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "datatyp": [54, 55, 170, 171, 497, 527, 530, 543, 546, 579, 603, 653, 660], "nativedevic": [54, 55, 58, 59, 153, 154, 176, 177, 180, 181, 318, 319, 338, 339, 342, 344, 351, 387, 388, 439, 440, 442, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 526, 527, 530, 532, 533, 535, 536, 543, 546, 548, 551, 553, 554, 556, 559, 571, 573, 574, 578, 670, 673, 674, 675, 676, 679, 681, 684, 688, 689, 690, 691, 692, 693, 694, 695, 699, 700, 703, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614], "interpret": [54, 55, 337, 497, 502, 504, 543, 546, 1753], "copy_arrai": [54, 55, 497], "empty_lik": [54, 55, 176, 177, 352, 497], "deafult": [54, 55, 155, 156, 320, 321, 497, 513, 516, 1622, 1623, 1626], "uniniti": [54, 55, 497, 512, 513, 516], "from_dlpack": [54, 55, 176, 177, 497], "full_lik": [54, 55, 176, 177, 351, 497], "float": [54, 55, 56, 57, 60, 61, 107, 108, 125, 126, 137, 138, 139, 140, 145, 146, 147, 148, 151, 152, 153, 154, 161, 162, 168, 169, 176, 177, 178, 179, 182, 183, 272, 273, 280, 281, 290, 291, 302, 303, 304, 305, 310, 311, 312, 313, 316, 317, 318, 319, 326, 327, 333, 336, 338, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 354, 356, 358, 391, 392, 393, 397, 398, 400, 401, 403, 404, 407, 410, 411, 412, 413, 439, 440, 441, 442, 456, 464, 467, 489, 492, 496, 497, 499, 500, 502, 504, 512, 518, 519, 526, 527, 530, 532, 533, 535, 536, 553, 554, 571, 573, 579, 582, 585, 602, 605, 606, 615, 618, 631, 638, 641, 654, 655, 658, 670, 681, 689, 692, 693, 700, 703, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 960, 963, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1026, 1042, 1043, 1046, 1048, 1051, 1076, 1079, 1097, 1098, 1105, 1108, 1111, 1168, 1169, 1171, 1176, 1179, 1181, 1184, 1214, 1218, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1311, 1314, 1333, 1336, 1338, 1339, 1342, 1349, 1352, 1364, 1367, 1368, 1370, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1460, 1464, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1568, 1569, 1570, 1571, 1572, 1578, 1590, 1591, 1594, 1595, 1606, 1609, 1611, 1614, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1686, 1689, 1691, 1694, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729], "scalar": [54, 55, 60, 61, 107, 108, 121, 122, 137, 138, 168, 169, 176, 177, 182, 183, 302, 303, 310, 311, 338, 371, 391, 392, 393, 423, 427, 497, 527, 530, 548, 551, 704, 720, 723, 1000, 1004, 1026, 1203, 1207, 1214, 1218, 1338, 1460, 1464, 1752], "fill": [54, 55, 107, 108, 153, 154, 155, 156, 170, 171, 176, 177, 272, 273, 318, 319, 320, 321, 349, 391, 401, 439, 440, 442, 497, 512, 526, 527, 530, 548, 551, 553, 554, 556, 559, 571, 573, 574, 578, 1595, 1601, 1604, 1622, 1638, 1641], "000123": [54, 55, 497, 527, 530], "ones": [54, 55, 139, 140, 153, 154, 170, 171, 176, 177, 318, 319, 340, 344, 350, 356, 357, 497, 518, 519, 527, 530, 548, 551, 556, 559, 574, 578, 704, 780, 783, 1220, 1221, 1224, 1742, 1752], "meshgrid": [54, 55, 176, 177, 497], "spars": [54, 55, 147, 148, 176, 177, 312, 313, 497, 538, 541, 1471, 1482, 1485], "xy": [54, 55, 176, 177, 497, 538, 541], "one_hot": [54, 55, 176, 177, 359, 497, 1742], "on_valu": [54, 55, 176, 177, 497, 535, 536, 548, 551], "off_valu": [54, 55, 176, 177, 497, 535, 536, 548, 551], "scatter": [54, 55, 137, 138, 176, 177, 302, 303, 352, 497, 548, 551, 1026, 1156, 1159, 1161, 1164, 1759], "hot": [54, 55, 176, 177, 497, 548, 551], "float32": [54, 55, 56, 57, 143, 144, 176, 177, 178, 179, 302, 303, 308, 309, 326, 327, 338, 340, 350, 391, 393, 407, 418, 497, 535, 536, 574, 578, 579, 580, 581, 605, 606, 610, 612, 614, 615, 618, 620, 621, 631, 638, 641, 643, 646, 704, 885, 888, 1026, 1198, 1202, 1272, 1284, 1287], "cuda": [54, 55, 153, 154, 302, 303, 318, 319, 354, 371, 439, 440, 442, 497, 532, 533, 535, 536, 548, 551, 670, 672, 674, 691, 692, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1741, 1757], "unless": [54, 55, 107, 108, 145, 146, 176, 177, 272, 273, 335, 339, 347, 371, 391, 402, 497, 548, 551, 704, 930, 933, 1338, 1395, 1398], "overrid": [54, 55, 176, 177, 497, 548, 551], "ones_lik": [54, 55, 176, 177, 335, 359, 497, 1742], "tril": [54, 55, 176, 177, 497], "k": [54, 55, 117, 118, 121, 122, 125, 126, 143, 144, 145, 146, 153, 154, 176, 177, 182, 183, 266, 267, 282, 283, 286, 287, 290, 291, 308, 309, 310, 311, 318, 319, 332, 333, 348, 354, 387, 388, 419, 420, 423, 433, 434, 439, 440, 441, 497, 518, 519, 561, 565, 566, 570, 1026, 1034, 1036, 1272, 1333, 1336, 1338, 1354, 1357, 1381, 1384, 1386, 1389, 1415, 1418, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449, 1572, 1580, 1595, 1601, 1604, 1606, 1609, 1611, 1614, 1622, 1638, 1641, 1748, 1752], "innermost": [54, 55, 145, 146, 310, 311, 497, 561, 565, 566, 570, 1338, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1445, 1449], "mxn": [54, 55, 145, 146, 310, 311, 497, 561, 565, 566, 570, 1338, 1359, 1362, 1386, 1389, 1395, 1398, 1400, 1403, 1410, 1413, 1415, 1418, 1435, 1439, 1445, 1449], "diagon": [54, 55, 145, 146, 310, 311, 387, 388, 419, 420, 497, 518, 519, 561, 565, 566, 570, 1338, 1354, 1357, 1445, 1449], "triangular": [54, 55, 145, 146, 310, 311, 387, 388, 497, 561, 565, 566, 570, 1338, 1339, 1342, 1415, 1418], "triu": [54, 55, 176, 177, 497], "upper": [54, 55, 145, 146, 153, 154, 310, 311, 318, 319, 347, 350, 387, 388, 497, 518, 519, 566, 570, 1338, 1339, 1342, 1415, 1418, 1595, 1611, 1614], "zeros_lik": [54, 55, 176, 177, 348, 352, 497, 579, 582, 585, 704, 910, 913, 1220, 1221, 1224, 1231, 1234, 1241, 1244, 1249, 1252, 1272, 1306, 1309, 1487, 1488, 1491, 1742], "creation": [55, 102, 167, 170, 171, 172, 173, 177, 267, 338, 339, 342, 344, 346, 349, 350, 351, 354, 388, 498, 499, 500, 502, 504, 506, 507, 508, 509, 511, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 543, 546, 548, 551, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 1752, 1754, 1758], "data_typ": [56, 57, 103, 104, 178, 179, 268, 269, 338, 350, 351, 579, 580, 581, 582, 585, 587, 590, 592, 595, 597, 600, 602, 603, 604, 605, 606, 608, 609, 610, 612, 614, 615, 618, 620, 621, 623, 624, 626, 629, 631, 632, 633, 636, 638, 641, 643, 646, 648, 651, 653, 654, 655, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669], "astyp": [56, 57, 143, 144, 178, 179, 308, 309, 338, 347, 348, 352, 579, 1272, 1284, 1287], "irrespect": [56, 57, 178, 179, 336, 347, 356, 579, 582, 585, 1338, 1430, 1434, 1759], "rule": [56, 57, 107, 108, 145, 146, 178, 179, 182, 183, 310, 311, 333, 334, 336, 338, 340, 343, 344, 345, 350, 352, 391, 404, 579, 582, 585, 597, 600, 653, 654, 655, 658, 704, 745, 748, 800, 803, 930, 933, 965, 968, 1020, 1024, 1338, 1339, 1342, 1344, 1347, 1371, 1374, 1391, 1393, 1405, 1408, 1425, 1428, 1487, 1493, 1496, 1753], "cast": [56, 57, 107, 108, 178, 179, 272, 273, 338, 345, 349, 354, 391, 401, 579, 582, 585, 597, 600, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1742], "nan": [56, 57, 60, 61, 107, 108, 137, 138, 161, 162, 178, 179, 182, 183, 272, 273, 302, 303, 333, 338, 341, 350, 351, 391, 394, 395, 401, 402, 403, 496, 579, 582, 585, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 780, 783, 785, 788, 790, 793, 795, 798, 815, 818, 820, 823, 825, 828, 845, 848, 855, 858, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 930, 933, 950, 953, 955, 958, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1108, 1111, 1214, 1218, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "infin": [56, 57, 60, 61, 107, 108, 137, 138, 178, 179, 182, 183, 272, 273, 310, 311, 333, 341, 391, 397, 398, 401, 403, 496, 579, 582, 585, 704, 705, 708, 715, 718, 720, 723, 730, 733, 735, 738, 740, 743, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 830, 833, 845, 848, 850, 853, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 905, 908, 930, 933, 950, 953, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1108, 1111, 1338, 1460, 1464, 1685, 1700, 1703, 1708, 1711, 1730, 1731, 1734, 1736, 1739], "non": [56, 57, 107, 108, 145, 146, 153, 154, 155, 156, 161, 162, 163, 164, 178, 179, 272, 273, 310, 311, 318, 319, 320, 321, 326, 327, 328, 329, 336, 338, 340, 346, 354, 391, 394, 401, 494, 495, 579, 582, 585, 632, 654, 704, 905, 908, 910, 913, 1338, 1349, 1352, 1386, 1389, 1395, 1398, 1430, 1434, 1440, 1444, 1455, 1459, 1460, 1464, 1595, 1606, 1609, 1622, 1623, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1752], "float64": [56, 57, 153, 154, 161, 162, 178, 179, 318, 319, 326, 327, 338, 350, 391, 393, 497, 526, 579, 582, 585, 597, 600, 605, 606, 615, 618, 620, 621, 631, 632, 643, 646, 655, 658, 660, 669, 1595, 1606, 1609, 1611, 1614], "broadcast_arrai": [56, 57, 178, 179, 579], "arbitrari": [56, 57, 170, 171, 178, 179, 336, 344, 345, 347, 348, 350, 358, 371, 497, 538, 541, 579, 587, 590, 655, 658, 1753, 1758], "x3": [56, 57, 497, 574, 578, 579, 587, 590, 670, 688, 1026, 1027, 1030], "mix": [56, 57, 60, 61, 167, 172, 173, 178, 179, 182, 183, 302, 303, 312, 313, 318, 319, 332, 340, 347, 350, 352, 354, 579, 587, 590, 655, 658, 670, 688, 704, 750, 753, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 915, 918, 930, 933, 940, 943, 965, 968, 1026, 1073, 1075, 1083, 1086, 1088, 1091, 1192, 1196, 1203, 1207, 1272, 1274, 1277, 1284, 1287, 1298, 1301, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1440, 1444, 1471, 1472, 1475, 1482, 1485, 1487, 1488, 1491, 1590, 1591, 1594, 1622, 1643, 1647, 1685, 1696, 1699, 1704, 1707, 1716, 1719, 1741, 1752, 1756, 1758], "broadcast_to": [56, 57, 178, 179, 338, 579], "can_cast": [56, 57, 178, 179, 338, 345, 348, 579], "occur": [56, 57, 107, 108, 157, 158, 178, 179, 272, 273, 322, 323, 333, 391, 401, 579, 597, 600, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "as_n": [56, 57, 58, 59, 178, 179, 180, 181, 338, 579, 604, 605, 606, 608, 609, 610, 612, 631, 670, 675, 676, 679, 691], "int32": [56, 57, 153, 154, 155, 156, 161, 162, 178, 179, 302, 303, 318, 319, 320, 321, 338, 350, 354, 497, 574, 578, 579, 582, 585, 597, 600, 603, 608, 610, 612, 620, 621, 626, 629, 631, 643, 646, 655, 658, 662, 665, 670, 690, 1026, 1088, 1091, 1198, 1202, 1595, 1606, 1609, 1611, 1614, 1622, 1628, 1631, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "finfo": [56, 57, 178, 179, 350, 579], "iinfo": [56, 57, 178, 179, 343, 579], "119": [56, 57], "122": [56, 57, 704, 790, 793], "int8": [56, 57, 153, 154, 318, 319, 338, 350, 579, 608, 620, 621, 626, 629, 631], "min": [56, 57, 137, 138, 161, 162, 178, 179, 302, 303, 326, 327, 387, 388, 579, 615, 618, 626, 629, 704, 925, 928, 1026, 1063, 1066, 1156, 1159, 1161, 1164, 1176, 1179, 1338, 1386, 1389, 1415, 1418, 1430, 1434, 1435, 1439, 1460, 1464, 1685], "128": [56, 57, 107, 108, 143, 144, 167, 172, 173, 272, 273, 308, 309, 391, 392, 579, 626, 629, 1026, 1096, 1338, 1405, 1408], "max": [56, 57, 115, 116, 137, 138, 145, 146, 161, 162, 178, 179, 280, 281, 302, 303, 310, 311, 326, 327, 350, 407, 414, 415, 416, 579, 615, 618, 626, 629, 704, 920, 923, 1026, 1043, 1046, 1048, 1051, 1063, 1066, 1156, 1159, 1161, 1164, 1338, 1386, 1389, 1395, 1398, 1410, 1413, 1685], "127": [56, 57, 107, 108, 272, 273, 391, 403, 579, 626, 629], "is_bool_dtyp": [56, 57, 178, 179, 579], "is_float_dtyp": [56, 57, 178, 179, 351, 579], "is_int_dtyp": [56, 57, 178, 179, 349, 351, 579], "is_uint_dtyp": [56, 57, 178, 179, 349, 351, 579], "result_typ": [56, 57, 178, 179, 338, 579], "arrays_and_dtyp": [56, 57, 178, 179, 579, 655, 658], "to_devic": [58, 59, 180, 181, 670, 675], "stream": [58, 59, 180, 181, 670, 695, 699, 1756], "ab": [60, 61, 182, 183, 338, 346, 348, 350, 704, 950, 953, 1338, 1386, 1389, 1435, 1439, 1460, 1464, 1572, 1580, 1583, 1742], "aco": [60, 61, 182, 183, 704, 1742], "real": [60, 61, 182, 183, 336, 704, 860, 863, 1010, 1014, 1685, 1708, 1711, 1716, 1719, 1754], "cosin": [60, 61, 182, 183, 407, 411, 704, 710, 713, 715, 718, 785, 788, 790, 793], "57": [60, 61, 182, 183, 670, 681, 704, 710, 713, 715, 718, 725, 728, 730, 733, 740, 743, 775, 778, 790, 793, 795, 798, 955, 958], "69": [60, 61, 304, 305, 318, 319, 350, 357, 704, 885, 888, 1220, 1231, 1234, 1338, 1386, 1389], "acosh": [60, 61, 182, 183, 579, 620, 621, 623, 624, 704, 1742], "hyperbol": [60, 61, 182, 183, 704, 715, 718, 730, 733, 745, 748, 790, 793, 985, 988, 1010, 1014], "99": [60, 61, 139, 140, 182, 183, 318, 319, 497, 526, 704, 715, 718, 730, 733, 1026, 1176, 1179, 1220, 1231, 1234, 1685, 1696, 1699], "asin": [60, 61, 182, 183, 704, 1742], "sine": [60, 61, 182, 183, 704, 725, 728, 730, 733, 980, 983, 985, 988], "927": [60, 61, 182, 183], "asinh": [60, 61, 182, 183, 704, 1742], "atan": [60, 61, 182, 183, 704, 1742], "tangent": [60, 61, 182, 183, 341, 704, 735, 738, 740, 743, 745, 748, 1005, 1009, 1010, 1014], "785": [60, 61, 182, 183, 704, 735, 738, 740, 743], "464": [60, 61, 318, 319, 704, 740, 743], "atan2": [60, 61, 182, 183, 704, 1742], "coordin": [60, 61, 155, 156, 182, 183, 320, 321, 387, 388, 423, 431, 432, 497, 538, 541, 704, 740, 743, 1622, 1638, 1641], "quotient": [60, 61, 182, 183, 704, 740, 743], "245": [60, 61, 308, 309, 1272, 1318, 1321], "atanh": [60, 61, 182, 183, 704, 1742], "549": [60, 61, 182, 183, 308, 309, 704, 745, 748, 1272, 1318, 1321], "47": [60, 61, 115, 116, 153, 154, 182, 183, 280, 281, 302, 303, 304, 305, 318, 319, 407, 415, 416, 704, 990, 993, 1026, 1063, 1066, 1220, 1231, 1234, 1272, 1318, 1321, 1595, 1611, 1614], "bitwise_and": [60, 61, 182, 183, 704], "11": [60, 61, 115, 116, 137, 138, 143, 144, 145, 146, 153, 154, 161, 162, 167, 172, 173, 182, 183, 280, 281, 286, 287, 302, 303, 308, 309, 310, 311, 314, 315, 318, 319, 326, 327, 336, 338, 340, 351, 407, 408, 414, 415, 423, 424, 704, 735, 738, 750, 753, 965, 968, 970, 973, 1026, 1042, 1083, 1086, 1119, 1122, 1161, 1164, 1272, 1274, 1277, 1318, 1321, 1338, 1359, 1362, 1376, 1379, 1386, 1389, 1405, 1408, 1435, 1439, 1471, 1482, 1485, 1487, 1508, 1511, 1558, 1562, 1572, 1578, 1580, 1589, 1595, 1601, 1604, 1606, 1609, 1622, 1643, 1647, 1648, 1649, 1653, 1685, 1686, 1689, 1691, 1694, 1696, 1699], "bitwise_invert": [60, 61, 182, 183, 704], "bitiwse_invert": [60, 61], "bitwise_left_shift": [60, 61, 182, 183, 704], "bitwise_or": [60, 61, 182, 183, 704], "bitwise_xor": [60, 61, 182, 183, 704], "89": [60, 61, 153, 154, 178, 179, 182, 183, 318, 319, 579, 626, 629, 704, 775, 778, 1338, 1440, 1444, 1685, 1720, 1724], "51": [60, 61, 182, 183, 302, 303, 318, 319, 704, 985, 988], "18": [60, 61, 115, 116, 153, 154, 182, 183, 280, 281, 318, 319, 326, 327, 336, 340, 407, 414, 423, 424, 456, 469, 472, 704, 740, 743, 800, 803, 985, 988, 1338, 1359, 1362, 1381, 1384, 1405, 1408, 1595, 1606, 1609, 1685, 1691, 1694, 1696, 1699], "19": [60, 61, 115, 116, 153, 154, 182, 183, 280, 281, 310, 311, 318, 319, 340, 407, 409, 414, 423, 424, 704, 1005, 1009, 1338, 1359, 1362, 1445, 1449, 1572, 1583, 1595, 1606, 1609, 1669, 1680, 1683], "26": [60, 61, 151, 152, 153, 154, 302, 303, 304, 305, 318, 319, 704, 775, 778, 800, 803, 985, 988, 1026, 1114, 1117, 1220, 1221, 1224, 1272, 1306, 1309, 1338, 1359, 1362, 1405, 1408, 1440, 1444, 1572, 1574, 1590, 1591, 1594, 1685, 1696, 1699], "27": [60, 61, 107, 108, 145, 146, 153, 154, 272, 273, 310, 311, 318, 319, 391, 393, 704, 770, 773, 790, 793, 985, 988, 990, 993, 1026, 1119, 1122, 1272, 1333, 1336, 1338, 1381, 1384, 1405, 1408, 1450, 1454, 1572, 1574, 1580, 1685, 1696, 1699], "23": [60, 61, 115, 116, 153, 154, 176, 177, 182, 183, 280, 281, 302, 303, 318, 319, 350, 354, 407, 414, 415, 416, 497, 527, 530, 704, 740, 743, 775, 778, 850, 853, 855, 858, 860, 863, 965, 968, 975, 978, 985, 988, 1272, 1298, 1301, 1333, 1336, 1338, 1359, 1362, 1386, 1389, 1435, 1439, 1572, 1574, 1580, 1622, 1643, 1647], "20": [60, 61, 115, 116, 143, 144, 153, 154, 161, 162, 182, 183, 280, 281, 302, 303, 318, 319, 326, 327, 352, 356, 407, 409, 414, 704, 795, 798, 815, 818, 820, 823, 885, 888, 955, 958, 970, 973, 990, 993, 1026, 1088, 1091, 1096, 1161, 1164, 1176, 1179, 1338, 1359, 1362, 1376, 1379, 1386, 1389, 1405, 1408, 1440, 1444, 1595, 1601, 1604, 1622, 1638, 1641, 1643, 1647, 1685, 1696, 1699, 1720, 1724], "74": [60, 61, 318, 319, 704, 895, 898], "41": [60, 61, 115, 116, 182, 183, 302, 303, 310, 311, 407, 415, 456, 469, 472, 704, 735, 738, 990, 993, 1026, 1043, 1046, 1048, 1051, 1338, 1339, 1342, 1595, 1611, 1614, 1685, 1720, 1724], "59": [60, 61], "24": [60, 61, 115, 116, 145, 146, 161, 162, 272, 273, 280, 281, 302, 303, 308, 309, 310, 311, 318, 319, 357, 407, 414, 704, 775, 778, 990, 993, 1026, 1063, 1066, 1338, 1359, 1362, 1405, 1408, 1572, 1574, 1685, 1686, 1689, 1696, 1699], "ceil": [60, 61, 182, 183, 497, 499, 500, 704, 1742], "radian": [60, 61, 107, 108, 182, 183, 272, 273, 341, 391, 403, 704, 710, 713, 725, 728, 735, 738, 740, 743, 785, 788, 795, 798, 955, 958, 980, 983, 1005, 1009], "54": [60, 61, 143, 144, 182, 183, 272, 273, 280, 281, 308, 309, 318, 319, 340, 407, 410, 704, 785, 788, 790, 793, 990, 993, 1272, 1318, 1321, 1333, 1336, 1338, 1405, 1408, 1685, 1696, 1699], "416": [60, 61, 704, 785, 788], "cosh": [60, 61, 182, 183, 704, 1742], "angl": [60, 61, 182, 183, 370, 704, 740, 743, 790, 793, 985, 988, 1010, 1014], "76": [60, 61, 178, 179, 182, 183, 318, 319, 579, 626, 629, 704, 790, 793, 1338, 1440, 1444, 1572, 1580, 1685, 1696, 1699], "03": [60, 61, 182, 183, 304, 305, 318, 319, 704, 885, 888, 1026, 1176, 1179, 1220, 1241, 1244, 1272, 1333, 1336, 1338, 1376, 1379], "81": [60, 61, 178, 179, 182, 183, 310, 311, 318, 319, 350, 579, 626, 629, 704, 885, 888, 970, 973, 995, 998, 1572, 1580, 1595, 1611, 1614, 1685, 1696, 1699], "deg2rad": [60, 61, 182, 183, 704], "degre": [60, 61, 121, 122, 161, 162, 182, 183, 286, 287, 326, 327, 423, 433, 704, 795, 798, 955, 958, 1685, 1716, 1719, 1725, 1729, 1751], "180": [60, 61, 182, 183, 704, 795, 798, 955, 958], "270": [60, 61, 182, 183, 704, 795, 798, 955, 958], "360": [60, 61, 182, 183, 704, 795, 798, 955, 958], "71": [60, 61, 182, 183, 704, 795, 798, 955, 958], "28": [60, 61, 151, 152, 182, 183, 302, 303, 318, 319, 704, 795, 798, 955, 958, 1026, 1114, 1117, 1220, 1221, 1224, 1272, 1298, 1301, 1306, 1309, 1318, 1321, 1338, 1405, 1408, 1590, 1591, 1594, 1685, 1696, 1699], "divid": [60, 61, 137, 138, 149, 150, 170, 171, 182, 183, 314, 315, 334, 336, 340, 704, 830, 833, 1026, 1176, 1179, 1487, 1533, 1536], "dividend": [60, 61, 182, 183, 704, 800, 803, 965, 968, 1020, 1024], "divisor": [60, 61, 139, 140, 161, 162, 182, 183, 304, 305, 326, 327, 391, 396, 704, 800, 803, 965, 968, 1020, 1024, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1685, 1716, 1719, 1725, 1729], "375": [60, 61, 704, 805, 808], "erf": [60, 61, 182, 183, 704], "exponenti": [60, 61, 182, 183, 704, 810, 813, 815, 818, 895, 898, 950, 953], "gauss": [60, 61, 182, 183, 704, 810, 813], "exp": [60, 61, 182, 183, 704, 820, 823, 895, 898, 1742], "expm1": [60, 61, 182, 183, 338, 704], "244": [60, 61], "918": [60, 61], "48": [60, 61, 115, 116, 182, 183, 280, 281, 302, 303, 304, 305, 318, 319, 407, 408, 409, 415, 416, 456, 464, 467, 704, 715, 718, 990, 993, 1026, 1114, 1117, 1220, 1221, 1224, 1231, 1234, 1338, 1405, 1408, 1572, 1574, 1685, 1696, 1699], "147": [60, 61, 456, 484, 487, 704, 820, 823], "floor": [60, 61, 182, 183, 704, 770, 773, 1742], "floor_divid": [60, 61, 182, 183, 704], "greater_equ": [60, 61, 182, 183, 704], "isfinit": [60, 61, 182, 183, 348, 704], "out_i": [60, 61, 182, 183, 704, 845, 848, 850, 853, 855, 858, 860, 863], "self_i": [60, 61, 182, 183], "finit": [60, 61, 107, 108, 182, 183, 272, 273, 391, 401, 704, 720, 723, 740, 743, 845, 848, 930, 933, 950, 953, 965, 968], "inf": [60, 61, 107, 108, 137, 138, 145, 146, 182, 183, 272, 273, 302, 303, 310, 311, 338, 350, 391, 397, 398, 401, 496, 704, 740, 743, 820, 823, 845, 848, 850, 853, 855, 858, 860, 863, 875, 878, 880, 883, 1026, 1108, 1111, 1214, 1218, 1338, 1386, 1389, 1460, 1464], "isinf": [60, 61, 182, 183, 704], "neg": [60, 61, 107, 108, 145, 146, 149, 150, 153, 154, 163, 164, 168, 169, 182, 183, 272, 273, 310, 311, 314, 315, 318, 319, 328, 329, 336, 345, 347, 387, 388, 391, 397, 401, 419, 420, 456, 464, 467, 497, 499, 500, 518, 519, 704, 845, 848, 850, 853, 930, 933, 950, 953, 965, 968, 1338, 1354, 1357, 1430, 1434, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1528, 1531, 1595, 1606, 1609, 1730, 1731, 1734, 1736, 1739], "isnan": [60, 61, 182, 183, 704], "isreal": [60, 61, 182, 183, 704], "1j": [60, 61, 182, 183, 1026, 1176, 1179], "5j": [60, 61, 182, 183, 704, 860, 863], "6j": [60, 61, 704, 860, 863], "less_equ": [60, 61, 182, 183, 342, 704], "61": [60, 61, 182, 183, 304, 305, 312, 313, 318, 319, 704, 875, 878, 885, 888, 995, 998, 1220, 1221, 1224, 1272, 1306, 1309, 1471, 1472, 1475], "log10": [60, 61, 182, 183, 704], "logarithm": [60, 61, 182, 183, 704, 815, 818, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 1338, 1420, 1423], "602": [60, 61, 704, 880, 883], "699": [60, 61, 704, 880, 883], "log1p": [60, 61, 182, 183, 704], "693": [60, 61, 182, 183, 456, 484, 487, 704, 730, 733, 885, 888, 1471, 1482, 1485], "001": [60, 61, 151, 152, 357, 358, 579, 615, 618, 704, 975, 978, 1590, 1591, 1594], "0953": [60, 61, 182, 183, 704, 875, 878], "log2": [60, 61, 182, 183, 391, 400, 704], "logaddexp": [60, 61, 182, 183, 704], "05": [60, 61, 139, 140, 151, 152, 161, 162, 182, 183, 304, 305, 316, 317, 349, 350, 407, 413, 704, 895, 898, 1026, 1097, 1114, 1117, 1168, 1220, 1221, 1224, 1241, 1244, 1338, 1386, 1389, 1590, 1591, 1594, 1685, 1704, 1707], "logical_and": [60, 61, 182, 183, 348, 352, 704, 1742, 1759], "logical_not": [60, 61, 182, 183, 338, 704, 1742], "logical_or": [60, 61, 182, 183, 704, 1742, 1759], "conform": [60, 61, 182, 183, 341, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 615, 618, 626, 629, 655, 658, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1487, 1493, 1496, 1503, 1506, 1508, 1511, 1513, 1516, 1523, 1526, 1528, 1531, 1538, 1541, 1543, 1546, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "org": [60, 61, 182, 183, 304, 305, 341, 387, 388, 423, 424, 579, 597, 600, 704, 845, 848, 1220, 1221, 1224, 1225, 1228, 1338, 1465, 1469, 1685, 1716, 1719], "api_specif": [60, 61, 182, 183, 341, 423, 424, 579, 597, 600, 704, 845, 848, 1685, 1716, 1719], "elementwise_funct": [60, 61, 182, 183, 341, 704, 845, 848], "simplic": [60, 61, 182, 183, 341, 352, 358, 370, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729], "nestabl": [60, 61, 182, 183, 332, 340, 341, 347, 350, 387, 388, 407, 408, 409, 414, 415, 416, 417, 419, 420, 423, 424, 497, 499, 500, 502, 504, 512, 513, 516, 518, 519, 521, 524, 526, 527, 530, 532, 533, 535, 536, 538, 541, 553, 554, 556, 559, 561, 565, 566, 570, 571, 573, 574, 578, 579, 597, 600, 633, 636, 643, 646, 704, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 800, 803, 805, 808, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 870, 873, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1026, 1083, 1086, 1100, 1103, 1108, 1111, 1114, 1117, 1186, 1190, 1203, 1207, 1220, 1235, 1238, 1254, 1258, 1261, 1265, 1266, 1270, 1272, 1284, 1287, 1306, 1309, 1318, 1321, 1333, 1336, 1338, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1367, 1368, 1370, 1376, 1379, 1381, 1384, 1386, 1389, 1391, 1393, 1395, 1398, 1400, 1403, 1405, 1408, 1410, 1413, 1415, 1418, 1420, 1423, 1425, 1428, 1430, 1434, 1435, 1439, 1440, 1444, 1455, 1459, 1460, 1464, 1465, 1469, 1487, 1488, 1491, 1493, 1496, 1498, 1501, 1503, 1506, 1508, 1511, 1513, 1516, 1518, 1521, 1523, 1526, 1528, 1531, 1533, 1536, 1538, 1541, 1543, 1546, 1548, 1552, 1553, 1557, 1558, 1562, 1563, 1567, 1590, 1591, 1594, 1622, 1623, 1626, 1628, 1631, 1638, 1641, 1643, 1647, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1741], "logical_xor": [60, 61, 182, 183, 704], "use_wher": [60, 61, 182, 183, 704, 920, 923, 925, 928], "formula": [60, 61, 182, 183, 704, 920, 923, 925, 928], "clip": [60, 61, 149, 150, 182, 183, 302, 303, 314, 315, 336, 345, 347, 357, 359, 704, 920, 923, 925, 928, 1026, 1043, 1046, 1048, 1051, 1487, 1742], "minimum": [60, 61, 137, 138, 149, 150, 155, 156, 182, 183, 302, 303, 314, 315, 320, 321, 391, 393, 407, 417, 704, 705, 708, 1026, 1097, 1098, 1168, 1169, 1176, 1179, 1181, 1184, 1487, 1488, 1491, 1622, 1628, 1631, 1685, 1700, 1703, 1708, 1711, 1742, 1749, 1755, 1759], "exce": [60, 61, 121, 122, 286, 287, 423, 434, 704, 925, 928], "arguement": [60, 61], "condit": [60, 61, 155, 156, 320, 321, 333, 338, 340, 342, 347, 350, 370, 494, 495, 704, 930, 933, 1572, 1582, 1583, 1622, 1643, 1647], "boradcastbl": [60, 61, 704, 930, 933], "thatth": [60, 61], "30": [60, 61, 302, 303, 318, 319, 326, 327, 704, 930, 933, 970, 973, 1026, 1088, 1091, 1114, 1117, 1119, 1122, 1161, 1164, 1171, 1176, 1179, 1338, 1376, 1379, 1405, 1408, 1685, 1696, 1699], "56": [60, 61, 143, 144, 153, 154, 182, 183, 340, 704, 930, 933, 990, 993, 1005, 1009, 1220, 1221, 1224, 1272, 1298, 1301, 1338, 1405, 1408, 1435, 1439, 1685, 1696, 1699], "21": [60, 61, 107, 108, 115, 116, 137, 138, 153, 154, 182, 183, 272, 273, 280, 281, 302, 303, 318, 319, 326, 327, 391, 399, 407, 414, 579, 626, 629, 704, 740, 743, 770, 773, 775, 778, 930, 933, 1026, 1063, 1066, 1338, 1359, 1362, 1405, 1408, 1471, 1482, 1485, 1572, 1578, 1685, 1686, 1689, 1696, 1699], "not_equ": [60, 61, 182, 183, 704], "pow": [60, 61, 182, 183, 333, 704], "expon": [60, 61, 107, 108, 137, 138, 272, 273, 302, 303, 391, 393, 704, 950, 953, 1026, 1181, 1184, 1338, 1391, 1393], "rad2deg": [60, 61, 182, 183, 704], "286": [60, 61], "458": [60, 61], "573": [60, 61, 704, 955, 958], "reciproc": [60, 61, 182, 183, 704], "remaind": [60, 61, 107, 108, 149, 150, 170, 171, 182, 183, 272, 273, 314, 315, 391, 395, 704, 1487, 1533, 1536], "modulu": [60, 61, 182, 183, 704, 965, 968], "x2_i": [60, 61, 182, 183, 333, 704, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004], "94": [60, 61, 139, 140, 153, 154, 182, 183, 304, 305, 318, 319, 670, 689, 1220, 1231, 1234], "256": [60, 61, 1272, 1298, 1301], "0001": [60, 61], "36": [60, 61, 143, 144, 280, 281, 302, 303, 310, 311, 704, 740, 743, 1026, 1063, 1066, 1338, 1405, 1408, 1435, 1439, 1572, 1583, 1685, 1696, 1699], "67": [60, 61, 137, 138, 182, 183, 302, 303, 318, 319, 704, 775, 778, 790, 793, 1026, 1063, 1066, 1220, 1230, 1240, 1260], "45": [60, 61, 167, 172, 173, 182, 183, 280, 281, 304, 305, 318, 319, 704, 740, 743, 800, 803, 1220, 1221, 1224, 1241, 1244, 1338, 1405, 1408, 1487, 1533, 1536, 1685, 1696, 1699], "678": [60, 61], "25": [60, 61, 137, 138, 145, 146, 147, 148, 153, 154, 161, 162, 168, 169, 182, 183, 272, 273, 302, 303, 308, 309, 310, 311, 316, 317, 318, 319, 326, 327, 336, 407, 411, 704, 770, 773, 800, 803, 985, 988, 990, 993, 995, 998, 1026, 1114, 1117, 1119, 1122, 1176, 1179, 1338, 1339, 1342, 1359, 1362, 1376, 1379, 1450, 1454, 1471, 1477, 1480, 1572, 1574, 1590, 1591, 1594, 1685, 1696, 1699, 1704, 1707], "33": [60, 61, 153, 154, 161, 162, 182, 183, 302, 303, 304, 305, 308, 309, 407, 408, 704, 735, 738, 770, 773, 1026, 1176, 1179, 1220, 1231, 1234, 1272, 1318, 1321, 1338, 1405, 1408, 1572, 1589, 1685, 1696, 1699], "sin": [60, 61, 137, 138, 182, 183, 334, 354, 704, 1026, 1076, 1079, 1742], "841": [60, 61, 182, 183, 456, 458, 461, 704, 980, 983], "909": [60, 61, 182, 183, 302, 303, 704, 980, 983], "141": [60, 61, 182, 183, 579, 582, 585, 704, 980, 983], "sinh": [60, 61, 182, 183, 704, 1742], "63": [60, 61, 168, 169, 182, 183, 310, 311, 704, 955, 958, 985, 988, 990, 993, 1338, 1339, 1342, 1405, 1408, 1572, 1574, 1685, 1696, 1699], "232": [60, 61, 182, 183, 704, 985, 988], "sqrt": [60, 61, 182, 183, 704, 1338, 1460, 1464], "squar": [60, 61, 145, 146, 182, 183, 310, 311, 704, 990, 993, 1220, 1230, 1240, 1260, 1338, 1339, 1342, 1349, 1352, 1354, 1357, 1364, 1367, 1368, 1370, 1376, 1379, 1391, 1393, 1420, 1423, 1425, 1428, 1430, 1434, 1450, 1454, 1572, 1578], "tan": [60, 61, 182, 183, 336, 341, 344, 345, 347, 348, 354, 704, 1026, 1033, 1742], "tanh": [60, 61, 182, 183, 354, 704, 1742], "762": [60, 61, 182, 183, 704, 880, 883, 1010, 1014], "964": [60, 61, 182, 183, 704, 1010, 1014], "trunc": [60, 61, 182, 183, 704], "trunc_divid": [60, 61, 182, 183, 704], "elementwis": [61, 108, 151, 152, 183, 273, 316, 317, 345, 351, 354, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 745, 748, 750, 753, 755, 758, 760, 763, 765, 768, 770, 773, 775, 778, 780, 783, 785, 788, 790, 793, 795, 798, 800, 803, 805, 808, 810, 813, 815, 818, 820, 823, 825, 828, 830, 833, 835, 838, 840, 843, 845, 848, 850, 853, 855, 858, 860, 863, 865, 868, 870, 873, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 923, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 955, 958, 960, 963, 965, 968, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1000, 1004, 1005, 1009, 1010, 1014, 1015, 1019, 1020, 1024, 1338, 1450, 1454, 1590, 1591, 1594], "exp2": [107, 108, 272, 273, 391], "power": [107, 108, 137, 138, 145, 146, 272, 273, 302, 303, 310, 311, 350, 356, 357, 358, 391, 392, 393, 407, 418, 704, 770, 773, 815, 818, 950, 953, 1026, 1097, 1168, 1181, 1184, 1338, 1391, 1393, 1450, 1454, 1572, 1578, 1752, 1754, 1758], "float_pow": [107, 108, 272, 273, 391], "125": [107, 108, 145, 146, 310, 311, 391, 393, 704, 770, 773, 1338, 1450, 1454], "fmax": [107, 108, 272, 273, 391], "fmod": [107, 108, 272, 273, 391], "divis": [107, 108, 137, 138, 139, 140, 272, 273, 302, 303, 304, 305, 345, 391, 395, 704, 770, 773, 800, 803, 830, 833, 965, 968, 1020, 1024, 1026, 1098, 1169, 1176, 1179, 1220, 1221, 1224, 1225, 1228, 1241, 1244], "gcd": [107, 108, 272, 273, 391], "isneginf": [107, 108, 272, 273, 391], "isposinf": [107, 108, 272, 273, 391], "lcm": [107, 108, 272, 273, 391], "60": [107, 108, 272, 273, 302, 303, 318, 319, 391, 399, 1026, 1119, 1122, 1176, 1179, 1219, 1338, 1405, 1408, 1685, 1686, 1689, 1696, 1699], "logaddexp2": [107, 108, 272, 273, 391], "169925": [107, 108, 272, 273, 391, 400], "nan_to_num": [107, 108, 272, 273, 391], "posinf": [107, 108, 272, 273, 391, 401], "neginf": [107, 108, 272, 273, 391, 401], "small": [107, 108, 145, 146, 151, 152, 272, 273, 310, 311, 316, 317, 340, 345, 349, 352, 354, 358, 371, 391, 401, 704, 930, 933, 1338, 1395, 1398, 1410, 1413, 1590, 1591, 1594, 1753], "5e": [107, 108, 139, 140, 272, 273, 391, 401, 1220, 1241, 1244], "nansum": [107, 108, 272, 273, 391], "keepdim": [107, 108, 133, 134, 145, 146, 149, 150, 155, 156, 161, 162, 163, 164, 170, 171, 272, 273, 298, 299, 310, 311, 314, 315, 320, 321, 326, 327, 328, 329, 342, 348, 354, 391, 402, 452, 453, 1338, 1386, 1389, 1460, 1464, 1487, 1558, 1562, 1622, 1623, 1626, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "flatten": [107, 108, 115, 116, 133, 134, 137, 138, 149, 150, 155, 156, 157, 158, 272, 273, 280, 281, 286, 287, 298, 299, 302, 303, 310, 311, 314, 315, 320, 321, 322, 323, 391, 402, 419, 420, 423, 452, 453, 1026, 1076, 1079, 1338, 1371, 1374, 1405, 1408, 1460, 1464, 1487, 1493, 1496, 1518, 1521, 1528, 1531, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "accumul": [107, 108, 272, 273, 391, 402], "By": [107, 108, 161, 162, 163, 164, 272, 273, 326, 327, 328, 329, 338, 340, 345, 347, 348, 354, 358, 359, 391, 402, 407, 418, 1338, 1455, 1459, 1487, 1518, 1521, 1685, 1686, 1689, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "reduc": [107, 108, 133, 134, 137, 138, 145, 146, 155, 156, 161, 162, 163, 164, 170, 171, 272, 273, 298, 299, 302, 303, 310, 311, 320, 321, 326, 327, 328, 329, 342, 348, 352, 354, 356, 391, 402, 452, 453, 670, 694, 1026, 1063, 1066, 1338, 1415, 1418, 1622, 1623, 1626, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739, 1750, 1754, 1755, 1756], "hold": [107, 108, 137, 138, 145, 146, 161, 162, 272, 273, 310, 311, 326, 327, 357, 391, 402, 1026, 1156, 1159, 1161, 1164, 1338, 1386, 1389, 1685, 1691, 1694, 1753], "637": [107, 108, 272, 273, 391, 403], "212": [107, 108, 143, 144, 272, 273, 391, 403, 1648, 1649, 1653], "0909": [107, 108, 272, 273, 391, 403], "trapz": [107, 108, 182, 183, 391], "dx": [107, 108, 182, 183, 391, 404], "sampl": [107, 108, 125, 126, 153, 154, 161, 162, 182, 183, 290, 291, 318, 319, 326, 327, 346, 349, 350, 391, 404, 439, 440, 441, 442, 497, 532, 533, 1272, 1311, 1314, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1685, 1716, 1719, 1725, 1729], "evenli": [107, 108, 149, 150, 170, 171, 182, 183, 314, 315, 391, 404, 497, 499, 500, 532, 533, 535, 536, 1487, 1533, 1536], "apart": [107, 108, 182, 183, 391, 404], "trapezoid": [107, 108, 182, 183, 391, 404], "gradient": [112, 140, 277, 305, 351, 357, 358, 370, 371, 670, 694, 1221, 1224, 1225, 1228, 1229, 1230, 1231, 1234, 1235, 1238, 1240, 1241, 1244, 1245, 1248, 1249, 1252, 1253, 1254, 1258, 1259, 1260, 1261, 1265, 1266, 1270, 1271, 1568, 1569, 1570, 1571, 1742, 1752], "avg_pool3d": [115, 116, 280, 281, 407], "kernel": [115, 116, 143, 144, 280, 281, 308, 309, 352, 354, 371, 407, 408, 409, 414, 415, 416, 1272, 1323, 1326, 1752, 1755, 1756], "stride": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 414, 415, 416, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1317, 1752], "pad": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 414, 415, 416, 1026, 1076, 1079, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309, 1317, 1487, 1498, 1501, 1563, 1567], "data_format": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 414, 415, 416, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1316], "ndhwc": [115, 116, 143, 144, 280, 281, 308, 309, 407, 409, 416, 1272, 1293, 1296, 1298, 1301], "pool": [115, 116, 280, 281, 407, 408, 409, 414, 415, 416], "batch_siz": [115, 116, 143, 144, 153, 154, 280, 281, 308, 309, 318, 319, 357, 407, 408, 409, 414, 415, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1595, 1596, 1599], "h": [115, 116, 143, 144, 280, 281, 302, 303, 308, 309, 332, 336, 407, 408, 409, 415, 416, 1026, 1068, 1071, 1272, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1572, 1575, 1579, 1588, 1748], "w": [115, 116, 139, 140, 143, 144, 170, 171, 182, 183, 280, 281, 302, 303, 304, 305, 308, 309, 354, 357, 358, 407, 408, 409, 414, 415, 416, 1026, 1068, 1071, 1176, 1179, 1220, 1221, 1224, 1225, 1228, 1229, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1318, 1321, 1572, 1578], "d_in": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 414, 415, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309], "convolut": [115, 116, 143, 144, 280, 281, 308, 309, 407, 409, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1750, 1752], "slide": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 409, 414, 415, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309], "algorithm": [115, 116, 143, 144, 168, 169, 280, 281, 308, 309, 338, 348, 352, 371, 407, 408, 409, 414, 415, 416, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309, 1752, 1754, 1756], "ncdhw": [115, 116, 280, 281, 407, 409, 416, 1272, 1293, 1296, 1298, 1301], "arang": [115, 116, 145, 146, 280, 281, 286, 287, 310, 311, 338, 407, 408, 409, 414, 415, 416, 497, 532, 533, 535, 536, 1026, 1152, 1219, 1338, 1386, 1389, 1685, 1696, 1699, 1742, 1759], "reshap": [115, 116, 145, 146, 149, 150, 170, 171, 280, 281, 308, 309, 310, 311, 314, 315, 347, 348, 350, 354, 356, 359, 407, 408, 409, 414, 415, 416, 423, 424, 1026, 1219, 1272, 1284, 1287, 1306, 1309, 1338, 1386, 1389, 1487, 1742], "43": [115, 116, 167, 172, 173, 318, 319, 407, 409, 704, 770, 773, 1595, 1606, 1609, 1611, 1614, 1622, 1643, 1647], "44": [115, 116, 153, 154, 182, 183, 280, 281, 318, 319, 407, 409, 704, 730, 733, 970, 973, 990, 993, 995, 998, 1026, 1042, 1338, 1405, 1408, 1572, 1580, 1622, 1643, 1647, 1685, 1696, 1699], "start_dim": [115, 116, 280, 281, 423, 424], "end_dim": [115, 116, 280, 281, 423, 424], "dim": [115, 116, 170, 171, 176, 177, 280, 281, 338, 349, 352, 423, 424, 497, 548, 551, 1272, 1273, 1303, 1304, 1316], "max_pool1d": [115, 116, 280, 281, 407], "nhwc": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 415, 1272, 1284, 1287, 1289, 1291, 1306, 1309], "nwc": [115, 116, 143, 144, 280, 281, 308, 309, 407, 414, 1272, 1274, 1277, 1279, 1282], "ncw": [115, 116, 143, 144, 280, 281, 308, 309, 407, 414, 1272, 1274, 1277, 1279, 1282], "max_pool2d": [115, 116, 280, 281, 407], "nchw": [115, 116, 143, 144, 280, 281, 308, 309, 407, 408, 415, 1272, 1284, 1287, 1289, 1291, 1306, 1309], "40": [115, 116, 137, 138, 167, 172, 173, 272, 273, 302, 303, 318, 319, 407, 415, 704, 770, 773, 790, 793, 990, 993, 1026, 1088, 1091, 1161, 1164, 1176, 1179, 1219, 1338, 1376, 1379, 1405, 1408, 1685, 1696, 1699], "46": [115, 116, 153, 154, 280, 281, 308, 309, 318, 319, 407, 410, 415, 416, 704, 885, 888, 975, 978, 1572, 1574], "max_pool3d": [115, 116, 280, 281, 407], "38": [115, 116, 182, 183, 318, 319, 340, 407, 408, 416, 579, 615, 618, 704, 1005, 1009], "pad_width": [115, 116, 149, 150, 280, 281, 314, 315, 407, 417, 1487, 1498, 1501, 1563, 1567], "constant": [115, 116, 151, 152, 280, 281, 316, 317, 345, 351, 358, 359, 371, 407, 417, 1487, 1498, 1501, 1572, 1578, 1590, 1591, 1594], "stat_length": [115, 116, 280, 281, 407, 417], "constant_valu": [115, 116, 280, 281, 407, 417], "end_valu": [115, 116, 280, 281, 407, 417], "reflect_typ": [115, 116, 280, 281, 407, 417], "diagflat": [117, 118, 282, 283, 419], "offset": [117, 118, 145, 146, 282, 283, 310, 311, 419, 420, 1338, 1359, 1362, 1445, 1449], "padding_valu": [117, 118, 282, 283, 419, 420], "right_left": [117, 118, 282, 283, 419, 420], "num_row": [117, 118, 282, 283, 419, 420], "num_col": [117, 118, 282, 283, 419, 420], "kron": [117, 118, 282, 283, 419, 1759], "loss": [120, 148, 285, 313, 338, 345, 348, 351, 357, 358, 359, 1472, 1475, 1477, 1480, 1482, 1485, 1742, 1752, 1759], "fliplr": [121, 122, 286, 287, 423], "flip": [121, 122, 149, 150, 286, 287, 314, 315, 348, 356, 357, 359, 423, 425, 426, 704, 755, 758, 1487, 1742], "diag": [121, 122, 145, 146, 286, 287, 310, 311, 354, 423, 425, 426, 1338], "flipud": [121, 122, 286, 287, 423], "heavisid": [121, 122, 286, 287, 423], "0000": [121, 122, 280, 281, 407, 410, 413, 423, 427], "5000": [121, 122, 423, 427, 1338, 1376, 1379], "hstack": [121, 122, 286, 287, 423], "vstack": [121, 122, 286, 287, 423], "i0": [121, 122, 286, 287, 423], "bessel": [121, 122, 161, 162, 280, 281, 286, 287, 326, 327, 407, 412, 423, 429, 1685, 1716, 1719, 1725, 1729], "26606588": [121, 122, 286, 287, 423, 429], "2795853": [121, 122, 286, 287, 423, 429], "88079259": [121, 122, 286, 287, 423, 429], "moveaxi": [121, 122, 286, 287, 423], "destin": [121, 122, 286, 287, 423, 430], "unstack": [121, 122, 149, 150, 170, 171, 314, 315, 336, 354, 357, 1487, 1742, 1759], "reorder": [121, 122, 149, 150, 286, 287, 314, 315, 423, 430, 1487, 1508, 1511], "rot90": [121, 122, 286, 287, 423], "rotat": [121, 122, 286, 287, 370, 423, 433], "plane": [121, 122, 286, 287, 423, 433], "top_k": [121, 122, 286, 287, 423], "largest": [121, 122, 170, 171, 286, 287, 370, 423, 434, 579, 615, 618, 626, 629, 1338, 1386, 1389, 1430, 1434], "retun": [121, 122, 286, 287, 423, 434], "smallest": [121, 122, 170, 171, 286, 287, 423, 434, 579, 615, 618, 626, 629, 704, 780, 783, 1338, 1386, 1389], "norm": [124, 137, 138, 145, 146, 152, 289, 302, 303, 310, 311, 317, 351, 1026, 1043, 1046, 1048, 1051, 1338, 1386, 1389, 1460, 1464, 1591, 1594, 1742], "dirichlet": [125, 126, 290, 291, 439], "seed": [125, 126, 153, 154, 170, 171, 290, 291, 318, 319, 439, 440, 441, 442, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614, 1617, 1620, 1742], "shuffl": [125, 126, 153, 154, 170, 171, 290, 291, 318, 319, 1595, 1742], "length": [125, 126, 149, 150, 167, 170, 171, 172, 173, 290, 291, 314, 315, 343, 350, 357, 407, 410, 412, 413, 417, 418, 439, 441, 497, 499, 500, 538, 541, 1026, 1219, 1338, 1430, 1434, 1435, 1439, 1487, 1523, 1526], "nativeshap": [125, 126, 149, 150, 153, 154, 290, 291, 314, 315, 318, 319, 439, 440, 441, 497, 512, 526, 553, 554, 571, 573, 1026, 1161, 1164, 1174, 1191, 1197, 1272, 1279, 1282, 1289, 1291, 1298, 1301, 1487, 1523, 1526, 1595, 1601, 1604, 1606, 1609, 1611, 1614], "drawn": [125, 126, 153, 154, 290, 291, 318, 319, 350, 439, 440, 441, 1595, 1596, 1599, 1601, 1604, 1606, 1609, 1611, 1614], "vector": [125, 126, 137, 138, 143, 144, 145, 146, 302, 303, 308, 309, 310, 311, 370, 407, 417, 439, 441, 497, 538, 541, 1026, 1048, 1051, 1219, 1272, 1318, 1321, 1338, 1344, 1347, 1364, 1367, 1371, 1374, 1381, 1384, 1405, 1408, 1430, 1434, 1435, 1439, 1450, 1454, 1455, 1459, 1460, 1464, 1465, 1469, 1752], "10598304": [125, 126, 439, 441], "21537054": [125, 126, 439, 441], "67864642": [125, 126, 439, 441], "48006698": [125, 126, 439, 441], "07472073": [125, 126, 439, 441], "44521229": [125, 126, 439, 441], "55479872": [125, 126, 439, 441], "05426367": [125, 126, 439, 441], "39093761": [125, 126, 439, 441], "19531053": [125, 126, 439, 441], "51675832": [125, 126, 439, 441], "28793114": [125, 126, 439, 441], "12315625": [125, 126, 439, 441], "29823365": [125, 126, 439, 441], "5786101": [125, 126, 439, 441], "15564976": [125, 126, 439, 441], "50542368": [125, 126, 439, 441], "33892656": [125, 126, 439, 441], "1325352": [125, 126, 439, 441], "44439589": [125, 126, 439, 441], "42306891": [125, 126, 439, 441], "msort": [131, 132, 296, 297, 445], "randint": [131, 132, 143, 144, 153, 154, 296, 297, 308, 309, 318, 319, 338, 445, 446, 1595, 1742], "median": [133, 134, 298, 299, 348, 407, 417, 452], "all_equ": [137, 138, 302, 303, 1026], "equality_matrix": [137, 138, 302, 303, 1026, 1027, 1030], "compar": [137, 138, 159, 160, 170, 171, 302, 303, 324, 325, 335, 340, 343, 349, 350, 357, 1026, 1027, 1030, 1034, 1036, 1338, 1435, 1439, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1669, 1670, 1673, 1680, 1683, 1748, 1750, 1752, 1758, 1759], "array_equ": [137, 138, 1026], "assert_supports_inplac": [137, 138, 302, 303, 1026], "clip_matrix_norm": [137, 138, 302, 303, 1026], "max_norm": [137, 138, 302, 303, 1026, 1043, 1046, 1048, 1051], "downscal": [137, 138, 302, 303, 1026, 1043, 1046, 1048, 1051], "894": [137, 138, 302, 303, 1026, 1043, 1046, 1048, 1051, 1590, 1591, 1594], "79": [137, 138, 302, 303, 318, 319, 704, 775, 778, 800, 803, 1026, 1043, 1046, 1048, 1051], "clip_vector_norm": [137, 138, 302, 303, 1026], "default_v": [137, 138, 1026, 1055, 1057], "catch_except": [137, 138, 1026, 1055, 1057], "rev": [137, 138, 1026, 1055, 1057], "with_cal": [137, 138, 1026, 1055, 1057], "catch": [137, 138, 350, 1026, 1055, 1057], "callabl": [137, 138, 302, 303, 336, 342, 348, 350, 354, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 407, 417, 456, 457, 463, 494, 495, 497, 506, 507, 508, 579, 620, 621, 623, 624, 670, 682, 683, 694, 1026, 1032, 1042, 1055, 1057, 1063, 1066, 1081, 1082, 1152, 1208, 1219, 1272, 1328, 1331, 1568, 1569, 1570, 1571, 1572, 1578, 1579, 1580, 1582, 1583, 1584, 1585], "einops_rearrang": [137, 138, 302, 303, 1026], "axes_length": [137, 138, 302, 303, 1026, 1058, 1061, 1063, 1066, 1068, 1071], "arrang": [137, 138, 1026, 1058, 1061], "rearrang": [137, 138, 302, 303, 1026, 1058, 1061, 1068, 1071], "einops_reduc": [137, 138, 302, 303, 1026], "reduct": [137, 138, 147, 148, 163, 164, 170, 171, 302, 303, 312, 313, 328, 329, 338, 350, 356, 1026, 1063, 1066, 1156, 1159, 1161, 1164, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1730, 1731, 1734, 1736, 1739, 1742], "One": [137, 138, 149, 150, 153, 154, 302, 303, 314, 315, 318, 319, 338, 340, 349, 350, 354, 356, 357, 407, 417, 1026, 1063, 1066, 1487, 1523, 1526, 1595, 1601, 1604], "prod": [137, 138, 161, 162, 302, 303, 326, 327, 338, 340, 354, 1026, 1063, 1066, 1685], "einops_repeat": [137, 138, 302, 303, 1026], "fourier_encod": [137, 138, 302, 303, 1026], "max_freq": [137, 138, 302, 303, 1026, 1076, 1079], "num_band": [137, 138, 302, 303, 1026, 1076, 1079], "linear": [137, 138, 143, 144, 168, 169, 302, 303, 308, 309, 341, 348, 350, 352, 354, 357, 358, 359, 407, 417, 456, 458, 461, 463, 464, 467, 474, 477, 489, 492, 1026, 1076, 1079, 1152, 1272, 1311, 1314, 1338, 1425, 1428, 1470, 1572, 1579, 1742, 1750, 1751, 1752, 1755], "concat": [137, 138, 149, 150, 170, 171, 314, 315, 349, 352, 354, 423, 424, 670, 694, 1026, 1076, 1079, 1487, 1742], "band": [137, 138, 302, 303, 1026, 1076, 1079], "linearli": [137, 138, 302, 303, 1026, 1076, 1079, 1338, 1425, 1428], "oppos": [137, 138, 302, 303, 338, 1026, 1076, 1079], "geometr": [137, 138, 302, 303, 1026, 1076, 1079, 1338, 1450, 1454], "concaten": [137, 138, 149, 150, 349, 352, 354, 357, 1026, 1076, 1079, 1487, 1493, 1496, 1742], "seper": [137, 138, 340, 1026, 1076, 1079], "batch": [137, 138, 170, 171, 302, 303, 310, 311, 336, 345, 357, 670, 692, 693, 1026, 1076, 1079, 1083, 1086, 1219, 1272, 1318, 1321, 1338, 1460, 1464, 1568, 1569, 1570, 1571, 1590, 1591, 1594, 1750], "expand": [137, 138, 149, 150, 302, 303, 336, 1026, 1076, 1079, 1487, 1503, 1506], "gather": [137, 138, 302, 303, 1026, 1088, 1091, 1096, 1759], "gather_nd": [137, 138, 302, 303, 1026, 1742], "get_num_dim": [137, 138, 302, 303, 1026, 1742], "as_arrai": [137, 138, 302, 303, 1026, 1100, 1103, 1174], "has_nan": [137, 138, 302, 303, 1026], "include_inf": [137, 138, 302, 303, 1026, 1108, 1111, 1214, 1218], "inplace_decr": [137, 138, 302, 303, 1026], "val": [137, 138, 170, 171, 302, 303, 347, 356, 1026, 1114, 1117, 1119, 1122, 1124, 1127, 1168, 1169], "decrement": [137, 138, 302, 303, 1026, 1114, 1117], "inplace_incr": [137, 138, 302, 303, 1026], "inplace_upd": [137, 138, 302, 303, 347, 1026], "ensure_in_backend": [137, 138, 347, 1026, 1124, 1127], "inplac": [137, 138, 139, 140, 170, 171, 302, 303, 332, 334, 340, 344, 346, 349, 352, 356, 358, 1026, 1033, 1037, 1040, 1113, 1124, 1127, 1129, 1338, 1376, 1379], "is_arrai": [137, 138, 302, 303, 348, 1026], "exclus": [137, 138, 139, 140, 161, 162, 170, 171, 302, 303, 304, 305, 326, 327, 336, 338, 345, 348, 351, 359, 497, 499, 500, 1026, 1130, 1133, 1136, 1139, 1146, 1149, 1220, 1235, 1238, 1595, 1601, 1604, 1685, 1686, 1689, 1691, 1694, 1756, 1758], "trace": [137, 138, 145, 146, 170, 171, 302, 303, 310, 311, 333, 338, 354, 371, 1026, 1130, 1133, 1136, 1139, 1146, 1149, 1167, 1210, 1338, 1741, 1753, 1758], "is_ivy_arrai": [137, 138, 302, 303, 347, 356, 1026], "is_ivy_contain": [137, 138, 302, 303, 1026], "is_native_arrai": [137, 138, 302, 303, 356, 1026], "scatter_flat": [137, 138, 302, 303, 1026], "occupi": [137, 138, 579, 615, 618, 626, 629, 1026, 1156, 1159, 1161, 1164], "scatter_nd": [137, 138, 302, 303, 352, 356, 1026, 1742], "arr": [137, 138, 178, 179, 338, 339, 579, 638, 641], "stable_divid": [137, 138, 302, 303, 345, 1026], "denomin": [137, 138, 151, 152, 302, 303, 316, 317, 345, 371, 1026, 1098, 1169, 1176, 1179, 1590, 1591, 1594, 1749], "min_denomin": [137, 138, 302, 303, 1026, 1176, 1179], "_min_denomin": [137, 138, 302, 303, 1026, 1176, 1179], "stable_pow": [137, 138, 302, 303, 1026], "min_bas": [137, 138, 302, 303, 1026, 1181, 1184], "_min_bas": [137, 138, 151, 152, 302, 303, 316, 317, 1026, 1181, 1184, 1590, 1591, 1594], "supports_inplace_upd": [137, 138, 302, 303, 1026], "supports_inplac": [137, 138, 302, 303], "to_list": [137, 138, 302, 303, 1026, 1742], "represent": [137, 138, 167, 170, 171, 172, 173, 302, 303, 370, 496, 579, 580, 581, 615, 618, 626, 629, 670, 672, 673, 704, 705, 708, 720, 723, 750, 753, 765, 768, 775, 778, 915, 918, 930, 933, 1026, 1032, 1192, 1196, 1750, 1751, 1753, 1757, 1758], "to_numpi": [137, 138, 302, 303, 357, 1026, 1742], "to_scalar": [137, 138, 302, 303, 1026], "value_is_nan": [137, 138, 302, 303, 1026], "92": [137, 138, 318, 319, 1220, 1249, 1252, 1338, 1349, 1352], "adam_step": [139, 140, 304, 305, 1220], "mw": [139, 140, 304, 305, 358, 1220, 1221, 1224, 1225, 1228], "vw": [139, 140, 304, 305, 358, 1220, 1221, 1224, 1225, 1228], "beta1": [139, 140, 304, 305, 358, 1026, 1033, 1220, 1221, 1224, 1225, 1228, 1241, 1244], "beta2": [139, 140, 304, 305, 358, 1026, 1033, 1220, 1221, 1224, 1225, 1228, 1241, 1244], "999": [139, 140, 182, 183, 304, 305, 358, 704, 1010, 1014, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1249, 1252], "epsilon": [139, 140, 145, 146, 147, 148, 151, 152, 304, 305, 310, 311, 312, 313, 316, 317, 336, 345, 347, 358, 1026, 1033, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1338, 1395, 1398, 1410, 1413, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1590, 1591, 1594], "1e": [139, 140, 147, 148, 151, 152, 304, 305, 312, 313, 316, 317, 336, 345, 347, 349, 358, 359, 579, 615, 618, 704, 885, 888, 1026, 1097, 1098, 1168, 1169, 1173, 1176, 1179, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1249, 1252, 1338, 1430, 1434, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1590, 1591, 1594, 1742], "07": [139, 140, 147, 148, 182, 183, 304, 305, 312, 313, 318, 319, 358, 704, 740, 743, 875, 878, 895, 898, 975, 978, 1220, 1221, 1224, 1225, 1228, 1230, 1231, 1234, 1240, 1241, 1244, 1260, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "cost": [139, 140, 304, 305, 352, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1568, 1569, 1570, 1571, 1750], "weight": [139, 140, 143, 144, 151, 152, 304, 305, 308, 309, 316, 317, 336, 345, 354, 358, 359, 407, 411, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1272, 1318, 1321, 1323, 1326, 1333, 1336, 1590, 1591, 1594, 1751], "dc": [139, 140, 304, 305, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252], "dw": [139, 140, 304, 305, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252], "averag": [139, 140, 304, 305, 407, 408, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1568, 1569, 1570], "forget": [139, 140, 304, 305, 338, 1220, 1221, 1224, 1225, 1228, 1241, 1244], "adam": [139, 140, 304, 305, 357, 358, 359, 1026, 1033, 1220, 1221, 1224, 1225, 1228, 1241, 1244, 1742, 1752], "delta": [139, 140, 304, 305, 1220, 1221, 1224], "dcdw": [139, 140, 304, 305, 1220, 1221, 1224, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248], "adam_step_delta": [139, 140, 304, 305, 1220, 1221, 1224], "182": [139, 140, 1220, 1221, 1224], "adam_upd": [139, 140, 304, 305, 358, 1220], "lr": [139, 140, 304, 305, 357, 358, 1026, 1033, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252], "mw_tm1": [139, 140, 304, 305, 1220, 1225, 1228, 1241, 1244], "vw_tm1": [139, 140, 304, 305, 1220, 1225, 1228, 1241, 1244], "stop_gradi": [139, 140, 304, 305, 358, 670, 694, 1026, 1033, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1568, 1569, 1570, 1571, 1742], "rate": [139, 140, 304, 305, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1568, 1569, 1570, 1571], "stop": [139, 140, 176, 177, 304, 305, 344, 352, 354, 371, 497, 499, 500, 532, 533, 535, 536, 670, 671, 694, 1220, 1225, 1228, 1231, 1234, 1241, 1244, 1245, 1248, 1249, 1252, 1254, 1258, 1568, 1569, 1570, 1571, 1572, 1583, 1752], "ws_new": [139, 140, 304, 305, 1220, 1225, 1228, 1241, 1244, 1245, 1248, 1249, 1252], "gradient_descent_upd": [139, 140, 304, 305, 1220, 1568, 1569, 1570, 1571, 1742], "handl": [139, 140, 167, 170, 171, 172, 173, 332, 336, 338, 339, 344, 345, 346, 347, 348, 349, 350, 352, 358, 494, 495, 670, 672, 673, 674, 675, 676, 679, 684, 688, 689, 700, 703, 1749, 1759], "higher": [139, 140, 353, 354, 359, 371, 1749, 1752, 1753, 1756, 1758, 1759], "descent": [139, 140, 304, 305, 358, 1220, 1231, 1234, 1752], "new_weight": [139, 140, 304, 305, 357, 1220, 1231, 1234, 1241, 1244], "95": [139, 140, 153, 154, 304, 305, 318, 319, 456, 458, 461, 704, 975, 978, 1220, 1221, 1224, 1231, 1234, 1249, 1252, 1595, 1606, 1609], "97": [139, 140, 182, 183, 304, 305, 318, 319, 704, 730, 733, 1220, 1231, 1234], "96": [139, 140, 182, 183, 272, 273, 302, 303, 318, 319, 704, 785, 788, 1005, 1009, 1026, 1063, 1066, 1220, 1231, 1234, 1338, 1405, 1408, 1685, 1696, 1699], "is_vari": [139, 140, 304, 305, 347, 1220], "trainabl": [139, 140, 304, 305, 341, 355, 357, 358, 1220, 1235, 1238], "is_var": [139, 140, 304, 305, 1220, 1235, 1238], "lamb_upd": [139, 140, 304, 305, 1220], "max_trust_ratio": [139, 140, 304, 305, 1220, 1241, 1244], "decay_lambda": [139, 140, 304, 305, 1220, 1241, 1244, 1245, 1248], "trust": [139, 140, 304, 305, 1220, 1241, 1244], "ratio": [139, 140, 304, 305, 1220, 1241, 1244], "decai": [139, 140, 304, 305, 1220, 1241, 1244, 1245, 1248], "lamb": [139, 140, 304, 305, 358, 1220, 1241, 1244], "784": [139, 140, 1220, 1241, 1244], "78": [139, 140, 704, 775, 778, 875, 878, 880, 883, 975, 978, 1220, 1241, 1244, 1338, 1405, 1408, 1595, 1606, 1609, 1685, 1696, 1699], "02": [139, 140, 151, 152, 153, 154, 182, 183, 304, 305, 318, 319, 704, 895, 898, 1026, 1176, 1179, 1220, 1221, 1224, 1241, 1244, 1590, 1591, 1594, 1595, 1611, 1614], "01": [139, 140, 304, 305, 318, 319, 335, 359, 407, 413, 704, 895, 898, 970, 973, 975, 978, 1026, 1176, 1179, 1220, 1221, 1224, 1241, 1244, 1338, 1435, 1439, 1595, 1606, 1609], "04": [139, 140, 304, 305, 349, 350, 456, 469, 472, 579, 615, 618, 704, 820, 823, 885, 888, 1026, 1168, 1173, 1220, 1221, 1224, 1241, 1244, 1272, 1333, 1336], "0e": [139, 140, 304, 305, 1220, 1241, 1244], "lars_upd": [139, 140, 304, 305, 1220], "lar": [139, 140, 304, 305, 358, 1220, 1245, 1248], "optimizer_upd": [139, 140, 304, 305, 1220], "effective_grad": [139, 140, 304, 305, 1220, 1249, 1252], "3e": [139, 140, 304, 305, 1220, 1249, 1252], "preserve_typ": [139, 140, 304, 305, 1220, 1254, 1258], "preserv": [139, 140, 167, 170, 171, 172, 173, 304, 305, 350, 359, 371, 423, 425, 426, 1220, 1254, 1258, 1487, 1508, 1511], "variable_data": [139, 140, 304, 305, 1220], "intern": [139, 140, 170, 171, 304, 305, 334, 336, 339, 341, 347, 1220, 1266, 1270, 1572, 1573, 1582, 1583], "conv1d": [143, 144, 308, 309, 1272], "dilat": [143, 144, 280, 281, 308, 309, 1272, 1273, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1305, 1306, 1309], "fw": [143, 144, 308, 309, 349, 350, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309], "d_out": [143, 144, 308, 309, 1272, 1274, 1277, 1279, 1282, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304], "wio": [143, 144, 1272, 1274, 1277], "conv1d_transpos": [143, 144, 308, 309, 1272], "output_shap": [143, 144, 308, 309, 1272, 1273, 1279, 1282, 1289, 1291, 1298, 1301, 1304], "conv2d": [143, 144, 308, 309, 1272, 1742], "fh": [143, 144, 308, 309, 1272, 1284, 1287, 1289, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1306, 1309], "hwio": [143, 144, 1272, 1284, 1287], "conv3d": [143, 144, 308, 309, 1272], "conv3d_transpos": [143, 144, 308, 309, 1272], "depthwise_conv2d": [143, 144, 308, 309, 1272, 1742], "255": [143, 144, 308, 309, 704, 770, 773], "random_norm": [143, 144, 153, 154, 308, 309, 318, 319, 1272, 1298, 1301, 1306, 1309, 1338, 1430, 1434, 1595, 1648, 1649, 1653], "std": [143, 144, 153, 154, 161, 162, 308, 309, 318, 319, 326, 327, 340, 439, 440, 1272, 1298, 1301, 1306, 1309, 1595, 1601, 1604, 1606, 1609, 1648, 1649, 1653, 1685], "dropout": [143, 144, 308, 309, 357, 1272], "prob": [143, 144, 308, 309, 318, 319, 1272, 1311, 1314, 1595, 1596, 1599], "scale": [143, 144, 304, 305, 308, 309, 419, 421, 670, 692, 693, 1220, 1245, 1248, 1272, 1311, 1314, 1328, 1331, 1333, 1336, 1752, 1754], "bia": [143, 144, 151, 152, 308, 309, 316, 317, 354, 358, 1026, 1152, 1272, 1318, 1321, 1323, 1326, 1590, 1591, 1594], "transform": [143, 144, 308, 309, 359, 370, 1272, 1311, 1314, 1318, 1321, 1741, 1750, 1752, 1753, 1754], "outer_batch_shap": [143, 144, 308, 309, 1272, 1318, 1321], "inner_batch_shap": [143, 144, 308, 309, 1272, 1318, 1321], "in_featur": [143, 144, 308, 309, 1272, 1318, 1321], "out_featur": [143, 144, 308, 309, 1272, 1311, 1314, 1318, 1321], "84": [143, 144, 182, 183, 316, 317, 318, 319, 579, 626, 629, 670, 681, 1338, 1405, 1408, 1590, 1591, 1594, 1685, 1696, 1699], "133": [143, 144, 1026, 1048, 1051], "134": [143, 144], "lstm_updat": [143, 144, 308, 309, 354, 1272], "init_h": [143, 144, 308, 309, 354, 1272, 1323, 1326], "init_c": [143, 144, 308, 309, 354, 1272, 1323, 1326], "recurrent_kernel": [143, 144, 308, 309, 354, 1272, 1323, 1326], "recurrent_bia": [143, 144, 308, 309, 354, 1272, 1323, 1326], "multi_head_attent": [143, 144, 308, 309, 347, 1272], "num_head": [143, 144, 308, 309, 1272, 1328, 1331], "mask": [143, 144, 308, 309, 352, 1026, 1096, 1272, 1328, 1331, 1333, 1336], "to_q_fn": [143, 144, 308, 309, 1272, 1328, 1331], "to_kv_fn": [143, 144, 308, 309, 1272, 1328, 1331], "to_out_fn": [143, 144, 308, 309, 347, 1272, 1328, 1331], "to_q_v": [143, 144, 308, 309, 1272, 1328, 1331], "to_kv_v": [143, 144, 308, 309, 1272, 1328, 1331], "to_out_v": [143, 144, 308, 309, 1272, 1328, 1331], "scaled_dot_product_attent": [143, 144, 308, 309, 1272], "choleski": [145, 146, 310, 311, 347, 1338], "symmetr": [145, 146, 280, 281, 310, 311, 336, 407, 410, 411, 412, 413, 417, 1338, 1339, 1342, 1364, 1367, 1368, 1370, 1465, 1469], "625": [145, 146, 1338, 1339, 1342], "cross": [145, 146, 147, 148, 310, 311, 312, 313, 337, 1338, 1471, 1472, 1475, 1477, 1480, 1482, 1485, 1742], "vif": [145, 146, 310, 311, 1338, 1344, 1347], "det": [145, 146, 310, 311, 1338], "axis1": [145, 146, 149, 150, 310, 311, 314, 315, 1338, 1359, 1362, 1445, 1449, 1487, 1548, 1552], "axis2": [145, 146, 310, 311, 1338, 1359, 1362, 1445, 1449], "eigh": [145, 146, 310, 311, 1338], "eigvalsh": [145, 146, 1338], "inv": [145, 146, 310, 311, 1338, 1742], "adjoint": [145, 146, 310, 311, 1338, 1376, 1379, 1430, 1434], "matmul": [145, 146, 310, 311, 335, 350, 351, 354, 1026, 1219, 1338, 1430, 1434, 1742], "matrix_norm": [145, 146, 310, 311, 1338], "ord": [145, 146, 310, 311, 1338, 1386, 1389, 1460, 1464], "fro": [145, 146, 310, 311, 1338, 1386, 1389], "liter": [145, 146, 310, 311, 343, 407, 417, 1338, 1386, 1389, 1460, 1464], "nuc": [145, 146, 310, 311, 1338, 1386, 1389], "matrix_rank": [145, 146, 310, 311, 1338], "atol": [145, 146, 310, 311, 1338, 1395, 1398], "rtol": [145, 146, 310, 311, 349, 1338, 1395, 1398, 1410, 1413], "rank": [145, 146, 149, 150, 163, 164, 310, 311, 314, 315, 328, 329, 407, 417, 497, 538, 541, 1338, 1344, 1347, 1354, 1357, 1395, 1398, 1415, 1418, 1425, 1428, 1445, 1449, 1455, 1459, 1460, 1464, 1487, 1498, 1501, 1503, 1506, 1543, 1546, 1558, 1562, 1563, 1567, 1622, 1638, 1641, 1730, 1731, 1734, 1736, 1739], "singular": [145, 146, 310, 311, 338, 1338, 1386, 1389, 1395, 1398, 1410, 1413, 1430, 1434, 1435, 1439], "toler": [145, 146, 310, 311, 333, 349, 1338, 1395, 1398, 1410, 1413, 1752], "largest_singular_valu": [145, 146, 310, 311, 1338, 1395, 1398, 1410, 1413], "ep": [145, 146, 310, 311, 579, 615, 618, 1338, 1395, 1398, 1410, 1413], "defici": [145, 146, 1338, 1395, 1398], "matrix_transpos": [145, 146, 310, 311, 356, 1338], "pinv": [145, 146, 310, 311, 1338, 1742], "0426": [145, 146, 310, 311, 1595, 1606, 1609], "0964": [145, 146, 310, 311], "0605": [145, 146, 310, 311], "1368": [145, 146, 310, 311], "qr": [145, 146, 310, 311, 1338], "slogdet": [145, 146, 310, 311, 1338], "namedtupl": [145, 146, 157, 158, 310, 311, 322, 323, 1338, 1364, 1367, 1415, 1418, 1420, 1423, 1430, 1434, 1648, 1649, 1653, 1654, 1658, 1659, 1663], "logabsdet": [145, 146, 310, 311, 1338, 1420, 1423], "6931472": [145, 146, 1338, 1420, 1423], "solv": [145, 146, 310, 311, 333, 348, 355, 370, 1338, 1754], "svd": [145, 146, 310, 311, 1338, 1435, 1439, 1742], "compute_uv": [145, 146, 310, 311, 1338, 1430, 1434], "full_matric": [145, 146, 310, 311, 1338, 1430, 1434], "svdval": [145, 146, 310, 311, 1338], "tensordot": [145, 146, 310, 311, 338, 1338], "vander": [145, 146, 310, 311, 1338], "vandermond": [145, 146, 310, 311, 1338, 1450, 1454], "column": [145, 146, 310, 311, 387, 388, 423, 425, 426, 428, 497, 518, 519, 1338, 1364, 1367, 1386, 1389, 1415, 1418, 1425, 1428, 1430, 1434, 1450, 1454], "len": [145, 146, 310, 311, 336, 347, 348, 350, 356, 359, 497, 538, 541, 1338, 1450, 1454], "vecdot": [145, 146, 310, 311, 1338], "vector_norm": [145, 146, 310, 311, 1338], "vector_to_skew_symmetric_matrix": [145, 146, 310, 311, 1338, 1742], "binary_cross_entropi": [147, 148, 312, 313, 1471], "pred": [147, 148, 312, 313, 336, 345, 347, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "predict": [147, 148, 312, 313, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "amount": [147, 148, 312, 313, 339, 349, 670, 700, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "smooth": [147, 148, 312, 313, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "binari": [147, 148, 312, 313, 704, 750, 753, 765, 768, 775, 778, 915, 918, 1471, 1472, 1475], "entropi": [147, 148, 312, 313, 1471, 1472, 1475, 1477, 1480, 1482, 1485], "357": [147, 148, 312, 313, 1471, 1472, 1475, 1482, 1485], "223": [147, 148, 312, 313, 1471, 1472, 1475], "cross_entropi": [147, 148, 312, 313, 336, 345, 347, 1471, 1482, 1485], "3862944": [147, 148, 1471, 1477, 1480], "sparse_cross_entropi": [147, 148, 312, 313, 1471], "logit": [147, 148, 312, 313, 1471, 1482, 1485], "x_min": [149, 150, 314, 315, 359, 1487, 1488, 1491], "x_max": [149, 150, 314, 315, 359, 1487, 1488, 1491], "join": [149, 150, 170, 171, 342, 1487, 1493, 1496, 1543, 1546, 1742], "count": [149, 150, 157, 158, 163, 164, 314, 315, 322, 323, 328, 329, 336, 340, 357, 670, 688, 1338, 1455, 1459, 1487, 1493, 1496, 1508, 1511, 1648, 1649, 1653, 1654, 1658, 1730, 1731, 1734, 1736, 1739], "constant_pad": [149, 150, 314, 315, 1487], "expand_dim": [149, 150, 314, 315, 348, 354, 357, 1272, 1306, 1309, 1487, 1742], "permute_dim": [149, 150, 314, 315, 1487], "valueerror": [149, 150, 302, 303, 314, 315, 342, 1026, 1186, 1190, 1487, 1523, 1526, 1538, 1541], "reus": [149, 150, 314, 315, 342, 350, 1487, 1523, 1526, 1757], "memori": [149, 150, 314, 315, 338, 339, 347, 348, 352, 354, 369, 371, 497, 538, 541, 670, 674, 689, 694, 700, 703, 1272, 1323, 1326, 1487, 1523, 1526, 1742, 1752, 1754, 1755, 1756], "buffer": [149, 150, 314, 315, 371, 1487, 1523, 1526], "roll": [149, 150, 314, 315, 336, 344, 1487], "larger": [149, 150, 161, 162, 314, 315, 326, 327, 350, 579, 615, 618, 1487, 1488, 1491, 1528, 1531, 1685, 1716, 1719, 1725, 1729, 1759], "restor": [149, 150, 314, 315, 1487, 1528, 1531], "num_or_size_split": [149, 150, 170, 171, 314, 315, 354, 1487, 1533, 1536], "with_remaind": [149, 150, 170, 171, 314, 315, 1487, 1533, 1536], "entri": [149, 150, 170, 171, 314, 315, 423, 425, 426, 497, 532, 533, 535, 536, 1487, 1533, 1536, 1572, 1585, 1752], "squeez": [149, 150, 314, 315, 1487, 1742, 1752], "swapax": [149, 150, 314, 315, 1487], "axis0": [149, 150, 314, 315, 1487, 1548, 1552], "swap_ax": [149, 150], "tile": [149, 150, 302, 303, 314, 315, 1487, 1742], "rep": [149, 150, 314, 315, 1487, 1553, 1557], "unpack": [149, 150, 314, 315, 343, 349, 350, 1487, 1558, 1562], "zero_pad": [149, 150, 314, 315, 1487, 1742], "layer_norm": [151, 152, 316, 317, 1590], "normalized_idx": [151, 152, 316, 317, 1590, 1591, 1594], "new_std": [151, 152, 316, 317, 1590, 1591, 1594], "learnabl": [151, 152, 316, 317, 359, 1590, 1591, 1594], "gamma": [151, 152, 153, 154, 316, 317, 439, 1590, 1591, 1594], "0976": [151, 152, 1590, 1591, 1594], "3452": [151, 152, 1590, 1591, 1594], "2740": [151, 152, 1590, 1591, 1594], "1047": [151, 152, 1590, 1591, 1594], "5886": [151, 152, 1590, 1591, 1594], "2732": [151, 152, 1590, 1591, 1594], "7696": [151, 152, 1590, 1591, 1594], "7024": [151, 152, 1590, 1591, 1594], "2518": [151, 152, 1590, 1591, 1594], "826": [151, 152, 1590, 1591, 1594], "178": [151, 152, 1590, 1591, 1594], "981": [151, 152, 1590, 1591, 1594], "831": [151, 152, 1590, 1591, 1594], "421": [151, 152, 1590, 1591, 1594], "parameter": [153, 154, 318, 319, 1595, 1606, 1609, 1611, 1614], "multinomi": [153, 154, 318, 319, 439, 441, 1595], "population_s": [153, 154, 318, 319, 1595, 1596, 1599], "num_sampl": [153, 154, 318, 319, 1595, 1596, 1599], "unnorm": [153, 154, 318, 319, 350, 1595, 1596, 1599], "popul": [153, 154, 161, 162, 170, 171, 318, 319, 326, 327, 338, 339, 350, 354, 1595, 1596, 1599, 1685, 1716, 1719, 1725, 1729, 1758], "uniform": [153, 154, 318, 319, 358, 1595, 1596, 1599, 1601, 1604, 1611, 1614, 1759], "batch_shap": [153, 154, 176, 177, 318, 319, 352, 354, 356, 497, 518, 519, 548, 551, 1272, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1465, 1469, 1595, 1596, 1599], "independ": [153, 154, 318, 319, 333, 338, 340, 346, 354, 359, 1338, 1344, 1347, 1425, 1428, 1595, 1596, 1599, 1750], "highest": [153, 154, 318, 319, 1595, 1601, 1604], "low": [153, 154, 318, 319, 336, 348, 352, 354, 1595, 1601, 1604, 1611, 1614, 1748, 1750, 1752, 1753, 1754, 1756, 1758], "half": [153, 154, 318, 319, 352, 497, 499, 500, 1595, 1601, 1604, 1611, 1614], "int16": [153, 154, 178, 179, 318, 319, 338, 350, 354, 579, 597, 600, 608, 620, 621, 643, 646, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "int64": [153, 154, 155, 156, 159, 160, 178, 179, 318, 319, 320, 321, 324, 325, 326, 327, 338, 350, 354, 579, 597, 600, 608, 614, 620, 621, 626, 629, 648, 651, 662, 1622, 1623, 1626, 1628, 1631, 1669, 1675, 1678, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "72": [153, 154, 304, 305, 704, 815, 818, 820, 823, 1220, 1231, 1234, 1338, 1405, 1408, 1685, 1696, 1699], "235": [153, 154], "float16": [153, 154, 318, 319, 338, 350, 391, 393, 579, 603, 605, 606, 615, 618, 623, 624], "49": [153, 154, 310, 311, 456, 484, 487, 704, 990, 993, 1685, 1696, 1699], "807": [153, 154], "42": [153, 154, 168, 169, 304, 305, 316, 317, 318, 319, 354, 359, 456, 489, 492, 704, 770, 773, 1220, 1221, 1224, 1231, 1234, 1338, 1386, 1389, 1405, 1408, 1590, 1591, 1594, 1595, 1616, 1685, 1686, 1689, 1696, 1699], "random_uniform": [153, 154, 318, 319, 339, 350, 358, 1595, 1742], "boundari": [153, 154, 318, 319, 1595, 1611, 1614, 1752], "86": [153, 154, 318, 319, 1220, 1221, 1224], "06": [153, 154, 182, 183, 304, 305, 350, 357, 456, 458, 461, 579, 615, 618, 1220, 1241, 1244], "53": [153, 154, 182, 183, 670, 700, 1220, 1230, 1240, 1260, 1590, 1591, 1594], "argmax": [155, 156, 320, 321, 1622, 1742], "output_dtyp": [155, 156, 320, 321, 1622, 1623, 1626, 1628, 1631], "insert": [155, 156, 320, 321, 1487, 1503, 1506, 1572, 1577, 1622, 1623, 1626, 1669, 1675, 1678], "occurr": [155, 156, 1622, 1623, 1626, 1628, 1631, 1648, 1649, 1653], "argmin": [155, 156, 320, 321, 1622, 1742], "singleton": [155, 156, 161, 162, 163, 164, 310, 311, 320, 321, 326, 327, 328, 329, 354, 1338, 1460, 1464, 1487, 1503, 1506, 1538, 1541, 1622, 1628, 1631, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "accordingli": [155, 156, 161, 162, 163, 164, 310, 311, 320, 321, 326, 327, 328, 329, 343, 348, 354, 497, 538, 541, 704, 820, 823, 885, 888, 1338, 1460, 1464, 1622, 1628, 1631, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1712, 1715, 1716, 1719, 1720, 1724, 1725, 1729, 1730, 1731, 1734, 1736, 1739], "argwher": [155, 156, 320, 321, 343, 1622], "nonzero": [155, 156, 320, 321, 704, 720, 723, 930, 933, 1622], "as_tupl": [155, 156, 320, 321, 1622, 1638, 1641], "fewer": [155, 156, 320, 321, 1622, 1638, 1641], "yield": [155, 156, 337, 343, 407, 417, 423, 431, 432, 1622, 1643, 1647], "unique_al": [157, 158, 322, 323, 1648], "unique_count": [157, 158, 322, 323, 1648], "field": [157, 158, 322, 323, 370, 1338, 1364, 1367, 1415, 1418, 1430, 1434, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1750, 1758], "unique_invers": [157, 158, 322, 323, 1648], "inverse_indic": [157, 158, 322, 323, 1648, 1649, 1653, 1659, 1663], "reconstruct": [157, 158, 322, 323, 1338, 1430, 1434, 1648, 1649, 1653, 1659, 1663], "unique_valu": [157, 158, 322, 323, 1648], "argsort": [159, 160, 324, 325, 1669, 1675, 1678], "descend": [159, 160, 324, 325, 1338, 1430, 1434, 1435, 1439, 1669, 1670, 1673, 1680, 1683], "ascend": [159, 160, 324, 325, 1669, 1670, 1673, 1675, 1678], "stabil": [159, 160, 324, 325, 338, 352, 1026, 1176, 1179, 1181, 1184, 1669, 1670, 1673, 1680, 1683], "searchsort": [159, 160, 324, 325, 1669], "sorter": [159, 160, 324, 325, 1669, 1675, 1678], "ret_dtyp": [159, 160, 324, 325, 1669, 1675, 1678], "cumprod": [161, 162, 326, 327, 348, 359, 1685], "cumul": [161, 162, 326, 327, 370, 1685, 1686, 1689, 1691, 1694], "120": [161, 162, 167, 172, 173, 326, 327, 1338, 1405, 1408], "cumsum": [161, 162, 326, 327, 338, 1685, 1742], "einsum": [161, 162, 326, 327, 1685], "equat": [161, 162, 280, 281, 326, 327, 407, 410, 1338, 1425, 1428, 1685, 1696, 1699, 1752], "arithmet": [161, 162, 326, 327, 348, 704, 770, 773, 1685, 1704, 1707], "x_i": [161, 162, 182, 183, 341, 391, 403, 704, 705, 708, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 755, 758, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 845, 848, 850, 853, 855, 858, 860, 863, 875, 878, 880, 883, 885, 888, 890, 893, 905, 908, 935, 938, 970, 973, 975, 978, 980, 983, 985, 988, 990, 993, 995, 998, 1005, 1009, 1010, 1014, 1015, 1019, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729], "propag": [161, 162, 704, 770, 773, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719, 1720, 1724, 1725, 1729], "varianc": [161, 162, 326, 327, 1685, 1725, 1729], "freedom": [161, 162, 326, 327, 335, 1685, 1716, 1719, 1725, 1729], "constitut": [161, 162, 326, 327, 345, 354, 1685, 1716, 1719, 1725, 1729, 1753], "unbias": [161, 162, 326, 327, 1685, 1725, 1729], "commonli": [161, 162, 326, 327, 342, 345, 1685, 1716, 1719, 1725, 1729], "6666665": [161, 162, 357, 1685, 1725, 1729], "08": [161, 162, 318, 319, 704, 730, 733, 820, 823, 1272, 1333, 1336], "667": [161, 162, 302, 303, 704, 800, 803, 1026, 1176, 1179, 1648, 1649, 1653, 1685, 1725, 1729], "AND": [163, 164, 328, 329, 704, 750, 753, 900, 903, 1730, 1731, 1734], "backward": [163, 164, 328, 329, 371, 704, 965, 968, 1338, 1455, 1459, 1730, 1731, 1734, 1736, 1739], "add_ivy_array_instance_method": 165, "cl": [165, 166, 330, 331], "to_ignor": [165, 166, 330, 331, 1572, 1583], "loop": [165, 166, 330, 331, 335, 343, 371, 1568, 1569, 1570, 1571], "_wrap_funct": [165, 166, 330, 331, 345, 346], "toi": [165, 166, 330, 331], "arrayexampl": [165, 166], "hasattr": [165, 166, 330, 331], "dict_in": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "queue": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 357, 1026, 1105, 1171, 1212], "queue_load_s": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "container_combine_method": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "list_join": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "queue_timeout": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "print_limit": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "key_length_limit": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "print_ind": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "print_line_spac": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "ivyh": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "default_key_color": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "keyword_color_dict": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "rebuild_child_contain": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "types_to_iteratively_nest": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "alphabetical_kei": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "containerwithactiv": [167, 168, 172, 173], "containerwithconvers": [167, 172, 173, 174], "containerwithcr": [167, 172, 173, 176], "containerwithdatatyp": [167, 172, 173, 178], "containerwithdevic": [167, 172, 173, 180], "containerwithelementwis": [167, 172, 173, 182, 336], "containerwithgener": [167, 172, 173, 302], "containerwithgradi": [167, 172, 173, 304], "containerwithimag": [167, 172, 173, 306], "containerwithlay": [167, 172, 173, 308], "containerwithlinalg": [167, 172, 173, 310], "containerwithloss": [167, 172, 173, 312], "containerwithnorm": [167, 172, 173, 316], "containerwithrandom": [167, 172, 173, 318], "containerwithsearch": [167, 172, 173, 320], "containerwithset": [167, 172, 173, 322], "containerwithsort": [167, 172, 173, 324], "containerwithstatist": [167, 172, 173, 326], "containerwithutil": [167, 172, 173, 328], "containerwithactivationextens": [167, 172, 173, 185], "containerwithconversionextens": [167, 172, 173, 264], "containerwithcreationextens": [167, 172, 173, 266], "containerwithdata_typeextens": [167, 172, 173, 268], "containerwithdeviceextens": [167, 172, 173, 270], "containerwithelementwiseextens": [167, 172, 173, 272], "containerwithgeneralextens": [167, 172, 173, 274], "containerwithgradientsextens": [167, 172, 173, 276], "containerwithimageextens": [167, 172, 173, 278], "containerwithlayersextens": [167, 172, 173, 280], "containerwithlinalgextens": [167, 172, 173, 282], "containerwithlossesextens": [167, 172, 173, 284], "containerwithmanipulationextens": [167, 172, 173, 286], "containerwithnormsextens": [167, 172, 173, 288], "containerwithrandomextens": [167, 172, 173, 290], "containerwithsearchingextens": [167, 172, 173, 292], "containerwithsetextens": [167, 172, 173, 294], "containerwithsortingextens": [167, 172, 173, 296], "containerwithstatisticalextens": [167, 172, 173, 298], "containerwithutilityextens": [167, 172, 173, 300], "dictionari": [167, 170, 171, 172, 173, 338, 357, 371, 456, 457, 463, 670, 693, 1220, 1229], "multiprocess": [167, 170, 171, 172, 173, 357, 371, 1026], "asynchron": [167, 170, 171, 172, 173, 1752], "arriv": [167, 170, 171, 172, 173, 352, 1026, 1171], "timeout": [167, 170, 171, 172, 173, 1026, 1105, 1171, 1212], "whitespac": [167, 170, 171, 172, 173], "indent": [167, 170, 171, 172, 173, 357], "extra": [167, 170, 171, 172, 173, 334, 338, 340, 346, 348, 349, 352, 354, 1026, 1219, 1749, 1754], "newlin": [167, 170, 171, 172, 173, 341], "color": [167, 170, 171, 172, 173, 1802, 1803], "map": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336, 338, 344, 345, 348, 350, 351, 357, 370, 371, 1026, 1219, 1572, 1579, 1580, 1584, 1585, 1741, 1753], "termcolor": [167, 170, 171, 172, 173], "constructor": [167, 170, 171, 172, 173, 338, 339, 356, 1026, 1033], "alphabet": [167, 170, 171, 172, 173], "rshift": [167, 172, 173], "143": [167, 172, 173, 182, 183, 340, 704, 1005, 1009], "containerbas": [168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 336], "key_chain": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 1572, 1585], "to_appli": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 1572, 1585], "prune_unappli": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 1572, 1585], "map_sequ": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 266, 267, 272, 273, 280, 281, 282, 283, 286, 287, 290, 291, 296, 297, 298, 299, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "formul": [168, 169], "chain": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 348, 358, 359, 371, 1568, 1569, 1570, 1572, 1585, 1752], "prune": [168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 272, 273, 286, 287, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 1572, 1585, 1586, 1587], "slope": [168, 169, 456, 464, 467], "leaki": [168, 169, 456, 464, 467], "371": [168, 169], "rectifi": [168, 169, 456, 464, 467, 474, 477], "revert": [168, 169, 456, 489, 492], "535": [168, 169, 456, 489, 492], "948": [168, 169], "static_gelu": [168, 169], "static_leaky_relu": [168, 169], "static_log_softmax": [168, 169], "static_relu": [168, 169], "static_sigmoid": [168, 169], "static_softmax": [168, 169], "static_softplu": [168, 169], "__getitem__": [170, 171, 336], "queri": [170, 171, 336, 338, 356, 670, 681, 693, 1026, 1096, 1272, 1328, 1331, 1333, 1336, 1752], "slice": [170, 171, 302, 303, 387, 388, 1026, 1083, 1086, 1088, 1091, 1096, 1572, 1581, 1752], "__setitem__": [170, 171, 334, 336, 356], "all_fals": [170, 171], "assert_is_bool": [170, 171], "all_key_chain": [170, 171], "include_empti": [170, 171], "all_tru": [170, 171, 336, 357], "as_bool": [170, 171], "assert_contains_sub_contain": [170, 171], "sub_cont": [170, 171], "diff": [170, 171, 336, 340, 357], "assert_contains_sub_structur": [170, 171], "assert_ident": [170, 171], "check_typ": [170, 171], "same_arrai": [170, 171, 357], "arrays_equ": [170, 171], "assert_identical_structur": [170, 171], "at_key_chain": [170, 171], "ignore_key_error": [170, 171], "ignore_non": [170, 171], "at_kei": [170, 171], "ignor": [170, 171, 337, 340, 350, 371, 497, 538, 541, 1572, 1583, 1758], "substr": [170, 171], "duplic": [170, 171, 335, 341, 343, 346, 349, 358, 1758], "container_rightmost": [170, 171], "common_key_chain": [170, 171, 336], "cont_inplace_upd": [170, 171], "contains_sub_contain": [170, 171], "contains_sub_structur": [170, 171], "create_if_abs": [170, 171], "noth": [170, 171, 352, 1758], "cutoff_at_depth": [170, 171], "depth_cutoff": [170, 171], "cutoff_at_height": [170, 171], "height_cutoff": [170, 171], "deep_copi": [170, 171, 357], "dev_str": [170, 171], "diff_kei": [170, 171], "detect_key_diff": [170, 171], "detect_value_diff": [170, 171], "detect_shape_diff": [170, 171], "treat": [170, 171, 350, 355, 359, 391, 402, 494, 495], "container0": [170, 171], "duplicate_array_keychain": [170, 171], "find_sub_contain": [170, 171], "sub_cont_to_find": [170, 171], "exsit": [170, 171], "find_sub_structur": [170, 171], "sub_struc_to_find": [170, 171], "flatten_key_chain": [170, 171, 357], "__": [170, 171, 340, 357], "above_height": [170, 171, 357], "below_depth": [170, 171, 357], "format_key_chain": [170, 171], "format_fn": [170, 171], "string": [170, 171, 335, 338, 339, 342, 343, 354, 357, 407, 417, 456, 457, 463, 579, 580, 581, 610, 612, 632, 669, 670, 672, 673, 674, 675, 681, 689, 695, 699, 700, 703, 1026, 1054], "from_disk_as_hdf5": [170, 171, 357], "h5_obj_or_filepath": [170, 171], "slice_obj": [170, 171], "load": [170, 171, 371, 1751, 1758], "disk": [170, 171, 357, 1751], "h5py": [170, 171], "hdf5": [170, 171, 357], "h5": [170, 171], "from_disk_as_json": [170, 171, 357], "json_filepath": [170, 171], "from_disk_as_pickl": [170, 171, 357], "pickle_filepath": [170, 171], "pickl": [170, 171, 336, 357], "from_flat_list": [170, 171], "flat_list": [170, 171], "flat": [170, 171, 1026, 1156, 1159, 1487, 1518, 1521], "h5_file_s": [170, 171], "handle_inplac": [170, 171], "prime": [170, 171], "overwritten": [170, 171, 334, 335], "has_kei": [170, 171], "query_kei": [170, 171], "somewher": [170, 171], "has_key_chain": [170, 171], "identical_array_shap": [170, 171], "identical_config": [170, 171], "identical_structur": [170, 171], "if_exist": [170, 171], "key_chains_contain": [170, 171], "sub_str": [170, 171], "list_stack": [170, 171, 357], "map_cont": [170, 171], "include_self": [170, 171], "possibi": [170, 171], "max_depth": [170, 171, 1026, 1106, 1572, 1584], "multi_map": [170, 171, 336], "map_nest": [170, 171], "leftmost": [170, 171, 1572, 1585], "multi_map_in_static_method": [170, 171, 336], "fn_name": [170, 171, 335, 349, 350], "num_arrai": [170, 171, 349, 350], "overwrite_at_key_chain": [170, 171], "target_dict": [170, 171], "return_dict": [170, 171], "prune_empti": [170, 171], "keep_non": [170, 171], "prune_key_chain": [170, 171], "key1": [170, 171, 358], "key2": [170, 171], "key3": [170, 171], "prune_key_from_key_chain": [170, 171], "prune_kei": [170, 171], "prune_keys_from_key_chain": [170, 171], "remove_key_length_limit": [170, 171], "remove_print_limit": [170, 171], "reshape_lik": [170, 171], "leading_shap": [170, 171], "return_cont": [170, 171], "restructur": [170, 171], "keep_orig": [170, 171], "restructure_key_chain": [170, 171], "keychain_map": [170, 171], "set_at_key_chain": [170, 171], "set_at_kei": [170, 171], "attribut": [170, 171, 336, 338, 341, 346, 347, 355, 356, 357, 358, 579, 615, 618, 620, 621, 623, 624, 626, 629, 670, 682, 683, 690, 1026, 1081, 1082], "shared_shap": [170, 171], "show_sub_contain": [170, 171], "sub_cont_or_keychain": [170, 171], "shuffle_h5_fil": [170, 171], "seed_valu": [170, 171, 1595, 1616], "dataset": [170, 171, 357, 369, 1742], "size_ordered_arrai": [170, 171], "keychain": [170, 171], "slice_kei": [170, 171], "key_slic": [170, 171], "all_depth": [170, 171], "slice_via_kei": [170, 171], "sort_by_kei": [170, 171], "split_cont": [170, 171], "constitu": [170, 171, 359], "structural_diff": [170, 171], "to_dict": [170, 171], "to_disk_as_hdf5": [170, 171, 357], "starting_index": [170, 171], "max_batch_s": [170, 171], "to_disk_as_json": [170, 171, 357], "to_disk_as_pickl": [170, 171, 357], "to_flat_list": [170, 171], "to_iter": [170, 171, 336], "leaf_keys_onli": [170, 171], "to_iterator_kei": [170, 171], "to_iterator_valu": [170, 171], "to_json": [170, 171], "to_nested_list": [170, 171], "to_raw": [170, 171], "raw": [170, 171, 341, 1753], "trim_kei": [170, 171], "max_length": [170, 171], "trim": [170, 171], "try_kc": [170, 171], "tri": [170, 171], "concatten": [170, 171, 670, 694], "unstack_cont": [170, 171], "dim_siz": [170, 171, 1272, 1305], "update_config": [170, 171], "with_default_key_color": [170, 171], "with_entries_as_list": [170, 171], "with_ivy_backend": [170, 171], "ivy_backend": [170, 171], "with_key_length_limit": [170, 171, 357], "with_print_ind": [170, 171, 357], "with_print_limit": [170, 171, 357], "with_print_line_spac": [170, 171], "static_to_ivi": [174, 175], "static_to_n": [174, 175], "2324": [176, 177, 497, 527, 530], "234": [176, 177, 497, 527, 530, 1272, 1318, 1321], "123": [176, 177, 350, 497, 527, 530, 1026, 1073, 1075], "static_arang": [176, 177], "static_asarrai": [176, 177], "static_empty_lik": [176, 177], "static_ey": [176, 177], "n_row": [176, 177, 266, 267, 387, 388, 497, 518, 519], "n_col": [176, 177, 266, 267, 387, 388, 497, 518, 519], "static_from_dlpack": [176, 177], "static_full_lik": [176, 177], "static_linspac": [176, 177], "endpoint": [176, 177, 344, 497, 532, 533], "static_logspac": [176, 177], "static_meshgrid": [176, 177], "static_native_arrai": [176, 177], "static_one_hot": [176, 177], "static_on": [176, 177], "static_ones_lik": [176, 177], "static_tril": [176, 177], "static_triu": [176, 177], "static_zero": [176, 177], "static_zeros_lik": [176, 177], "718": [178, 179, 182, 183, 579, 582, 585, 704, 910, 913], "618": [178, 179, 182, 183, 579, 582, 585, 704, 910, 913], "broadcats": [178, 179], "1800": [178, 179, 579, 626, 629], "32768": [178, 179], "32767": [178, 179], "2147483648": [178, 179, 579, 626, 629], "2147483647": [178, 179, 579, 626, 629], "static_astyp": [178, 179], "static_broadcast_arrai": [178, 179], "And": [178, 179, 350], "static_broadcast_to": [178, 179], "static_can_cast": [178, 179], "from_": [178, 179, 579, 597, 600], "static_default_float_dtyp": [178, 179], "float_dtyp": [178, 179, 579, 605, 606, 661], "static_dtyp": [178, 179], "static_finfo": [178, 179], "static_function_supported_dtyp": [178, 179], "static_function_unsupported_dtyp": [178, 179], "static_iinfo": [178, 179], "static_is_bool_dtyp": [178, 179], "dtype_in": [178, 179, 579, 580, 581, 614, 632, 633, 636, 638, 641, 643, 646, 648, 651, 669], "static_is_float_dtyp": [178, 179], "roughli": [178, 179, 1755], "static_is_int_dtyp": [178, 179], "static_is_uint_dtyp": [178, 179], "static_result_typ": [178, 179], "static_dev": [180, 181], "static_to_devic": [180, 181], "__dlpack__": [180, 181, 497, 521, 524, 670, 695, 699], "caveat": [180, 181, 670, 695, 699], "portabl": [180, 181, 670, 695, 699, 1742, 1750], "524": [182, 183, 704, 725, 728], "644": [182, 183, 358, 704, 725, 728], "305": [182, 183, 308, 309, 704, 725, 728], "915": [182, 183, 704, 740, 743], "29": [182, 183, 302, 303, 304, 305, 318, 319, 704, 740, 743, 1026, 1063, 1066, 1220, 1241, 1244], "983": [182, 183, 704, 740, 743], "75": [182, 183, 302, 303, 308, 309, 318, 319, 407, 411, 704, 730, 733, 740, 743, 800, 803, 875, 878, 1026, 1114, 1117, 1338, 1376, 1379, 1405, 1408, 1572, 1580, 1595, 1611, 1614], "978": [182, 183, 456, 479, 482, 704, 740, 743], "696": [182, 183, 318, 319, 704, 740, 743], "993": [182, 183, 704, 740, 743], "203": [182, 183, 316, 317, 1590, 1591, 1594], "34": [182, 183, 280, 281, 302, 303, 318, 319, 579, 626, 629, 704, 775, 778, 895, 898, 990, 993, 1026, 1042, 1063, 1066, 1595, 1611, 1614], "52": [182, 183, 302, 303, 304, 305, 318, 319, 704, 740, 743, 800, 803, 1026, 1063, 1066, 1119, 1122, 1220, 1221, 1224, 1272, 1318, 1321, 1338, 1405, 1408, 1648, 1649, 1653, 1685, 1696, 1699], "351": [182, 183, 704, 795, 798], "50": [182, 183, 282, 283, 302, 303, 356, 704, 795, 798, 955, 958, 990, 993, 1026, 1088, 1091, 1114, 1117, 1119, 1122, 1161, 1164, 1176, 1179, 1338, 1376, 1379, 1405, 1408, 1572, 1574, 1622, 1638, 1641, 1685, 1696, 1699], "00613": [182, 183], "0154": [182, 183], "0262": [182, 183, 704, 795, 798, 955, 958], "873": [182, 183, 704, 795, 798, 955, 958], "333": [182, 183, 704, 800, 803, 1026, 1048, 1051, 1272, 1306, 1309], "thefunct": [182, 183], "649": [182, 183], "220": [182, 183], "959": [182, 183, 704, 980, 983], "865": [182, 183], "metho": [182, 183], "999999999999": [182, 183, 704, 845, 848], "7j": [182, 183, 704, 860, 863], "3j": [182, 183, 704, 860, 863], "0j": [182, 183, 704, 860, 863], "898": [182, 183, 704, 880, 883], "0414": [182, 183, 704, 880, 883], "956": [182, 183], "65": [182, 183, 304, 305, 318, 319, 704, 770, 773, 1026, 1114, 1117, 1220, 1221, 1224, 1338, 1405, 1408, 1685, 1696, 1699], "2860": [182, 183], "413": [182, 183], "recirpoc": [182, 183], "300": [182, 183, 302, 303, 350, 704, 970, 973, 1026, 1088, 1091, 1161, 1164, 1338, 1376, 1379], "527": [182, 183, 704, 970, 973], "301": [182, 183, 704, 970, 973], "757": [182, 183, 704, 980, 983], "279": [182, 183, 704, 980, 983, 1026, 1043, 1046], "835": [182, 183], "347": [182, 183], "721": [182, 183], "static_ab": [182, 183], "static_aco": [182, 183], "static_acosh": [182, 183], "static_add": [182, 183, 336, 340, 341], "static_asin": [182, 183], "412": [182, 183, 308, 309, 704, 725, 728], "201": [182, 183, 704, 725, 728], "static_asinh": [182, 183], "static_atan": [182, 183], "static_atan2": [182, 183], "static_atanh": [182, 183], "static_bitwise_and": [182, 183], "static_bitwise_invert": [182, 183], "static_bitwise_left_shift": [182, 183], "static_bitwise_or": [182, 183], "static_bitwise_right_shift": [182, 183], "static_bitwise_xor": [182, 183], "static_ceil": [182, 183], "static_co": [182, 183], "static_cosh": [182, 183], "static_deg2rad": [182, 183], "static_divid": [182, 183], "static_equ": [182, 183], "static_erf": [182, 183], "static_exp": [182, 183], "static_expm1": [182, 183, 704, 820, 823], "areal": [182, 183], "static_floor": [182, 183], "static_floor_divid": [182, 183], "static_great": [182, 183], "static_greater_equ": [182, 183], "static_isfinit": [182, 183], "static_isinf": [182, 183, 704, 850, 853], "static_isnan": [182, 183, 704, 855, 858], "static_isr": [182, 183], "23j": [182, 183], "9j": [182, 183, 704, 860, 863], "static_less": [182, 183], "static_less_equ": [182, 183], "static_log": [182, 183], "static_log10": [182, 183], "static_log1p": [182, 183, 704, 885, 888], "static_log2": [182, 183], "static_logaddexp": [182, 183], "static_logical_and": [182, 183], "static_logical_not": [182, 183], "static_logical_or": [182, 183, 704, 910, 913], "static_logical_xor": [182, 183], "static_maximum": [182, 183], "static_minimum": [182, 183], "static_multipli": [182, 183], "static_neg": [182, 183], "static_not_equ": [182, 183], "static_posit": [182, 183], "static_pow": [182, 183], "static_rad2deg": [182, 183], "5160": [182, 183], "10300": [182, 183, 704, 955, 958], "15500": [182, 183], "20600": [182, 183], "static_reciproc": [182, 183], "static_remaind": [182, 183], "static_round": [182, 183], "thevfunct": [182, 183], "static_sign": [182, 183], "static_sin": [182, 183], "static_sinh": [182, 183], "static_sqrt": [182, 183], "static_squar": [182, 183], "static_subtract": [182, 183], "static_tan": [182, 183, 336, 340], "static_tanh": [182, 183], "995": [182, 183, 704, 1010, 1014], "9999": [182, 183], "static_trapz": [182, 183], "static_trunc": [182, 183], "static_trunc_divid": [182, 183], "static_triu_indic": [266, 267], "triu_indic": [266, 267, 387], "1080": [272, 273], "1550": [272, 273], "130": [272, 273], "08746284": [272, 273], "32192809": [272, 273], "0707": [272, 273, 391, 403], "0579": [272, 273, 391, 403], "static_exp2": [272, 273], "static_float_pow": [272, 273], "static_fmax": [272, 273], "static_fmod": [272, 273], "static_gcd": [272, 273], "static_isneginf": [272, 273], "static_isposinf": [272, 273], "static_lcm": [272, 273], "static_logaddexp2": [272, 273], "static_nan_to_num": [272, 273], "static_nansum": [272, 273], "static_sinc": [272, 273], "636": [272, 273], "090": [272, 273], "070": [272, 273], "057": [272, 273], "avg_pool2d": [280, 281, 407], "hamming_window": [280, 281, 407], "lenght": [280, 281], "coeffici": [280, 281, 407, 410, 1338, 1425, 1428], "ham": [280, 281, 407, 410], "8000": [280, 281, 407, 410], "2000": [280, 281, 407, 410], "4180": [280, 281], "8180": [280, 281], "hann_window": [280, 281, 407], "hann": [280, 281, 407, 411], "7500": [280, 281], "3455": [280, 281], "9045": [280, 281], "kaiser_bessel_derived_window": [280, 281, 407], "spectral": [280, 281, 407, 412, 413], "analysi": [280, 281, 407, 412, 413, 1752, 1753], "kaiser": [280, 281, 407, 412, 413], "70710677": [280, 281, 407, 412], "18493208": [280, 281, 407, 412], "9827513": [280, 281, 407, 412], "kaiser_window": [280, 281, 407], "static_kaiser_window": [280, 281], "2049": [280, 281], "8712": [280, 281], "0367": [280, 281, 407, 413], "7753": [280, 281], "static_avg_pool2d": [280, 281], "static_avg_pool3d": [280, 281], "static_flatten": [280, 281], "static_hamming_window": [280, 281], "static_hann_window": [280, 281], "window_length": [280, 281, 407, 410, 411, 412, 413, 418], "static_hann": [280, 281], "static_kaiser_bessel_derived_window": [280, 281], "static_max_pool1d": [280, 281], "static_max_pool2d": [280, 281], "max_pool2dd": [280, 281], "static_max_pool3d": [280, 281], "static_pad": [280, 281], "450": [282, 283], "static_diagflat": [282, 283], "static_kron": [282, 283], "kroneck": [282, 283, 419, 421], "30192195": [286, 287], "static_fliplr": [286, 287], "static_flipud": [286, 287], "static_heavisid": [286, 287], "static_hstack": [286, 287], "static_i0": [286, 287], "static_moveaxi": [286, 287, 298, 299], "static_rot90": [286, 287], "static_top_k": [286, 287], "static_vstack": [286, 287], "43643127": [290, 291], "32325703": [290, 291], "24031169": [290, 291], "34251311": [290, 291], "31692529": [290, 291], "3405616": [290, 291], "5319725": [290, 291], "22458365": [290, 291], "24344385": [290, 291], "26588406": [290, 291], "61075421": [290, 291], "12336174": [290, 291], "51142915": [290, 291], "25041268": [290, 291], "23815817": [290, 291], "64042903": [290, 291], "25763214": [290, 291], "10193883": [290, 291], "31624692": [290, 291], "46567987": [290, 291], "21807321": [290, 291], "37677699": [290, 291], "39914594": [290, 291], "22407707": [290, 291], "static_dirichlet": [290, 291], "static_msort": [296, 297], "static_median": [298, 299], "static_all_equ": [302, 303], "833": [302, 303], "200": [302, 303, 357, 704, 770, 773, 1026, 1088, 1091, 1161, 1164], "400": [302, 303, 1026, 1088, 1091, 1161, 1164, 1338, 1376, 1379], "500": [302, 303, 1026, 1088, 1091], "600": [302, 303], "700": [302, 303], "static_assert_supports_inplac": [302, 303], "static_clip_matrix_norm": [302, 303], "849": [302, 303, 1026, 1043, 1046, 1048, 1051], "static_clip_vector_norm": [302, 303], "static_einops_rearrang": [302, 303], "static_einops_reduc": [302, 303], "93": [302, 303, 318, 319, 670, 681, 704, 990, 993, 1026, 1063, 1066], "66": [302, 303, 304, 305, 704, 775, 778, 1026, 1063, 1066, 1220, 1231, 1234, 1338, 1405, 1408, 1685, 1696, 1699], "static_einops_repeat": [302, 303], "static_fourier_encod": [302, 303], "static_gath": [302, 303], "static_gather_nd": [302, 303], "static_get_num_dim": [302, 303], "static_has_nan": [302, 303], "leafwis": [302, 303], "static_inplace_decr": [302, 303], "static_inplace_incr": [302, 303], "static_inplace_upd": [302, 303], "static_is_arrai": [302, 303], "static_is_ivy_arrai": [302, 303], "static_is_ivy_contain": [302, 303], "static_is_native_arrai": [302, 303], "static_scatter_flat": [302, 303], "ref": [302, 303, 310, 311, 341, 354, 704, 865, 868, 940, 943, 965, 968, 1000, 1004, 1487, 1543, 1546], "static_scatter_nd": [302, 303], "static_stable_divid": [302, 303], "22222222": [302, 303], "11111111": [302, 303], "857": [302, 303, 1026, 1176, 1179, 1648, 1649, 1653], "444": [302, 303], "static_stable_pow": [302, 303], "static_supports_inplace_upd": [302, 303], "static_to_list": [302, 303], "static_to_numpi": [302, 303], "static_to_scalar": [302, 303], "static_value_is_nan": [302, 303], "452": [302, 303], "425": [302, 303], "87": [304, 305, 704, 770, 773, 885, 888, 1220, 1221, 1224], "976": [304, 305, 704, 1010, 1014, 1220, 1221, 1224], "49e": [304, 305, 1220, 1221, 1224], "74e": [304, 305, 1220, 1221, 1224], "95e": [304, 305, 1220, 1221, 1224], "024": [304, 305, 1220, 1221, 1224], "096": [304, 305, 704, 795, 798, 1220, 1221, 1224], "216": [304, 305, 310, 311, 1220, 1221, 1224], "384": [304, 305, 1220, 1221, 1224], "626": [304, 305, 1220, 1221, 1224], "en": [304, 305, 1220, 1221, 1224, 1225, 1228, 1338, 1465, 1469], "wikipedia": [304, 305, 1220, 1221, 1224, 1225, 1228, 1338, 1465, 1469], "wiki": [304, 305, 1220, 1221, 1224, 1225, 1228, 1338, 1465, 1469], "stochastic_gradient_desc": [304, 305, 1220, 1221, 1224, 1225, 1228], "w_new": [304, 305, 1220, 1231, 1234], "88": [304, 305, 318, 319, 456, 464, 467, 704, 775, 778, 1220, 1231, 1234, 1338, 1405, 1408, 1435, 1439, 1595, 1611, 1614, 1685, 1696, 1699], "708": [304, 305, 1220, 1241, 1244], "445": [304, 305, 1220, 1241, 1244], "6e": [304, 305, 1220, 1241, 1244], "00036": [304, 305, 1220, 1241, 1244], "00016": [304, 305, 1220, 1241, 1244], "00049": [304, 305, 1220, 1241, 1244], "layerwis": [304, 305, 1220, 1245, 1248], "static_is_vari": [304, 305], "static_stop_gradi": [304, 305], "static_vari": [304, 305], "static_variable_data": [304, 305], "ey": [308, 309, 352, 359, 497, 1272, 1284, 1287, 1306, 1309], "conv2d_transpos": [308, 309, 1272], "inp": [308, 309, 1272, 1306, 1309], "278": [308, 309, 1272, 1318, 1321], "105": [308, 309, 1272, 1318, 1321, 1338, 1405, 1408, 1471, 1472, 1475], "352": [308, 309, 1272, 1318, 1321], "195": [308, 309], "static_conv1d": [308, 309], "static_conv1d_transpos": [308, 309], "static_conv2d": [308, 309], "static_conv2d_transpos": [308, 309], "static_conv3d": [308, 309], "static_conv3d_transpos": [308, 309], "static_depthwise_conv2d": [308, 309], "static_dropout": [308, 309], "static_linear": [308, 309], "static_lstm_upd": [308, 309], "static_multi_head_attent": [308, 309], "static_scaled_dot_product_attent": [308, 309], "73": [310, 311, 350, 704, 990, 993, 1338, 1339, 1342, 1595, 1606, 1609], "577": [310, 311, 1338, 1339, 1342], "707": [310, 311, 1338, 1339, 1342], "matrix_pow": [310, 311, 1338], "pseudo": [310, 311, 1338, 1410, 1413], "static_choleski": [310, 311], "static_rol": [310, 311, 314, 315, 336, 340], "static_cross": [310, 311], "static_det": [310, 311], "static_diag": [310, 311], "static_diagon": [310, 311], "static_inn": [310, 311], "static_inv": [310, 311, 1338, 1376, 1379], "static_matmul": [310, 311], "matul": [310, 311], "static_matrix_norm": [310, 311], "deimens": [310, 311], "static_matrix_pow": [310, 311], "static_matrix_rank": [310, 311], "static_matrix_transpos": [310, 311], "static_out": [310, 311], "static_pinv": [310, 311], "static_qr": [310, 311], "static_slogdet": [310, 311], "static_solv": [310, 311], "static_svd": [310, 311], "static_svdv": [310, 311], "static_tensordot": [310, 311], "static_trac": [310, 311], "static_vand": [310, 311], "343": [310, 311, 704, 970, 973], "512": [310, 311], "729": [310, 311, 358], "static_vecdot": [310, 311], "static_vector_norm": [310, 311], "mathemat": [310, 311, 338, 348, 352, 496, 704, 720, 723, 740, 743, 820, 823, 885, 888, 930, 933, 1338, 1386, 1389, 1460, 1464, 1752, 1758], "l1": [310, 311, 336, 357, 1338, 1460, 1464], "manhattan": [310, 311, 1338, 1460, 1464], "l2": [310, 311, 336, 1338, 1460, 1464], "euclidean": [310, 311, 1338, 1460, 1464], "static_vector_to_skew_symmetric_matrix": [310, 311], "511": [312, 313, 1471, 1472, 1475], "5108256": [312, 313], "609438": [312, 313], "static_binary_cross_entropi": [312, 313], "static_cross_entropi": [312, 313], "20397282": [312, 313], "83258148": [312, 313], "60943794": [312, 313], "static_sparse_cross_entropi": [312, 313], "static_stack": [314, 315], "static_clip": [314, 315], "static_concat": [314, 315], "static_constant_pad": [314, 315], "static_expand_dim": [314, 315], "container_axi": [314, 315, 1487, 1503, 1506], "static_flip": [314, 315], "static_permute_dim": [314, 315], "static_repeat": [314, 315], "static_reshap": [314, 315], "positivclip": [314, 315], "static_split": [314, 315], "static_squeez": [314, 315], "static_swapax": [314, 315], "static_til": [314, 315], "static_unstack": [314, 315], "static_zero_pad": [314, 315], "classivi": [314, 315, 322, 323, 1487, 1533, 1536, 1648, 1654, 1658], "342": [316, 317, 1590, 1591, 1594], "0427": [316, 317, 1590, 1591, 1594], "299": [316, 317, 1590, 1591, 1594], "241": [316, 317], "102": [318, 319], "431": [318, 319], "68": [318, 319, 456, 469, 472, 497, 526, 704, 730, 733, 740, 743, 1590, 1591, 1594], "83": [318, 319, 704, 990, 993, 1272, 1318, 1321], "274": [318, 319], "91": [318, 319, 704, 775, 778, 1272, 1318, 1321, 1338, 1405, 1408, 1595, 1606, 1609, 1685, 1696, 1699], "static_beta": [318, 319], "static_multinomi": [318, 319], "static_randint": [318, 319], "static_random_norm": [318, 319], "651": [318, 319], "static_random_uniform": [318, 319], "481": [318, 319], "0999": [318, 319], "static_shuffl": [318, 319], "static_argmax": [320, 321], "static_argmin": [320, 321], "static_argwher": [320, 321], "static_nonzero": [320, 321], "static_wher": [320, 321], "static_unique_al": [322, 323], "static_unique_count": [322, 323], "static_unique_invers": [322, 323], "static_unique_valu": [322, 323], "static_argsort": [324, 325], "static_searchsort": [324, 325], "static_sort": [324, 325], "static_cumprod": [326, 327], "static_cumsum": [326, 327], "static_sum": [326, 327], "static_var": [326, 327], "12666667": [326, 327, 1685, 1725, 1729], "11555555": [326, 327, 1685, 1725, 1729], "contian": [326, 327], "6666667": [326, 327, 1685, 1725, 1729], "static_al": [328, 329], "static_ani": [328, 329], "add_ivy_container_instance_method": 330, "containerexampl": [330, 331], "who": [332, 353, 371, 1752, 1754], "hood": [332, 336, 340, 345, 348, 350, 352, 353, 354, 357, 359, 1759], "weed": [332, 353], "tour": 332, "primari": [332, 335, 338, 347, 348, 350, 352, 371, 387, 388, 1741], "superset": [332, 371], "goe": [332, 352], "dynam": [332, 338, 339, 347, 348, 354, 494, 495, 1752, 1756], "runtim": [332, 350, 352, 670, 1752], "borrow": 332, "conjunct": 333, "establish": [333, 1754], "2020": [333, 1752], "group": [333, 336, 345, 348, 349, 1748, 1751, 1757], "intend": [333, 344, 1685, 1720, 1724, 1750, 1752, 1756, 1757], "popular": [333, 1752], "sens": [333, 340, 348, 356], "unconnect": 333, "decis": [333, 336, 338, 348, 352, 354, 356, 1752], "initialis": [333, 350, 670], "checkout": [333, 350], "everytim": [333, 338], "init": [333, 359], "thoroughli": 333, "ci": [333, 338, 343, 350, 371], "insert_chosen_backend": 333, "test_linalg": 333, "test_set_funct": 333, "test_signatur": 333, "excess": [333, 335, 340], "explicitli": [333, 334, 335, 336, 338, 341, 342, 345, 346, 347, 350, 354, 371, 1338, 1364, 1367, 1368, 1370, 1752], "array_modul": 333, "vv": 333, "test_manipulation_funct": 333, "test_concat": [333, 350], "typic": [333, 345, 1669, 1675, 1678, 1751, 1759], "nb": 333, "varieti": [333, 337, 338, 339, 350, 1748, 1750, 1754, 1755, 1758, 1759], "known": [333, 338, 348, 350], "test_asarray_arrai": 333, "test_floor_divid": 333, "health": 333, "test_iop": 333, "__imod__": 333, "x1_i": [333, 704, 720, 723, 740, 743, 750, 753, 760, 763, 765, 768, 770, 773, 775, 778, 800, 803, 805, 808, 830, 833, 835, 838, 840, 843, 865, 868, 870, 873, 895, 898, 900, 903, 910, 913, 915, 918, 930, 933, 940, 943, 950, 953, 965, 968, 1000, 1004], "isequ": 333, "test_matrix_norm": 333, "alter": 333, "tweak": 333, "array_api_methods_to_test": 333, "identifi": [333, 337, 350, 352, 456, 457, 463], "202": [333, 704, 790, 793], "test_trac": 333, "latter": [333, 335, 338, 341, 348], "hand": [333, 338, 345, 350, 371], "scheme": [333, 358, 1752], "edg": [333, 350, 407, 417, 1487, 1488, 1491, 1498, 1501, 1563, 1567, 1742, 1752, 1754, 1758], "test_special_cas": 333, "__ipow__": 333, "is_integ": 333, "unskip": 333, "temporarili": [333, 351], "straightforward": [333, 357], "tf": [334, 338, 339, 344, 347, 348, 350, 351, 352, 354, 359, 371, 1741, 1742, 1752], "wrapper": [334, 336, 338, 346, 347, 356, 1741, 1748, 1752], "_data": [334, 348, 356], "meta": [334, 351, 1569, 1570, 1571, 1752], "organiz": [334, 336, 348], "inherit": [334, 336, 342, 356, 371, 1741], "bear": [334, 336, 338, 348], "necessarili": [334, 336], "although": [334, 336, 348, 1750, 1752], "underpin": [334, 336, 354], "programmat": [334, 336, 1753], "backup": [334, 336], "accident": [334, 336, 348], "readabl": [334, 336, 342, 344, 351, 356, 357], "absent": [334, 336], "perk": [334, 336], "auto": [334, 336, 357], "__mul__": [334, 336, 340, 344, 352, 356], "__truediv__": [334, 336, 340], "throw": [334, 338, 342, 356, 1752], "imposs": 334, "inputs_to_native_arrai": [334, 346, 372], "outputs_to_ivy_arrai": [334, 338, 339, 344, 346, 372], "firstli": [334, 338, 340, 341, 342, 345, 346, 347, 352, 357, 1748, 1758], "anywai": [334, 346, 348], "secondli": [334, 338], "permit": [334, 344, 348, 350, 352], "dictat": [334, 340, 344, 347], "implicit_backend": [335, 354], "ivy_original_dict": [335, 354], "unmodifi": [335, 338], "opt": [335, 338, 347, 350, 351, 352], "fallback": 335, "layout": [335, 348, 352], "requires_grad": [335, 349], "memory_format": 335, "preserve_format": 335, "weren": 335, "break": [335, 338, 343, 344, 351, 371, 1742], "Not": [335, 349, 357, 358, 371, 391, 402, 496], "vast": [335, 338, 1752], "minor": [335, 352, 354, 371], "fn_name_v_1p12_and_abov": 335, "similarli": [335, 338, 348, 352, 356, 387, 388, 497, 538, 541, 1758], "fn_name_v_1p01_to_1p1": 335, "inclus": [335, 347, 348, 352, 497, 499, 500, 1595, 1601, 1604], "vari": [336, 340, 348, 350, 356, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "five": [336, 357], "recap": [336, 340, 358], "arbitrarili": [336, 346, 357], "__repr__": 336, "control": [336, 338, 347, 348, 352, 356, 357, 370, 387, 388, 1338, 1354, 1357, 1741, 1752, 1758], "__getattr__": 336, "underli": [336, 352, 704, 750, 753, 765, 768, 775, 778, 915, 918, 1752], "__setattr__": 336, "__contains__": 336, "__getstate__": 336, "__setstate__": 336, "unpickl": 336, "num_dim": [336, 359], "__len__": 336, "restrict": [336, 348, 354, 1749], "enforc": [336, 356], "extern": [336, 344, 348, 350, 351], "flexibl": [336, 344, 351, 1752], "c1": 336, "lefthand": 336, "righthand": 336, "operand": [336, 341, 348, 391, 403, 704, 710, 713, 715, 718, 720, 723, 725, 728, 730, 733, 735, 738, 740, 743, 775, 778, 780, 783, 785, 788, 790, 793, 815, 818, 820, 823, 825, 828, 875, 878, 880, 883, 885, 888, 890, 893, 895, 898, 930, 933, 950, 953, 965, 968, 970, 973, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1015, 1019, 1685, 1696, 1699, 1700, 1703, 1708, 1711, 1720, 1724], "decor": [336, 338, 339, 345, 346, 347, 348, 349, 350, 1026, 1042], "handle_nest": [336, 345, 346, 354, 372], "addition": [336, 347, 348, 1758], "counterpart": [336, 346], "behavior": [336, 338, 348, 349, 350, 352, 354, 371, 704, 950, 953, 965, 968, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668, 1749], "presenc": [336, 347], "absenc": [336, 344, 1752], "implicitli": [336, 354], "themselv": [336, 338, 339, 341, 345, 348, 358, 1572, 1573, 1749, 1758], "log_pr": [336, 345, 347], "intuit": [336, 357, 358, 1748], "chronolog": 336, "concurr": [336, 345, 1752], "had": [336, 347, 1752, 1753], "consum": [336, 344, 349, 350], "sequenti": [336, 358], "But": [336, 341, 346, 347, 359], "flow": [336, 370, 1752, 1753], "compil": [336, 348, 351, 352, 353, 355, 371, 1741, 1742, 1748, 1751, 1752, 1753, 1756, 1759], "implic": 336, "whatsoev": [336, 345, 1741, 1758], "implicit": [336, 341, 348, 350, 354, 1752], "eager": [336, 371, 1752], "children": 336, "shallowest": 336, "deepest": 336, "event": [337, 350], "ex": 337, "reopen": 337, "review_request": 337, "yml": 337, "dispatch": [337, 371, 1752, 1755], "pair": [337, 423, 431, 704, 740, 743, 1272, 1333, 1336, 1338, 1344, 1347], "test_nn": 337, "yellow": 337, "dot": [337, 1272, 1328, 1331, 1333, 1336, 1338, 1455, 1459], "queu": 337, "redirect": 337, "book": 337, "procedur": [337, 340], "decoupl": [337, 358], "ran": 337, "badg": 337, "clickabl": 337, "uint8": [338, 350, 579, 597, 600, 609, 620, 621, 648, 651, 655, 658, 663, 668], "uint16": [338, 350, 354, 579, 603, 609, 623, 624, 626, 629, 648, 651, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "uint32": [338, 350, 354, 579, 609, 623, 624, 626, 629, 631, 668, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "uint64": [338, 350, 354, 579, 609, 623, 624, 631, 632, 655, 658, 660, 663, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "bfloat16": [338, 348, 350, 579, 620, 621], "all_dtyp": 338, "all_numeric_dtyp": 338, "all_int_dtyp": 338, "all_float_dtyp": 338, "replic": [338, 340, 348, 352], "four": [338, 340, 344, 345, 350, 352, 357], "thirdli": 338, "native_float32": 338, "importantli": [338, 356, 359, 370], "conveni": [338, 339, 344, 349, 355, 357, 358, 1741, 1758], "set_default_dtyp": [338, 345, 579, 665], "default_dtyp": [338, 345, 579], "arguabl": [338, 339, 348], "promote_typ": [338, 579], "type_promote_arrai": [338, 579], "promote_types_of_input": [338, 579], "jaxarrai": [338, 339, 344, 347, 351, 354], "jnp": [338, 339, 344, 347, 349, 351, 354, 359, 1742], "_handle_0_dim_output": [338, 347], "experiment": [338, 351, 354, 1752], "subtli": [338, 347], "On": [338, 348, 350, 355, 359], "promote_types_frontend_nam": 338, "promote_types_of_frontend_name_input": 338, "frontend_nam": 338, "demonstr": [338, 340, 356], "accuraci": 338, "precis": [338, 348, 352, 391, 393, 579, 615, 618, 704, 930, 933, 990, 993, 1756], "upcast": 338, "instabl": 338, "underflow": 338, "nearli": [338, 344, 346, 1752], "downcast": 338, "footprint": 338, "constraint": 338, "concret": 338, "compound": 338, "infer_dtyp": [338, 339, 344, 346, 372], "default_int_dtyp": [338, 579, 662], "default_float_dtyp": [338, 579], "settabl": [338, 339], "set_default_int_dtyp": [338, 579, 608, 631], "set_default_float_dtyp": [338, 579, 605, 606, 631], "irrelev": [338, 340], "handle_out_argu": [338, 339, 344, 346, 347, 354, 372], "infer_devic": [338, 339, 344, 346, 372], "deleg": [338, 1759], "shape_to_tupl": 338, "with_supported_dtyp": [338, 372], "with_unsupported_dtyp": [338, 372], "unment": 338, "backend_vers": 338, "_cast_for_unary_op": 338, "target_typ": 338, "function_supported_dtyp": [338, 579], "function_unsupported_dtyp": [338, 579], "discov": 338, "unsupported_dtyp": 338, "invalid_dtyp": [338, 579], "former": [338, 341, 348], "uint": [338, 349, 579, 608, 609, 648, 651, 663, 668], "lack": [338, 347, 1752, 1759], "rang": [338, 342, 350, 354, 357, 358, 359, 497, 499, 500, 532, 533, 535, 536, 1026, 1219, 1220, 1259, 1648, 1649, 1653, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724, 1742, 1752, 1758], "patch": [338, 1752], "achiev": [338, 343, 346, 350, 357, 359, 1741], "subtl": [338, 351, 1758], "unsign": [338, 349, 354, 1685, 1686, 1689, 1691, 1694, 1712, 1715, 1720, 1724], "offici": [338, 354], "inconsist": [338, 342], "unexpect": [338, 579, 654], "84530": 338, "unwarr": 338, "risk": [338, 1758], "needlessli": 338, "bloat": 338, "undergo": [338, 371], "supported_dtyp": [338, 348], "unsupported_devic": 338, "supported_devic": 338, "slight": [338, 358], "downsid": 338, "coverag": [338, 350], "inflat": 338, "idx": [339, 356, 1026, 1032], "tpu": [339, 670, 692, 701, 1752, 1755], "get_all_ivy_arrays_on_dev": [339, 670], "aliv": [339, 670, 684, 688, 690, 1026, 1093, 1154, 1155], "num_gpu": [339, 350, 670], "total_mem_on_dev": [339, 670], "dev_util": [339, 670], "num_cpu_cor": [339, 670], "default_devic": [339, 342, 670, 688, 691, 692, 702], "outsid": [339, 343, 345, 356, 1487, 1488, 1491, 1543, 1546, 1757], "dual": 339, "categor": [339, 345, 348], "thrown": [339, 342, 371, 1026, 1124, 1127], "far": [339, 340, 355, 1572, 1573, 1583, 1757, 1758], "set_default_devic": [339, 670, 702], "eight": [340, 353], "func_nam": [340, 341, 345, 348], "static_func_nam": 340, "op_nam": 340, "__r": 340, "combinatori": 340, "variat": [340, 350], "grid": [340, 350, 370, 497, 538, 541], "unus": [340, 343, 347, 494, 495], "okai": [340, 352, 354], "showcas": [340, 370], "meant": 340, "imaginari": 340, "spec": [340, 341], "my_func": [340, 351], "some_flag": 340, "another_flag": 340, "jointli": 340, "x0": [340, 1026, 1034, 1036], "5574077": 340, "1850398": 340, "5463025": 340, "8422884": 340, "91601413": 340, "9647598": 340, "3738229": 340, "1597457": 340, "0963247": 340, "9955841": 340, "3278579": 340, "multi": [340, 353, 371, 1272, 1328, 1331, 1338, 1344, 1347, 1742, 1748, 1750, 1752, 1756], "pars": [340, 371], "satisfi": [340, 350], "asid": [340, 370], "increasingli": 340, "14254655": 340, "1578213": 340, "380515": 340, "trivial": 340, "exlud": 340, "failing_fn_nam": 340, "onlin": [340, 341], "minutest": 340, "suffici": 340, "segment": 340, "fault": [340, 1752], "contrast": [341, 344, 348, 1758], "instanti": 341, "templat": [341, 350, 1742], "array_api": 341, "preview": 341, "render": 341, "incorrectli": 341, "domain": [341, 391, 403, 704, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 815, 818, 820, 823, 875, 878, 880, 883, 890, 893, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014, 1750, 1752], "codomain": [341, 391, 403, 704, 710, 713, 715, 718, 725, 728, 730, 733, 735, 738, 740, 743, 785, 788, 790, 793, 815, 818, 820, 823, 875, 878, 880, 883, 890, 893, 980, 983, 985, 988, 990, 993, 1005, 1009, 1010, 1014], "needless": [341, 349], "info": [341, 350, 1742], "subset": [341, 344, 348, 350, 354, 1752], "renam": 341, "judgment": 341, "beyond": [341, 348, 1487, 1528, 1531, 1758], "pure": [341, 344, 348, 352, 356, 359, 371, 1752, 1758, 1759], "operator_nam": 341, "succinct": 341, "contstructor": 341, "_forward": [341, 354, 357, 358, 1742], "docst": 341, "ivyexcept": [342, 348, 1220, 1253, 1271], "super": [342, 354, 357, 358, 359], "ivybackendexcept": 342, "_default": 342, "current_backend_str": [342, 354, 356, 1026], "_delimit": 342, "indexerror": [342, 1220, 1259, 1487, 1503, 1506], "ivyerror": 342, "repetit": [342, 1487, 1518, 1521, 1553, 1557], "caught": 342, "functool": [342, 348, 356], "new_fn": [342, 348], "__name__": [342, 1026, 1208], "comparison": 342, "error_stack": 342, "axiserror": 342, "bound": [342, 350, 354, 1758], "got": [342, 1742], "assertionerror": [342, 350], "elif": [342, 347, 348], "polici": [342, 350, 370], "moreov": 342, "cleaner": [342, 357], "lesser": 342, "set_split_factor": [342, 670], "split_factor": [342, 670, 692], "met": 342, "flake8": 343, "undefin": [343, 407, 417], "statement": [343, 347, 350, 352, 371], "handler": [343, 353, 355, 359, 1741, 1742], "annot": [343, 344], "star": 343, "byte": [343, 1757, 1758], "notimpl": 343, "notimplementederror": 343, "unsuccess": 343, "reformat": 343, "exceed": 343, "black": 343, "disobei": 343, "taken": [343, 351, 359, 1338, 1359, 1362, 1753], "successfulli": 343, "inde": [343, 344, 352, 371, 1750], "adress": 344, "revisit": 344, "dedic": [344, 356, 358, 1220, 1266, 1270], "to_native_arrays_and_back": [344, 346, 354, 372], "usabl": [344, 351], "sole": [344, 351, 1751, 1752, 1753], "strictli": [344, 347], "linspac": [344, 352, 354, 497, 499, 500, 1742, 1759], "rational": 344, "__div__": [344, 352], "dicat": 344, "futher": 344, "pep": 344, "484": 344, "brittl": 344, "freeli": 344, "technic": [344, 347, 371, 1752, 1754], "original_typ": 344, "cumbersom": 344, "omit": [344, 347, 348, 704, 970, 973, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "venn": 345, "diagram": [345, 1758], "light": [345, 348, 371, 1741, 1753, 1758], "array_arg": 345, "cache_fn": [345, 1026], "cach": [345, 350, 670, 674, 1026, 1042], "deal": [345, 349, 371], "modif": [345, 1752], "briefli": [345, 350, 357], "get_all_arrays_on_dev": 345, "nested_map": [345, 1572], "index_nest": [345, 1572], "inputs_to_ivy_arrai": [346, 372], "heavili": [346, 348, 371], "facilit": 346, "integer_array_to_float": 346, "handle_cmd_line_arg": [346, 349, 350], "as_vari": [346, 349, 350], "with_out": [346, 349, 350], "instance_method": [346, 350], "test_gradi": 346, "topic": [346, 356, 1752], "suffic": [346, 350], "program": [347, 1749, 1750, 1752, 1755, 1756, 1759], "ration": [347, 352], "speak": 347, "x_nativ": 347, "val_n": 347, "unspecifi": [347, 704, 950, 953, 965, 968, 1338, 1364, 1367, 1487, 1543, 1546], "predominantli": [347, 351, 370], "support_native_out": 347, "math": [347, 348, 350, 359, 1742, 1750], "mx": 347, "nd": 347, "_wrap_fn": 347, "dim0": 347, "dim1": 347, "maxim": [347, 352, 354, 1749, 1750, 1754, 1755, 1756], "third": [347, 371, 1338, 1430, 1434, 1648, 1649, 1653, 1751, 1752, 1758], "leverag": [347, 1750, 1752], "capabl": [347, 352], "input_arrai": 347, "plai": [348, 350, 359, 1752, 1755], "tf_frontend": 348, "lax": [348, 349, 352, 359, 371], "neither": [348, 352, 704, 720, 723, 930, 933, 1220, 1253, 1271], "fn_tree": [348, 349], "wrong": [348, 352], "carefulli": [348, 1750, 1755], "acceler": [348, 1742, 1750, 1754, 1755, 1756, 1757], "algebra": [348, 1470, 1750, 1751, 1752, 1755, 1759], "xla": [348, 371, 1741, 1752], "decompos": 348, "dynamic": 348, "extent": 348, "mimic": 348, "arithmetic_oper": 348, "same_kind": 348, "subok": [348, 349, 352], "as_ivy_dtyp": [348, 579], "recov": 348, "obtain": 348, "unhandl": 348, "seek": 348, "subclass": [348, 352], "trigonometric_funct": 348, "from_zero_dim_arrays_to_float": [348, 372], "pointwise_op": 348, "preferred_element_typ": 348, "conv_general_dil": [348, 1272], "finer": 348, "nor": [348, 704, 720, 723, 930, 933, 1220, 1253, 1271, 1756], "margin": 348, "fit": [348, 354, 1487, 1518, 1521, 1748, 1749, 1752], "meet": 348, "criteria": 348, "incorpor": [348, 357, 1752], "omiss": 348, "sensibl": 348, "deem": 348, "reserv": 348, "resum": 348, "possibli": [348, 350, 371, 1026, 1192, 1196], "straight": [348, 350, 356, 1742], "ahead": [348, 1752], "heavi": [348, 349, 352, 1753], "logicaland": 348, "truth": [348, 350, 704, 805, 808, 835, 838, 840, 843, 865, 868, 870, 873, 940, 943], "np_frontend": 348, "radd": 348, "_init_data": 348, "isinst": [348, 350, 351, 358, 359], "_process_str_data": 348, "2d": 348, "_shape": [348, 356], "_dtype": [348, 356], "govern": 348, "promote_types_of_": 348, "_input": 348, "promote_types_of_tensorflow_input": 348, "saniti": 348, "handle_numpy_cast": 348, "func_wrapp": [348, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "to_ivy_arrays_and_back": [348, 349], "handle_numpy_casting_speci": 348, "equiv": 348, "safe": 348, "unsaf": 348, "array_type_test": 348, "watch": 348, "youtub": 348, "seri": [348, 350, 1752, 1754], "jump": 349, "knowledg": 349, "test_frontend_funct": 349, "lift": [349, 1753], "get_dtyp": [349, 350], "dtype_and_valu": [349, 350], "num_positional_arg": [349, 350], "get_shap": [349, 350], "np_frontend_help": 349, "nn": [349, 352, 359, 497, 538, 541, 1742, 1753], "test_jax": 349, "test_jax_lax_oper": 349, "dtype_and_x": [349, 350], "available_dtyp": [349, 350], "test_jax_lax_tan": 349, "input_dtyp": [349, 350], "as_variable_flag": [349, 350], "native_array_flag": [349, 350], "test_numpi": 349, "test_mathematical_funct": 349, "test_np_trigonometric_funct": 349, "test_numpy_tan": 349, "handle_where_and_array_bool": 349, "test_tensorflow": 349, "test_math": 349, "test_tensorflow_tan": 349, "test_torch": 349, "test_non_linear_activation_funct": 349, "st": [349, 350], "min_valu": [349, 350], "max_valu": [349, 350], "with_inplac": 349, "test_torch_leaky_relu": 349, "negative_slop": 349, "_fill_valu": 349, "allow_non": [349, 350], "min_num_dim": [349, 350], "max_num_dim": [349, 350], "min_dim_s": [349, 350], "max_dim_s": 349, "test_jax_lax_ful": 349, "test_from_shape_or_valu": 349, "test_numpy_ful": 349, "test_tf_funct": 349, "test_tensorflow_ful": 349, "discrep": 349, "test_creation_op": 349, "_requires_grad": 349, "test_torch_ful": 349, "accommod": 349, "walkthrough": 349, "torch_frontend": 349, "gt": [349, 354], "comparison_op": 349, "promote_types_of_torch_input": 349, "test_comparison_op": 349, "dtype_and_input": 349, "allow_inf": [349, 350], "shared_dtyp": 349, "test_torch_great": 349, "has_alias": 349, "all_alias": 349, "test_frontend_instance_method": 349, "frontend_class": 349, "test_jax_devicearrai": 349, "test_jax_instance_add": 349, "test_frontend_array_instance_method": 349, "test_ndarrai": 349, "test_numpy_ndarray_add": 349, "test_frontend_method": 349, "input_dtypes_init": 349, "as_variable_flags_init": 349, "num_positional_args_init": 349, "native_array_flags_init": 349, "all_as_kwargs_np_init": 349, "input_dtypes_method": 349, "as_variable_flags_method": 349, "num_positional_args_method": 349, "native_array_flags_method": 349, "all_as_kwargs_np_method": 349, "class_nam": 349, "method_nam": 349, "test_tensor": 349, "test_tensorflow_instance_add": 349, "1e04": 349, "1e06": 349, "allow_infin": 349, "test_torch_instance_add": 349, "somewhat": [349, 371, 1752], "value_test": 349, "dtype_x": 349, "test_jax_special_add": 349, "ret_gt": 349, "flatten_and_to_np": 349, "zip": [349, 354], "ret_from_gt": 349, "ground_truth_backend": 349, "_arrays_idx_n_dtyp": 349, "test_manipul": [349, 350], "surprisingli": 349, "cat": [349, 352, 354, 359], "closest_relevant_group": 349, "strive": [349, 350, 352, 371, 1754], "cycl": 350, "exhaust": [350, 1749, 1758], "fixtur": 350, "hit": [350, 354], "eleg": [350, 1752], "intellig": [350, 352, 1754], "unexplor": 350, "repeatedli": [350, 1572, 1581], "upload": 350, "artifact": 350, "parametr": [350, 1752], "impli": [350, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "bespok": 350, "_array_or_typ": 350, "standalon": [350, 1741, 1748, 1753, 1758, 1759], "test_default_int_dtyp": 350, "clariti": [350, 352, 1752], "print_hypothesis_exampl": 350, "searchstrategi": 350, "custom_strategi": 350, "sampled_from": 350, "randomis": 350, "simplist": 350, "intricaci": 350, "one_of": 350, "datum": 350, "pipe": 350, "overload": 350, "shorthand": 350, "isclos": 350, "flatmap": 350, "suppos": 350, "scaler": 350, "array_or_scal": 350, "len_of_arrai": 350, "interact": [350, 1742, 1751, 1752, 1757], "bodi": 350, "reusabl": [350, 371, 1750, 1752], "snippet": 350, "container_flag": 350, "thankfulli": 350, "advis": 350, "seamlessli": 350, "encount": 350, "criterion": 350, "array_valu": 350, "valid_ax": 350, "craft": 350, "hoc": 350, "intersect": [350, 370], "44758124e": 350, "308": [350, 579, 615, 618], "11228": 350, "456": [350, 1648, 1649, 1653], "268": 350, "wherev": 350, "dtype_values_axi": 350, "9622": 350, "28136": 350, "6375": 350, "12720": 350, "21354": 350, "900e": 350, "00": [350, 704, 820, 823], "955e": 350, "exclude_min": 350, "large_abs_safety_factor": 350, "safety_factor_scal": 350, "57384": 350, "25687": 350, "248": 350, "array_dtyp": 350, "min_siz": 350, "max_siz": 350, "array_bool": 350, "na": 350, "test_devic": 350, "array_shap": 350, "common_shap": 350, "test_lay": 350, "size_bound": 350, "reshape_shap": 350, "stand": 350, "fashion": 350, "some_sequ": 350, "allow_nan": 350, "allow_subnorm": 350, "get_bound": 350, "arrays_valu": 350, "36418": 350, "213": 350, "21716926": 350, "none_or_list_of_float": 350, "get_prob": 350, "get_mean_std": 350, "103515625e": 350, "099609375": 350, "probabilist": 350, "get_axi": 350, "number_positional_argu": 350, "unreproduc": 350, "test_valu": 350, "enough": [350, 356, 357, 358], "report": 350, "valid_float_dtyp": 350, "test_demo": 350, "falsifi": 350, "failing_test": 350, "traceback": 350, "file_nam": [350, 351], "shrink": 350, "prescrib": 350, "closest": [350, 352, 579, 603, 704, 780, 783, 825, 828, 830, 833, 970, 973, 1015, 1019], "scratch": 350, "databas": 350, "therebi": 350, "test_gelu": 350, "test_fil": 350, "brief": 350, "phase": [350, 371, 1752], "notabl": [350, 1752], "verbos": [350, 354, 1742, 1803], "newer": 350, "max_exampl": 350, "impact": [350, 358, 1754], "deadlin": 350, "weird": 350, "systemat": 350, "safeguard": 350, "inabl": 350, "test_result_typ": 350, "9090909090909091": 350, "linear_algebra": 351, "judgement": 351, "some_namespac": 351, "some_backend": 351, "another_backend": 351, "refactor": 351, "ongo": 351, "cooler": 351, "something_cool": 351, "clean": [351, 352, 354, 355, 357], "_assert_fill_value_and_dtype_are_compat": 351, "_to_devic": 351, "focus": [351, 370, 1750, 1751, 1752, 1758, 1759], "prior": [351, 439, 441], "older": 351, "grow": [351, 1742, 1752], "unbound": 351, "battl": 351, "face": [352, 354, 1752, 1758], "answer": [352, 356, 371], "contradict": 352, "entail": 352, "sacrif": 352, "dimems": 352, "conv": [352, 1272], "jacfwd": 352, "jacrev": 352, "banner": 352, "pointwis": 352, "unnecessari": 352, "fuse": 352, "tensorrt": 352, "highli": [352, 1752], "expens": 352, "incredibli": [352, 357, 371, 1755], "six": 352, "__gt__": 352, "price": 352, "pai": 352, "intrus": 352, "x_beta": 352, "equip": 352, "deliber": [352, 704, 970, 973], "priorit": 352, "simplif": 352, "allevi": 352, "ineffici": [352, 371, 1752], "fledg": [354, 355], "syntact": [354, 359], "logspac": [354, 497], "construct": [354, 358, 359, 1487, 1553, 1557, 1750, 1752, 1759], "power_seq": 354, "backend_stack": 354, "cprint": [354, 1802], "_determine_backend_from_arg": 354, "importlib": 354, "import_modul": 354, "_backend_dict": 354, "illustr": [354, 370], "un": [354, 579, 632], "unrol": [354, 357, 1272, 1323, 1326], "lstm": [354, 1272, 1323, 1326, 1752], "cell": [354, 1272, 1323, 1326], "hidden": [354, 358, 1272, 1323, 1326], "recurr": [354, 1272, 1323, 1326, 1752, 1756], "timestep": [354, 1272, 1323, 1326], "x_shape": 354, "input_channel": [354, 358], "x_flat": 354, "wi": 354, "wi_x": 354, "wii_x": 354, "wif_x": 354, "wig_x": 354, "wio_x": 354, "wh": 354, "ht": 354, "ct": 354, "hts_list": 354, "wii_xt": 354, "wif_xt": 354, "wig_xt": 354, "wio_xt": 354, "htm1": 354, "ctm1": 354, "wh_htm1": 354, "whi_htm1": 354, "whf_htm1": 354, "whg_htm1": 354, "who_htm1": 354, "ft": 354, "ot": 354, "reliabl": 354, "sacrific": 354, "hear": 354, "virtu": [354, 1749], "pure_ivi": 354, "compile_graph": [354, 359], "pure_torch": 354, "backbon": [354, 357], "_layer": 354, "random_unifrom": 354, "unclean": 354, "wx": 354, "temp": [354, 1026, 1173], "ivy_func": 354, "emphas": 354, "torchscript": [354, 1741, 1759], "example_input": [354, 494, 495], "static_argnum": [354, 494, 495], "static_argnam": [354, 494, 495], "jit": [354, 371, 1752], "primit": [355, 371, 1750, 1752], "upcom": 355, "hierarch": [355, 357, 358, 1752], "_init": 356, "_size": 356, "mul": 356, "_devic": 356, "_dev_str": 356, "as_ivy_dev": [356, 670], "_pre_repr": 356, "_post_repr": 356, "framework_str": 356, "noinspect": 356, "pypep8nam": 356, "typeerror": 356, "immut": 356, "claim": 356, "truli": 356, "_native_wrapp": 356, "attributeerror": 356, "genuin": 356, "some_method": 356, "rewritten": 356, "__pow__": 356, "strang": 356, "compartment": 356, "public": [356, 1026, 1053, 1755], "newshap": 356, "new_shap": 356, "tidi": 356, "shorter": 356, "crystal": 356, "ton": 357, "ado": [357, 358], "soup": 357, "walk": [357, 358], "dct": 357, "cnt": 357, "combo": 357, "1000": [357, 704, 990, 993], "3333335": 357, "grad": [357, 358, 359, 1220, 1221, 1224, 1742], "delimit": 357, "autocomplet": 357, "midwai": 357, "agent": 357, "total_spe": 357, "total_height": 357, "total_width": 357, "ag": 357, "tot": 357, "total_": 357, "total_h": 357, "cnt0": 357, "cnt1": 357, "diff_0": 357, "diff_1": 357, "config0": 357, "config1": 357, "decod": 357, "l0": 357, "truncat": 357, "decoder__l0": 357, "decoder__l1": 357, "encoder__l0": 357, "encoder__l1": 357, "height": 357, "l0__b": 357, "l0__w": 357, "l1__b": 357, "l1__w": 357, "printabl": 357, "obviou": [357, 1752], "foresight": 357, "untidili": 357, "update_ag": 357, "normalize_img": 357, "img": 357, "img_max": 357, "reduce_max": [357, 1742], "img_min": 357, "reduce_min": [357, 1742], "img_rang": 357, "agent_posit": 357, "agent_veloc": 357, "agent_cam_front_rgb": 357, "agent_cam_front_depth": 357, "agent_cam_rear_rgb": 357, "agent_cam_rear_depth": 357, "agent_cam_lidar": 357, "camera": 357, "front_rgb": 357, "front_depth": 357, "rear_rgb": 357, "rear_depth": 357, "lidar": 357, "rgb": 357, "rear": 357, "veloc": 357, "cam": 357, "cam_max": 357, "cam_min": 357, "cam_rang": 357, "Of": [357, 1757, 1758], "perman": 357, "thread": [357, 1752], "pretti": [357, 1758], "dataload": [357, 369, 1742], "_cnt": 357, "img_": 357, "_dataset_s": 357, "_batch_siz": 357, "_count": [357, 358], "__next__": 357, "filenam": 357, "img_fnam": 357, "fname": 357, "loaded_img": 357, "cv2": 357, "imread": 357, "from_numpi": 357, "loader": [357, 371], "batch_slic": 357, "model": [357, 358, 1741, 1742, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759], "mymodel": [357, 1742], "linear0": [357, 358, 1742], "linear1": [357, 358, 1742], "x_in": [357, 358, 359, 1742], "loss_fn": [357, 358, 359, 1742], "reduce_mean": [357, 358, 359, 1742], "execute_with_gradi": [357, 358, 359, 371, 1220, 1742], "0145": 357, "grad_fn": [357, 1220, 1230, 1260], "addbackward0": 357, "_create_vari": 358, "output_channel": 358, "with_bia": 358, "_input_channel": 358, "_output_channel": 358, "_w_shape": 358, "_b_shape": 358, "_with_bia": 358, "396": 358, "764": 358, "872": 358, "211": 358, "439": 358, "nightmar": 358, "overcom": 358, "fc": 358, "v0": 358, "v1": 358, "key0": 358, "linear3": 358, "v2": 358, "counter": 358, "fed": [358, 670, 694], "weight_initi": 358, "glorotuniform": 358, "bias_initi": 358, "_w_init": 358, "_b_init": 358, "create_vari": 358, "var_shap": 358, "fan_out": 358, "fan_in": 358, "fan_mod": 358, "fan_sum": 358, "misnom": 358, "saw": 358, "vanilla": [358, 1568, 1570, 1752], "compile_on_next_step": [358, 1026, 1033], "_beta1": 358, "_beta2": 358, "_epsilon": 358, "_mw": 358, "_vw": 358, "_first_pass": 358, "_should_compil": 358, "_step": 358, "new_v": 358, "_lr": 358, "_inplac": 358, "_stop_gradi": 358, "set_stat": 358, "clamp": 359, "clip_by_valu": 359, "captur": [359, 1753], "sparse_funct": 359, "num_class": 359, "new_axi": 359, "_linear": 359, "jax_graph": 359, "to_backend": 359, "to_ivy_modul": 359, "thinli": 359, "whilst": [359, 1741, 1752], "to_haiku_modul": 359, "hk": 359, "loss_fn_t": 359, "without_apply_rng": 359, "rng": 359, "prngkei": 359, "update_rul": 359, "tree_multimap": 359, "mechan": [369, 371, 1742], "robot": [369, 1742], "perfect": 370, "3d": 370, "differenti": [370, 1752], "orient": 370, "pose": 370, "euler": [370, 496], "quaternion": 370, "ivy_mech": 370, "target_facing_rotation_matrix": 370, "polar_to_cartesian_coord": 370, "ordin": [370, 1338, 1425, 1428], "warp": 370, "optic": 370, "voxel": 370, "ivy_vis": 370, "coords_to_voxel_grid": 370, "render_pixel_coord": 370, "neural": [370, 1272, 1742, 1748, 1750, 1751, 1752, 1756, 1758, 1759], "radianc": 370, "nerf": 370, "trajectori": 370, "motion": 370, "plan": [370, 1742], "mobil": [370, 1752], "sample_spline_path": 370, "rigidmobil": 370, "sample_bodi": 370, "drone": 370, "sample_link": 370, "openai": 370, "swimmer": 370, "reward": 370, "supervis": 370, "reinforc": 370, "door": [370, 371], "cartpol": 370, "mountain_car": 370, "pendulum": 370, "reacher": 370, "learnt": 370, "ture": 370, "ntm": 370, "egospher": 370, "spatial": 370, "esm": 370, "ivy_memori": 370, "egocentr": 370, "room": 370, "inspir": 370, "doubt": 371, "grate": 371, "probe": 371, "remark": 371, "surpris": 371, "lock": 371, "gold": 371, "dex": 371, "ye": 371, "scan": 371, "tricki": [371, 1741], "predictor": 371, "tight": 371, "driver": 371, "schedul": [371, 1752, 1759], "Will": 371, "ast": 371, "cond": 371, "jacobian": [371, 1220, 1240, 1752], "checkpoint": 371, "autodiff": 371, "shine": 371, "merci": 371, "autograd": 371, "cluster": [371, 1752], "compet": [371, 1752], "paradigm": [371, 1752], "parallelis": 371, "spmd": 371, "mixtur": 371, "expert": 371, "sophist": 371, "depart": 371, "routin": [371, 1752], "hundr": 371, "thousand": 371, "deepli": [371, 1572, 1574, 1752], "broadli": [371, 1758], "supplementari": 371, "fanci": [371, 1752], "fusion": [371, 1756], "lose": 371, "vmap": [371, 1026, 1752], "pmap": 371, "overhead": [371, 1755], "eventu": 371, "supplement": 371, "backdoor": 371, "callback": 371, "record": [371, 1753], "metric": 371, "outsourc": 371, "integer_arrays_to_float": 372, "with_supported_device_and_dtyp": 372, "version_dict": 372, "with_supported_devic": 372, "with_unsupported_device_and_dtyp": 372, "with_unsupported_devic": 372, "row": [387, 388, 423, 426, 435, 497, 518, 519, 1338, 1386, 1389, 1425, 1428, 1430, 1434, 1450, 1454, 1595, 1596, 1599, 1622, 1638, 1641], "col": [387, 388], "retain": [387, 388, 1220, 1229, 1741], "upward": [387, 388], "downward": [387, 388], "2xn": [387, 388], "subarrai": [387, 388], "position": [391, 393], "inexact": [391, 393], "greatest": [391, 396, 704, 825, 828, 830, 833], "princip": [391, 403, 704, 710, 713, 725, 728, 735, 738], "217234": [391, 403], "dimensio": [407, 408, 415], "avg": [407, 409], "0800": [407, 410], "3979": [407, 410], "9121": [407, 410], "5400": [407, 410], "han": [407, 411], "taper": [407, 411], "00713103": [407, 412], "99997455": [407, 412], "kaiser_derived_window": [407, 412], "00726415": [407, 412], "9999736": [407, 412], "2773e": [407, 413], "0172e": [407, 413], "9294e": [407, 413], "4149": [407, 413], "9138": [407, 413], "5529": [407, 413], "before_1": [407, 417, 1487, 1498, 1501, 1563, 1567], "after_1": [407, 417, 1487, 1498, 1501, 1563, 1567], "before_n": [407, 417, 1487, 1498, 1501, 1563, 1567], "after_n": [407, 417, 1487, 1498, 1501, 1563, 1567], "width": [407, 417], "linear_ramp": [407, 417], "suppli": [407, 417], "ramp": [407, 417], "padding_func": [407, 417], "iaxis_pad_width": [407, 417], "iaxi": [407, 417], "unalt": [407, 417], "vorbis_window": 407, "vorbi": [407, 418], "complementari": [407, 418, 1750, 1758], "38268346": [407, 418], "38268352": [407, 418], "14943586": [407, 418], "8563191": [407, 418], "14943568": [407, 418], "th": [419, 420], "superdiagon": [419, 420, 1338, 1354, 1357], "subdiagon": [419, 420, 1338, 1354, 1357], "manipulation_funct": [423, 424], "horizot": [423, 428], "ndenumer": 423, "multidimension": [423, 431, 432, 1752], "ndindex": 423, "multivari": [439, 441], "conjug": [439, 441], "bayesian": [439, 441], "sparse_arrai": [447, 448, 449, 450, 451], "nativesparsearrai": 447, "sparsearrai": 447, "coo_indic": [447, 450], "csr_crow_indic": [447, 450], "csr_col_indic": [447, 450], "dense_shap": [447, 450], "to_dense_arrai": 447, "is_ivy_sparse_arrai": 447, "is_native_sparse_arrai": 447, "native_sparse_arrai": 447, "native_sparse_array_to_indices_values_and_shap": 447, "deseri": 456, "custom_object": [456, 457, 463], "nonetyp": [456, 457, 463], "xxxxxxxxxxxxxx": [456, 457, 463], "custom_fn": [456, 457, 463], "gaussian": [456, 458, 461], "138": [456, 458, 461], "165": [456, 458, 461, 1272, 1318, 1321], "126": [456, 458, 461, 704, 955, 958, 1685, 1696, 1699], "166": [456, 458, 461, 1648, 1649, 1653], "159": [456, 458, 461, 1272, 1318, 1321], "703": [456, 469, 472], "683": [456, 469, 472], "408": [456, 469, 472], "313": [456, 469, 472], "437": [456, 469, 472], "214": [456, 479, 482], "891": [456, 479, 482], "0768": [456, 484, 487, 704, 795, 798], "231": [456, 484, 487], "363": [456, 484, 487], "invoc": [494, 495], "718281828459045": 496, "newaxi": 496, "pi": 496, "141592653589793": 496, "nestedsequ": [497, 502, 504], "protocol": [497, 498], "_t_co": [497, 498], "ml_framework": [497, 499, 500], "distanc": [497, 499, 500], "adjac": [497, 499, 500], "obj": [497, 502, 504], "typevar": [497, 502, 504], "supportsbufferprotocol": [497, 502, 504], "asarray_handle_nest": 497, "asarray_infer_devic": 497, "asarray_to_native_arrays_and_back": 497, "static_copy_arrai": [497, 509, 511], "interchang": [497, 521, 524, 1487, 1548, 1552], "conserv": [497, 538, 541], "cartesian": [497, 538, 541], "ij": [497, 538, 541, 1685, 1696, 1699], "ni": [497, 538, 541], "xi": [497, 538, 541], "n1": [497, 538, 541], "n2": [497, 538, 541], "n3": [497, 538, 541], "xv": [497, 538, 541], "yv": [497, 538, 541], "y1": [497, 574, 578], "y2": [497, 574, 578], "y3": [497, 574, 578], "intdtyp": [497, 574, 578, 579, 608, 648, 651, 662], "defaultdtyp": 579, "defaultfloatdtyp": 579, "defaultintdtyp": 579, "defaultuintdtyp": 579, "uint_dtyp": [579, 609, 663], "as_native_dtyp": 579, "incompat": [579, 592, 595], "data_type_funct": [579, 597, 600], "check_float": 579, "closest_valid_dtyp": 579, "xtype": [579, 603], "ytype": [579, 603], "native_uint16": [579, 603], "floatdtyp": [579, 605, 606], "4294": [579, 605, 606], "967346": [579, 605, 606], "int_dtyp": [579, 608, 662], "4294967346": [579, 608, 609], "default_uint_dtyp": [579, 663, 668], "uintdtyp": [579, 609, 648, 651, 663, 668], "defualt": [579, 609], "set_default_uint_dtyp": [579, 609, 631, 668], "dtype_bit": 579, "native_bool": [579, 614], "followng": [579, 615, 618], "smallest_norm": [579, 615, 618], "4028235e": [579, 615, 618], "7976931348623157e": [579, 615, 618], "55040e": [579, 615, 618], "encapsul": [579, 626, 629], "314": [579, 626, 629], "9223372036854775808": [579, 626, 629], "9223372036854775807": [579, 626, 629], "65535": [579, 626, 629], "4294967295": [579, 626, 629], "infer_default_dtyp": 579, "native_uint8": [579, 632], "type1": [579, 653], "type2": [579, 653], "array_api_promot": [579, 653, 654], "default_dtype_stack": [579, 660, 665], "unset_default_dtyp": [579, 660], "native_uint64": [579, 660], "ret1": [579, 664], "ret2": [579, 664], "reset": [579, 665, 668, 670, 702, 1026, 1209, 1210, 1211, 1212, 1213], "unset_default_float_dtyp": 579, "unset_default_int_dtyp": 579, "unset_default_uint_dtyp": 579, "valid_dtyp": 579, "native_float16": [579, 669], "defaultdevic": 670, "__enter__": 670, "_dev": 670, "__exit__": 670, "exc_typ": 670, "exc_val": 670, "exc_tb": 670, "exit": 670, "profil": 670, "save_dir": [670, 671], "as_native_dev": [670, 689], "clear_mem_on_dev": 670, "function_supported_devic": 670, "function_unsupported_devic": 670, "139740789224448": [670, 684], "gpu_is_avail": 670, "physic": [670, 686], "num_ivy_arrays_on_dev": 670, "x4": [670, 688], "percent_used_mem_on_dev": 670, "process_specif": [670, 689, 703], "percentag": [670, 689], "ram": [670, 689, 700, 703], "036902561555": [670, 689], "7024003467681645": [670, 689], "7095597456708771": [670, 689], "print_all_ivy_arrays_on_dev": 670, "attr_onli": [670, 690], "chunk": [670, 692, 693, 694], "split_func_cal": 670, "max_chunk_s": [670, 694], "chunk_siz": [670, 694], "input_ax": [670, 694], "output_ax": [670, 694], "feed": [670, 694, 1752, 1753], "fist": [670, 694], "gb": [670, 700, 703], "66700032": [670, 700], "589934592": [670, 700], "tpu_is_avail": 670, "unset_default_devic": 670, "used_mem_on_dev": 670, "219563008": [670, 703], "902400346": [670, 703], "525205504": [670, 703], "magnitud": [704, 705, 708, 720, 723, 930, 933, 1338, 1430, 1434, 1435, 1439], "nearest": [704, 720, 723, 930, 933, 970, 973], "2019": [704, 720, 723, 820, 823, 885, 888, 930, 933, 1752, 1755], "commut": [704, 720, 723], "809": [704, 730, 733], "199": [704, 730, 733], "569": [704, 730, 733], "733": [704, 730, 733], "notat": [704, 740, 743, 1685, 1696, 1699], "denot": [704, 740, 743, 1220, 1253, 1271], "quadrant": [704, 740, 743], "3\u03c0": [704, 740, 743], "588": [704, 740, 743], "719": [704, 740, 743], "197": [704, 740, 743], "bitwis": [704, 750, 753, 765, 768, 775, 778, 915, 918], "invert": [704, 755, 758, 1338, 1391, 1393], "170": [704, 770, 773], "243": [704, 770, 773], "225": [704, 770, 773], "xor": [704, 775, 778, 915, 918], "77": [704, 775, 778, 1338, 1405, 1408, 1685, 1696, 1699], "654": [704, 785, 788], "368": [704, 790, 793], "670": [704, 790, 793], "548": [704, 790, 793, 985, 988], "1490": [704, 790, 793], "0192": [704, 795, 798], "0384": [704, 795, 798], "0576": [704, 795, 798], "115": [704, 795, 798, 955, 958], "698": [704, 800, 803], "accur": [704, 820, 823, 885, 888], "fdlibm": [704, 820, 823, 885, 888], "compliant": [704, 820, 823, 885, 888, 905, 908, 910, 913, 1685, 1700, 1703, 1704, 1707, 1708, 1711, 1716, 1719], "85e": [704, 820, 823], "632": [704, 820, 823], "20e": [704, 820, 823], "72e": [704, 820, 823], "22000": [704, 820, 823], "442000": [704, 820, 823], "742": [704, 885, 888], "y_i": [704, 935, 938], "versu": [704, 950, 953], "189": [704, 955, 958], "252": [704, 955, 958], "315": [704, 955, 958], "378": [704, 955, 958], "1150": [704, 955, 958], "2890": [704, 955, 958], "172": [704, 955, 958], "229": [704, 955, 958], "487": [704, 955, 958, 1272, 1318, 1321], "344": [704, 955, 958], "decim": [704, 970, 973, 1015, 1019], "imprecis": [704, 970, 973], "5654": [704, 970, 973], "034": [704, 970, 973], "433": [704, 970, 973, 1220, 1230, 1240, 1260], "124": [704, 975, 978, 1272, 1318, 1321], "932": [704, 980, 983], "746": [704, 980, 983], "443": [704, 980, 983], "657": [704, 980, 983, 1026, 1048, 1051], "253": [704, 985, 988], "indistinguish": [704, 990, 993], "infinit": [704, 990, 993], "32455532": [704, 990, 993], "89897949": [704, 990, 993], "169": [704, 990, 993], "546": [704, 1005, 1009, 1272, 1318, 1321], "842": [704, 1005, 1009], "916": [704, 1005, 1009, 1471, 1472, 1475], "996": [704, 1005, 1009], "328": [704, 1005, 1009], "462": [704, 1010, 1014], "604": [704, 1010, 1014], "984": [704, 1010, 1014], "997": [704, 1010, 1014], "arg_info": 1026, "inspect": [1026, 1032], "arg_nam": 1026, "recalcul": [1026, 1042], "my_sum": [1026, 1042], "val1": [1026, 1042], "val2": [1026, 1042], "cached_sum": [1026, 1042], "line_eq": [1026, 1042], "slp": [1026, 1042], "itc": [1026, 1042], "cached_line_eq": [1026, 1042], "0353": [1026, 1043, 1046], "424": [1026, 1043, 1046], "58": [1026, 1043, 1046, 1648, 1649, 1653], "176": [1026, 1043, 1046, 1648, 1649, 1653], "339": [1026, 1043, 1046], "271": [1026, 1043, 1046], "135": [1026, 1043, 1046], "406": [1026, 1043, 1046], "168": [1026, 1043, 1046], "391": [1026, 1043, 1046], "417": [1026, 1048, 1051], "583": [1026, 1048, 1051], "0667": [1026, 1048, 1051], "267": [1026, 1048, 1051], "131": [1026, 1048, 1051], "263": [1026, 1048, 1051], "394": [1026, 1048, 1051, 1595, 1617, 1620], "526": [1026, 1048, 1051], "788": [1026, 1048, 1051], "container_typ": 1026, "default_str": [1026, 1055, 1057], "405": [1026, 1063, 1066], "fourier": [1026, 1076, 1079], "function_supported_devices_and_dtyp": 1026, "function_unsupported_devices_and_dtyp": 1026, "get_all_arrays_in_memori": [1026, 1155], "get_array_mod": [1026, 1166, 1209], "array_mod": [1026, 1094], "set_array_mod": [1026, 1094, 1209], "get_exception_trace_mod": [1026, 1099, 1167, 1210], "exception_trace_mod": [1026, 1095], "set_exception_trace_mod": [1026, 1095, 1210], "get_item": 1026, "get_min_bas": [1026, 1168], "get_min_denomin": [1026, 1169], "get_nestable_mod": [1026, 1170, 1211], "set_nestable_mod": [1026, 1099, 1211], "get_queue_timeout": [1026, 1171, 1212], "set_queue_timeout": [1026, 1105, 1212], "get_referrers_recurs": 1026, "seen_set": [1026, 1106], "local_set": [1026, 1106], "get_tmp_dir": [1026, 1173], "inplace_arrays_support": 1026, "inplace_variables_support": 1026, "is_frontend_arrai": 1026, "isscalar": 1026, "match_kwarg": 1026, "allow_dupl": [1026, 1152], "forkserv": [1026, 1153], "spawn": [1026, 1153], "num_arrays_in_memori": 1026, "print_all_arrays_in_memori": 1026, "garbag": [1026, 1155], "collector": [1026, 1155], "set_min_bas": 1026, "set_min_denomin": 1026, "set_shape_array_mod": [1026, 1175, 1213], "shape_array_mod": [1026, 1172, 1213], "set_tmp_dir": 1026, "tmp_dr": [1026, 1173], "tmp": [1026, 1173], "my_tmp": [1026, 1173], "49999999999975": [1026, 1176, 1179], "5015015015010504": [1026, 1176, 1179], "000444502911705e": [1026, 1176, 1179], "9999999999995j": [1026, 1176, 1179], "to_ivy_shap": 1026, "100000023841858": [1026, 1192, 1196], "200000047683716": [1026, 1192, 1196], "299999952316284": [1026, 1192, 1196], "400000095367432": [1026, 1192, 1196], "599999904632568": [1026, 1192, 1196], "to_native_shap": 1026, "try_else_non": 1026, "dictionai": [1026, 1208], "hemant": [1026, 1208], "unset_array_mod": 1026, "unset_shape_array_mod": [1026, 1209, 1212], "unset_exception_trace_mod": 1026, "unset_nestable_mod": 1026, "unset_queue_timeout": 1026, "451": [1026, 1214, 1218], "in_ax": [1026, 1219], "out_ax": [1026, 1219], "thereof": [1026, 1219], "fun": [1026, 1219, 1572, 1583], "summaris": [1026, 1219], "gradienttrack": 1220, "with_grad": [1220, 1253, 1259], "0125": [1220, 1221, 1224], "171": [1220, 1221, 1224], "retain_grad": [1220, 1229], "xs_grad_idx": [1220, 1229], "ret_grad_idx": [1220, 1229], "func_ret": [1220, 1229], "933": [1220, 1230, 1240, 1260], "jac": 1220, "jac_fn": [1220, 1240], "639": [1220, 1241, 1244], "361": [1220, 1241, 1244, 1595, 1606, 1609], "set_with_grad": [1220, 1259, 1271], "with_grads_stack": [1220, 1253, 1259, 1271], "unset_with_grad": 1220, "value_and_grad": 1220, "value_grad": [1220, 1260], "423332": [1220, 1260], "channel_last": [1272, 1273, 1303, 1304], "feature_group_count": [1272, 1273, 1303, 1304], "x_dilat": [1272, 1273, 1303], "fd": [1272, 1293, 1296, 1298, 1301, 1303, 1304], "dhwio": [1272, 1293, 1296], "258": [1272, 1298, 1301], "channel_first": [1272, 1303, 1304, 1316], "conv_general_transpos": 1272, "deconv_length": 1272, "stride_s": [1272, 1305], "kernel_s": [1272, 1305], "depthwis": [1272, 1306, 1309], "hwi": [1272, 1306, 1309], "randomli": [1272, 1311, 1314], "bernoulli": [1272, 1311, 1314], "get_x_data_format": 1272, "handle_pad": 1272, "incom": [1272, 1318, 1321], "666": [1272, 1318, 1321, 1338, 1386, 1389], "4269": [1272, 1318, 1321], "911": [1272, 1318, 1321], "157": [1272, 1318, 1321], "753": [1272, 1318, 1321], "101": [1272, 1318, 1321, 1338, 1376, 1379, 1572, 1578], "545": [1272, 1318, 1321, 1595, 1611, 1614], "547": [1272, 1318, 1321], "852": [1272, 1318, 1321], "963": [1272, 1318, 1321], "108": [1272, 1318, 1321, 1685, 1696, 1699], "196": [1272, 1318, 1321], "306": [1272, 1318, 1321], "num_queri": [1272, 1328, 1331, 1333, 1336], "query_dim": [1272, 1328, 1331], "measur": [1272, 1328, 1331], "num_kei": [1272, 1328, 1331, 1333, 1336], "cont_feat_dim": [1272, 1328, 1331], "numhead": [1272, 1328, 1331], "head_dim": [1272, 1328, 1331], "out_feat_dim": [1272, 1328, 1331], "feat_dim": [1272, 1333, 1336], "score": [1272, 1333, 1336], "axisa": [1338, 1344, 1347], "axisb": [1338, 1344, 1347], "axisc": [1338, 1344, 1347], "293": [1338, 1349, 1352], "46997": [1338, 1349, 1352], "uplo": [1338, 1364, 1367, 1368, 1370], "eigendecomposit": [1338, 1364, 1367], "qlq\u1d40": [1338, 1364, 1367], "orthogon": [1338, 1364, 1367], "eig": [1338, 1364, 1367, 1368, 1370], "hermitian": [1338, 1364, 1367, 1368, 1370, 1430, 1434], "eigenvalu": [1338, 1364, 1367, 1368, 1370], "eigenvector": [1338, 1364, 1367], "array_lik": [1338, 1371, 1374, 1405, 1408], "0012": [1338, 1376, 1379], "00342": [1338, 1376, 1379], "000565": [1338, 1376, 1379], "0104": [1338, 1376, 1379], "0003": [1338, 1376, 1379], "000981": [1338, 1376, 1379], "00282": [1338, 1376, 1379], "000766": [1338, 1376, 1379], "0322": [1338, 1376, 1379], "00237": [1338, 1376, 1379], "000151": [1338, 1376, 1379], "00101": [1338, 1376, 1379], "00019": [1338, 1376, 1379], "0214": [1338, 1376, 1379], "00171": [1338, 1376, 1379], "0107": [1338, 1376, 1379], "0167": [1338, 1376, 1379], "0472": [1338, 1376, 1379], "0536": [1338, 1376, 1379], "0177": [1338, 1376, 1379], "000429": [1338, 1376, 1379], "00762": [1338, 1376, 1379], "transpose_a": [1338, 1381, 1384], "transpose_b": [1338, 1381, 1384], "prepend": [1338, 1381, 1384, 1487, 1503, 1506], "frobeniu": [1338, 1386, 1389], "nuclear": [1338, 1386, 1389], "induc": [1338, 1386, 1389], "47722558": [1338, 1386, 1389], "776": [1338, 1386, 1389], "6000004": [1338, 1386, 1389], "112": [1338, 1405, 1408, 1685, 1696, 1699], "104": [1338, 1405, 1408, 1685, 1696, 1699], "moor": [1338, 1410, 1413], "penros": [1338, 1410, 1413], "orthonorm": [1338, 1415, 1418, 1430, 1434], "usvh": [1338, 1430, 1434], "vh": [1338, 1430, 1434], "et": [1338, 1430, 1434], "cetera": [1338, 1430, 1434], "reconstructed_x": [1338, 1430, 1434], "ss": [1338, 1435, 1439], "615": [1338, 1435, 1439, 1648, 1649, 1653], "866": [1338, 1435, 1439], "864": [1338, 1435, 1439], "contract": [1338, 1440, 1444, 1685, 1696, 1699], "0x": [1338, 1450, 1454], "alexandr": [1338, 1450, 1454], "theophil": [1338, 1450, 1454], "skew": [1338, 1465, 1469], "symmetric_matrix": [1338, 1465, 1469], "cross_product": [1338, 1465, 1469], "discret": [1471, 1477, 1480], "35667497": [1471, 1477, 1480], "793291": [1471, 1482, 1485], "512926": [1471, 1482, 1485], "squeezabl": [1487, 1538, 1541], "famili": [1487, 1543, 1546], "intxx": [1487, 1543, 1546], "floatxx": [1487, 1543, 1546], "retwaitin": [1487, 1553, 1557], "fomaml_step": 1568, "inner_cost_fn": [1568, 1569, 1570], "outer_cost_fn": [1568, 1569, 1570], "inner_grad_step": [1568, 1569, 1570, 1571], "inner_learning_r": [1568, 1569, 1570, 1571], "inner_optimization_step": [1568, 1569, 1570, 1571], "inner_batch_fn": [1568, 1569, 1570], "outer_batch_fn": [1568, 1569, 1570], "average_across_step": [1568, 1569, 1570], "inner_v": [1568, 1569, 1570], "keep_inner_v": [1568, 1569, 1570], "outer_v": [1568, 1569, 1570], "keep_outer_v": [1568, 1569, 1570], "return_inner_v": [1568, 1569, 1570, 1571], "num_task": [1568, 1569, 1570, 1571], "maml": [1568, 1569, 1570], "recev": [1568, 1569, 1570], "0x7f820fecba60": [1568, 1569, 1570, 1571], "maml_step": 1568, "rece": [1568, 1570], "reptile_step": 1568, "cost_fn": [1568, 1571], "reptil": [1568, 1571], "receivng": [1568, 1571], "all_nested_indic": 1572, "include_nest": [1572, 1573], "_index": [1572, 1573, 1583], "_base": [1572, 1573, 1582, 1583], "copy_nest": 1572, "to_mut": [1572, 1574, 1584], "mutabl": [1572, 1574, 1584], "copied_nest": [1572, 1574], "1337": [1572, 1574], "insert_into_nest_at_index": 1572, "insert_into_nest_at_indic": 1572, "special_squar": [1572, 1578], "6666666666666667": [1572, 1578], "special_pow": [1572, 1578], "linear_model": [1572, 1578], "map_nest_at_index": 1572, "hh": [1572, 1579], "map_nest_at_indic": 1572, "ub": [1572, 1580], "tb": [1572, 1580], "multi_index_nest": 1572, "nested_ani": 1572, "check_nest": [1572, 1582, 1583], "conditon": [1572, 1582, 1583], "nested_argwher": 1572, "stop_after_n_found": [1572, 1583], "nested_indic": [1572, 1583], "_depth": [1572, 1584], "_tuple_check_fn": [1572, 1584], "_list_check_fn": [1572, 1584], "_dict_check_fn": [1572, 1584], "nested_multi_map": 1572, "nest0": [1572, 1585], "ivy_arrai": [1572, 1585], "funciton": [1572, 1585], "prune_nest_at_index": 1572, "prune_nest_at_indic": 1572, "set_nest_at_index": 1572, "set_nest_at_indic": 1572, "111": [1572, 1589], "xyz": [1572, 1589], "pqr": [1572, 1589], "mini": [1590, 1591, 1594], "217": [1590, 1591, 1594], "uniformli": [1595, 1601, 1604, 1611, 1614], "22346112": [1595, 1606, 1609], "0922": [1595, 1606, 1609], "515": [1595, 1606, 1609], "596": [1595, 1606, 1609], "247": [1595, 1606, 1609], "627": [1595, 1606, 1609], "9213753": [1595, 1606, 1609], "12818667": [1595, 1606, 1609], "799": [1595, 1606, 1609], "469": [1595, 1606, 1609], "287": [1595, 1606, 1609], "0366": [1595, 1606, 1609], "26431865": [1595, 1611, 1614], "475": [1595, 1611, 1614], "878": [1595, 1611, 1614], "861": [1595, 1611, 1614], "929": [1595, 1611, 1614], "789": [1595, 1611, 1614], "519": [1595, 1611, 1614], "0435": [1595, 1611, 1614], "381": [1595, 1611, 1614, 1648, 1649, 1653], "4608004": [1595, 1611, 1614], "8458502": [1595, 1611, 1614], "x_j": [1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "aggreg": [1648, 1649, 1653], "fourth": [1648, 1649, 1653], "607": [1648, 1649, 1653], "735": [1648, 1649, 1653], "0396": [1648, 1649, 1653], "828": [1648, 1649, 1653], "144": [1648, 1649, 1653], "40501155": [1648, 1649, 1653], "77361575": [1648, 1649, 1653], "97776199": [1648, 1649, 1653], "36831157": [1648, 1649, 1653], "89148434": [1648, 1649, 1653], "9512272": [1648, 1649, 1653], "67542176": [1648, 1649, 1653], "41985657": [1648, 1649, 1653], "23478023": [1648, 1649, 1653], "1141": [1648, 1649, 1653], "8101": [1648, 1649, 1653], "9298": [1648, 1649, 1653], "8460": [1648, 1649, 1653], "2119": [1648, 1649, 1653], "3519": [1648, 1649, 1653], "6252": [1648, 1649, 1653], "4033": [1648, 1649, 1653], "7443": [1648, 1649, 1653], "2577": [1648, 1649, 1653], "3707": [1648, 1649, 1653], "0545": [1648, 1649, 1653], "3238": [1648, 1649, 1653], "5944": [1648, 1649, 1653], "0775": [1648, 1649, 1653], "4327": [1648, 1649, 1653], "889": [1648, 1649, 1653], "175": [1648, 1649, 1653], "763": [1648, 1649, 1653], "071": [1648, 1649, 1653], "262": [1648, 1649, 1653], "114": [1648, 1649, 1653], "349": [1648, 1649, 1653], "594": [1648, 1649, 1653], "335": [1648, 1649, 1653], "457": [1648, 1649, 1653], "827": [1648, 1649, 1653], "209": [1648, 1649, 1653], "einstein": [1685, 1696, 1699], "summat": [1685, 1696, 1699], "seq": [1685, 1696, 1699], "jk": [1685, 1696, 1699], "ik": [1685, 1696, 1699], "510": [1685, 1696, 1699], "117": [1685, 1696, 1699], "sentinel": [1685, 1700, 1703, 1708, 1711], "90000004": [1685, 1704, 1707], "statistical_funct": [1685, 1716, 1719], "8164966": [1685, 1716, 1719], "07472222": [1685, 1725, 1729], "simplicit": [1730, 1731, 1734, 1736, 1739], "nail": 1741, "funtion": 1741, "asset": 1741, "functiona": 1741, "scientist": 1741, "deploi": [1741, 1750, 1751, 1752, 1754, 1758], "correl": 1741, "analyz": 1741, "ai": [1742, 1750, 1754], "colab": 1742, "sharp": 1742, "favorit": 1742, "jax_concat": 1742, "tf_concat": 1742, "np_concat": 1742, "torch_concat": 1742, "get_devic": 1742, "reduce_prod": 1742, "reduce_sum": 1742, "gradient_imag": 1742, "indices_wher": 1742, "bilinear_resampl": 1742, "stack_imag": 1742, "neural_net": 1742, "floormod": 1742, "articl": 1742, "lenton2021ivi": 1742, "inter": 1742, "lenton": 1742, "daniel": 1742, "pardo": 1742, "fabio": 1742, "falck": 1742, "fabian": 1742, "jame": 1742, "stephen": 1742, "clark": 1742, "ronald": 1742, "journal": 1742, "arxiv": 1742, "preprint": 1742, "2102": 1742, "02886": 1742, "2021": 1742, "conceptu": [1748, 1753], "broken": [1748, 1752], "tracer": 1748, "infrastructur": [1748, 1754, 1755], "vendor": [1748, 1754], "complimentari": [1748, 1758], "acycl": [1748, 1753], "insert_numb": 1749, "insert_t": 1749, "scaffold": [1750, 1758], "heart": 1750, "toolchain": [1750, 1755], "intermedi": [1750, 1751, 1752, 1753, 1758], "ir": [1750, 1753, 1758], "assembli": [1750, 1757, 1758], "idl": 1750, "middl": 1750, "emit": 1750, "gnu": [1750, 1755], "gcc": [1750, 1757], "broader": 1750, "heterogen": 1750, "aid": 1750, "coprocessor": 1750, "programm": [1750, 1757], "gate": 1750, "onednn": 1750, "awai": [1750, 1752], "sit": [1750, 1753, 1758], "tandem": 1750, "possess": 1750, "underneath": 1750, "export": [1751, 1758], "signal": [1751, 1752], "khrono": [1751, 1757], "appl": 1751, "coremltool": 1751, "albeit": 1751, "promin": 1752, "abbrevi": 1752, "laboratori": 1752, "proprietari": [1752, 1756, 1757], "mathwork": 1752, "commerci": 1752, "1984": 1752, "plot": 1752, "toolbox": 1752, "mupad": 1752, "engin": [1752, 1754, 1755], "simulink": 1752, "graphic": [1752, 1756, 1757], "simul": 1752, "embed": 1752, "million": [1752, 1755], "worldwid": 1752, "scienc": [1752, 1754], "econom": 1752, "2001": 1752, "scientif": 1752, "interpol": 1752, "od": 1752, "solver": 1752, "fortran": [1752, 1756], "cython": 1752, "friendli": 1752, "2002": 1752, "lua": 1752, "luajit": 1752, "idiap": 1752, "epfl": 1752, "2005": 1752, "numarrai": 1752, "cpython": 1752, "partli": 1752, "2007": 1752, "classif": 1752, "regress": [1752, 1759], "forest": 1752, "boost": 1752, "dbscan": 1752, "inbuilt": 1752, "esqu": 1752, "aesara": 1752, "2008": 1752, "datafram": 1752, "critic": [1752, 1758], "2012": 1752, "Its": 1752, "polymorph": 1752, "parallel": [1752, 1756, 1757], "mpi": 1752, "openmp": 1752, "glue": 1752, "jaot": 1752, "nasa": 1752, "cern": 1752, "climat": 1752, "allianc": 1752, "influenti": 1752, "2014": 1752, "analyt": [1752, 1754, 1758], "scala": 1752, "ship": 1752, "forgiv": 1752, "decemb": 1752, "announc": 1752, "transit": 1752, "mainten": 1752, "v7": 1752, "meaning": 1752, "2016": 1752, "imper": 1752, "fast": 1752, "amazon": 1752, "traction": 1752, "cognit": [1752, 1759], "toolkit": [1752, 1753, 1759], "grade": 1752, "realiz": 1752, "dnn": 1752, "cnn": 1752, "rnn": 1752, "stochast": 1752, "sgd": 1752, "backpropag": 1752, "succumb": 1752, "came": 1752, "monitor": 1752, "practition": [1752, 1756, 1757, 1758], "hobbyist": 1752, "tremend": 1752, "ecosystem": 1752, "gear": 1752, "batteri": 1752, "zygot": 1752, "jl": 1752, "workload": 1752, "daggerflux": 1752, "frontier": 1752, "hessian": 1752, "2018": 1752, "lightweight": [1752, 1759], "shortcom": 1752, "eas": 1752, "barrier": 1752, "inexperienc": 1752, "underdevelop": 1752, "fanat": 1752, "ounc": 1752, "infanc": 1752, "emerg": 1752, "nich": 1752, "introduct": 1752, "lite": 1752, "enterpris": 1752, "reinvent": [1752, 1754], "inertia": 1752, "haven": 1752, "creator": [1752, 1754], "paszk": 1752, "hi": 1752, "safeti": 1752, "bulk": 1752, "haskel": 1752, "dataflow": 1753, "distil": 1753, "essenc": [1753, 1758], "enclos": 1753, "scope": [1753, 1757], "trace_modul": 1753, "scriptfunct": 1753, "scriptmodul": 1753, "fake": 1753, "proxi": 1753, "site": 1753, "graphmodul": 1753, "travi": 1754, "oliph": 1754, "leader": 1754, "led": 1754, "cornerston": 1754, "numba": 1754, "numfocu": 1754, "pydata": 1754, "confer": 1754, "consult": 1754, "servic": 1754, "expertis": 1754, "devop": 1754, "mlop": 1754, "dashboard": 1754, "startup": 1754, "mlir": [1754, 1755, 1758], "Their": 1754, "held": 1754, "privileg": 1754, "presum": 1754, "llvm": [1754, 1757], "founder": 1754, "tvm": [1754, 1758], "sustain": 1754, "empow": 1754, "har": 1754, "burden": 1754, "benchmark": 1754, "convention": 1755, "precompil": 1755, "executor": 1755, "exploit": 1755, "julia": [1755, 1758], "fsf": 1755, "gpl": 1755, "biggest": [1755, 1758], "nvidia": [1756, 1757], "conduct": 1756, "throughput": 1756, "autotun": 1756, "consumpt": 1756, "gpgpu": 1756, "talk": 1757, "classic": 1757, "sycl": 1757, "dpc": 1757, "processor": 1757, "x86": 1757, "oneapi": 1757, "ia": 1757, "aka": 1757, "xeon": 1757, "gen9": 1757, "xe": 1757, "card": 1757, "arria": 1757, "gx": 1757, "fpga": 1757, "tune": [1757, 1758], "lofti": 1758, "ambit": 1758, "realm": 1758, "bedrock": 1758, "flux": 1758, "bite": 1758, "chew": 1758, "eagerpi": 1758, "tensorli": 1758, "thinc": 1758, "neuropod": 1758, "exhibit": 1758, "emploi": 1758, "fx": 1758, "retrain": 1758, "wider": 1758, "closer": 1758, "greatli": 1758, "challeng": 1758, "modular": 1758, "anywher": 1758, "switch": 1759, "theano": 1759, "plaidml": 1759, "partial_svd": 1759, "tucker_mode_dot": 1759, "excel": 1759, "subsystem": 1759}, "objects": {"ivy.array": [[45, 0, 0, "-", "activations"], [47, 0, 0, "-", "array"], [49, 0, 0, "-", "conversions"], [54, 0, 0, "-", "creation"], [56, 0, 0, "-", "data_type"], [58, 0, 0, "-", "device"], [60, 0, 0, "-", "elementwise"], [62, 0, 0, "-", "extensions"], [137, 0, 0, "-", "general"], [139, 0, 0, "-", "gradients"], [141, 0, 0, "-", "image"], [143, 0, 0, "-", "layers"], [145, 0, 0, "-", "linalg"], [147, 0, 0, "-", "losses"], [149, 0, 0, "-", "manipulation"], [151, 0, 0, "-", "norms"], [153, 0, 0, "-", "random"], [155, 0, 0, "-", "searching"], [157, 0, 0, "-", "set"], [159, 0, 0, "-", "sorting"], [161, 0, 0, "-", "statistical"], [163, 0, 0, "-", "utility"], [165, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[46, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[46, 2, 1, "", "gelu"], [46, 2, 1, "", "leaky_relu"], [46, 2, 1, "", "log_softmax"], [46, 2, 1, "", "relu"], [46, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [46, 2, 1, "", "softplus"]], "ivy.array.array": [[48, 1, 1, "", "Array"]], "ivy.array.array.Array": [[48, 3, 1, "", "T"], [48, 2, 1, "", "__add__"], [48, 2, 1, "", "__init__"], [48, 2, 1, "", "__le__"], [48, 2, 1, "", "__radd__"], [48, 2, 1, "", "__rrshift__"], [48, 2, 1, "", "__rshift__"], [48, 2, 1, "", "__rsub__"], [48, 2, 1, "", "__sub__"], [48, 3, 1, "", "data"], [48, 3, 1, "", "device"], [48, 3, 1, "", "dtype"], [48, 3, 1, "", "mT"], [48, 3, 1, "", "ndim"], [48, 3, 1, "", "shape"], [48, 3, 1, "", "size"]], "ivy.array.conversions": [[50, 4, 1, "", "args_to_ivy"], [51, 4, 1, "", "args_to_native"], [52, 4, 1, "", "to_ivy"], [53, 4, 1, "", "to_native"]], "ivy.array.creation": [[55, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[55, 2, 1, "", "asarray"], [55, 2, 1, "", "copy_array"], [55, 2, 1, "", "empty_like"], [55, 2, 1, "", "from_dlpack"], [55, 2, 1, "", "full_like"], [55, 2, 1, "", "meshgrid"], [55, 2, 1, "", "native_array"], [55, 2, 1, "", "one_hot"], [55, 2, 1, "", "ones_like"], [55, 2, 1, "", "tril"], [55, 2, 1, "", "triu"], [55, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[57, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[57, 2, 1, "", "astype"], [57, 2, 1, "", "broadcast_arrays"], [57, 2, 1, "", "broadcast_to"], [57, 2, 1, "", "can_cast"], [57, 2, 1, "", "dtype"], [57, 2, 1, "", "finfo"], [57, 2, 1, "", "iinfo"], [57, 2, 1, "", "is_bool_dtype"], [57, 2, 1, "", "is_float_dtype"], [57, 2, 1, "", "is_int_dtype"], [57, 2, 1, "", "is_uint_dtype"], [57, 2, 1, "", "result_type"]], "ivy.array.device": [[59, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[59, 2, 1, "", "dev"], [59, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[61, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[61, 2, 1, "", "abs"], [61, 2, 1, "", "acos"], [61, 2, 1, "", "acosh"], [61, 2, 1, "", "add"], [61, 2, 1, "", "asin"], [61, 2, 1, "", "asinh"], [61, 2, 1, "", "atan"], [61, 2, 1, "", "atan2"], [61, 2, 1, "", "atanh"], [61, 2, 1, "", "bitwise_and"], [61, 2, 1, "", "bitwise_invert"], [61, 2, 1, "", "bitwise_left_shift"], [61, 2, 1, "", "bitwise_or"], [61, 2, 1, "", "bitwise_right_shift"], [61, 2, 1, "", "bitwise_xor"], [61, 2, 1, "", "ceil"], [61, 2, 1, "", "cos"], [61, 2, 1, "", "cosh"], [61, 2, 1, "", "deg2rad"], [61, 2, 1, "", "divide"], [61, 2, 1, "", "equal"], [61, 2, 1, "", "erf"], [61, 2, 1, "", "exp"], [61, 2, 1, "", "expm1"], [61, 2, 1, "", "floor"], [61, 2, 1, "", "floor_divide"], [61, 2, 1, "", "greater"], [61, 2, 1, "", "greater_equal"], [61, 2, 1, "", "isfinite"], [61, 2, 1, "", "isinf"], [61, 2, 1, "", "isnan"], [61, 2, 1, "", "isreal"], [61, 2, 1, "", "less"], [61, 2, 1, "", "less_equal"], [61, 2, 1, "", "log"], [61, 2, 1, "", "log10"], [61, 2, 1, "", "log1p"], [61, 2, 1, "", "log2"], [61, 2, 1, "", "logaddexp"], [61, 2, 1, "", "logical_and"], [61, 2, 1, "", "logical_not"], [61, 2, 1, "", "logical_or"], [61, 2, 1, "", "logical_xor"], [61, 2, 1, "", "maximum"], [61, 2, 1, "", "minimum"], [61, 2, 1, "", "multiply"], [61, 2, 1, "", "negative"], [61, 2, 1, "", "not_equal"], [61, 2, 1, "", "positive"], [61, 2, 1, "", "pow"], [61, 2, 1, "", "rad2deg"], [61, 2, 1, "", "reciprocal"], [61, 2, 1, "", "remainder"], [61, 2, 1, "", "round"], [61, 2, 1, "", "sign"], [61, 2, 1, "", "sin"], [61, 2, 1, "", "sinh"], [61, 2, 1, "", "sqrt"], [61, 2, 1, "", "square"], [61, 2, 1, "", "subtract"], [61, 2, 1, "", "tan"], [61, 2, 1, "", "tanh"], [61, 2, 1, "", "trunc"], [61, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[63, 0, 0, "-", "activations"], [99, 0, 0, "-", "conversions"], [101, 0, 0, "-", "creation"], [103, 0, 0, "-", "data_type"], [105, 0, 0, "-", "device"], [107, 0, 0, "-", "elementwise"], [109, 0, 0, "-", "general"], [111, 0, 0, "-", "gradients"], [113, 0, 0, "-", "image"], [115, 0, 0, "-", "layers"], [117, 0, 0, "-", "linalg"], [119, 0, 0, "-", "losses"], [121, 0, 0, "-", "manipulation"], [123, 0, 0, "-", "norms"], [125, 0, 0, "-", "random"], [127, 0, 0, "-", "searching"], [129, 0, 0, "-", "set"], [131, 0, 0, "-", "sorting"], [133, 0, 0, "-", "statistical"], [135, 0, 0, "-", "utility"]], "ivy.array.extensions.activations": [[64, 1, 1, "", "ArrayWithActivationsExtensions"]], "ivy.array.extensions.conversions": [[100, 1, 1, "", "ArrayWithConversionsExtensions"]], "ivy.array.extensions.creation": [[102, 1, 1, "", "ArrayWithCreationExtensions"]], "ivy.array.extensions.data_type": [[104, 1, 1, "", "ArrayWithData_typeExtensions"]], "ivy.array.extensions.device": [[106, 1, 1, "", "ArrayWithDeviceExtensions"]], "ivy.array.extensions.elementwise": [[108, 1, 1, "", "ArrayWithElementWiseExtensions"]], "ivy.array.extensions.elementwise.ArrayWithElementWiseExtensions": [[108, 2, 1, "", "exp2"], [108, 2, 1, "", "float_power"], [108, 2, 1, "", "fmax"], [108, 2, 1, "", "fmod"], [108, 2, 1, "", "gcd"], [108, 2, 1, "", "isneginf"], [108, 2, 1, "", "isposinf"], [108, 2, 1, "", "lcm"], [108, 2, 1, "", "logaddexp2"], [108, 2, 1, "", "nan_to_num"], [108, 2, 1, "", "nansum"], [108, 2, 1, "", "sinc"], [108, 2, 1, "", "trapz"]], "ivy.array.extensions.general": [[110, 1, 1, "", "ArrayWithGeneralExtensions"]], "ivy.array.extensions.gradients": [[112, 1, 1, "", "ArrayWithGradientsExtensions"]], "ivy.array.extensions.image": [[114, 1, 1, "", "ArrayWithImageExtension"]], "ivy.array.extensions.layers": [[116, 1, 1, "", "ArrayWithLayersExtensions"]], "ivy.array.extensions.layers.ArrayWithLayersExtensions": [[116, 2, 1, "", "avg_pool3d"], [116, 2, 1, "", "flatten"], [116, 2, 1, "", "max_pool1d"], [116, 2, 1, "", "max_pool2d"], [116, 2, 1, "", "max_pool3d"], [116, 2, 1, "", "pad"]], "ivy.array.extensions.linalg": [[118, 1, 1, "", "ArrayWithLinalgExtensions"]], "ivy.array.extensions.linalg.ArrayWithLinalgExtensions": [[118, 2, 1, "", "diagflat"], [118, 2, 1, "", "kron"]], "ivy.array.extensions.losses": [[120, 1, 1, "", "ArrayWithLossesExtensions"]], "ivy.array.extensions.manipulation": [[122, 1, 1, "", "ArrayWithManipulationExtensions"]], "ivy.array.extensions.manipulation.ArrayWithManipulationExtensions": [[122, 2, 1, "", "fliplr"], [122, 2, 1, "", "flipud"], [122, 2, 1, "", "heaviside"], [122, 2, 1, "", "hstack"], [122, 2, 1, "", "i0"], [122, 2, 1, "", "moveaxis"], [122, 2, 1, "", "rot90"], [122, 2, 1, "", "top_k"], [122, 2, 1, "", "vstack"]], "ivy.array.extensions.norms": [[124, 1, 1, "", "ArrayWithNormsExtensions"]], "ivy.array.extensions.random": [[126, 1, 1, "", "ArrayWithRandomExtensions"]], "ivy.array.extensions.random.ArrayWithRandomExtensions": [[126, 2, 1, "", "dirichlet"]], "ivy.array.extensions.searching": [[128, 1, 1, "", "ArrayWithSearchingExtensions"]], "ivy.array.extensions.set": [[130, 1, 1, "", "ArrayWithSetExtensions"]], "ivy.array.extensions.sorting": [[132, 1, 1, "", "ArrayWithSortingExtensions"]], "ivy.array.extensions.sorting.ArrayWithSortingExtensions": [[132, 2, 1, "", "msort"]], "ivy.array.extensions.statistical": [[134, 1, 1, "", "ArrayWithStatisticalExtensions"]], "ivy.array.extensions.statistical.ArrayWithStatisticalExtensions": [[134, 2, 1, "", "median"]], "ivy.array.extensions.utility": [[136, 1, 1, "", "ArrayWithUtilityExtensions"]], "ivy.array.general": [[138, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[138, 2, 1, "", "all_equal"], [138, 2, 1, "", "array_equal"], [138, 2, 1, "", "assert_supports_inplace"], [138, 2, 1, "", "clip_matrix_norm"], [138, 2, 1, "", "clip_vector_norm"], [138, 2, 1, "", "default"], [138, 2, 1, "", "einops_rearrange"], [138, 2, 1, "", "einops_reduce"], [138, 2, 1, "", "einops_repeat"], [138, 2, 1, "", "exists"], [138, 2, 1, "", "fourier_encode"], [138, 2, 1, "", "gather"], [138, 2, 1, "", "gather_nd"], [138, 2, 1, "", "get_num_dims"], [138, 2, 1, "", "has_nans"], [138, 2, 1, "", "inplace_decrement"], [138, 2, 1, "", "inplace_increment"], [138, 2, 1, "", "inplace_update"], [138, 2, 1, "", "is_array"], [138, 2, 1, "", "is_ivy_array"], [138, 2, 1, "", "is_ivy_container"], [138, 2, 1, "", "is_native_array"], [138, 2, 1, "", "scatter_flat"], [138, 2, 1, "", "scatter_nd"], [138, 2, 1, "", "stable_divide"], [138, 2, 1, "", "stable_pow"], [138, 2, 1, "", "supports_inplace_updates"], [138, 2, 1, "", "to_list"], [138, 2, 1, "", "to_numpy"], [138, 2, 1, "", "to_scalar"], [138, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[140, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[140, 2, 1, "", "adam_step"], [140, 2, 1, "", "adam_update"], [140, 2, 1, "", "gradient_descent_update"], [140, 2, 1, "", "is_variable"], [140, 2, 1, "", "lamb_update"], [140, 2, 1, "", "lars_update"], [140, 2, 1, "", "optimizer_update"], [140, 2, 1, "", "stop_gradient"], [140, 2, 1, "", "variable"], [140, 2, 1, "", "variable_data"]], "ivy.array.image": [[142, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[144, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[144, 2, 1, "", "conv1d"], [144, 2, 1, "", "conv1d_transpose"], [144, 2, 1, "", "conv2d"], [144, 2, 1, "", "conv3d"], [144, 2, 1, "", "conv3d_transpose"], [144, 2, 1, "", "depthwise_conv2d"], [144, 2, 1, "", "dropout"], [144, 2, 1, "", "linear"], [144, 2, 1, "", "lstm_update"], [144, 2, 1, "", "multi_head_attention"], [144, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linalg": [[146, 1, 1, "", "ArrayWithLinalg"]], "ivy.array.linalg.ArrayWithLinalg": [[146, 2, 1, "", "cholesky"], [146, 2, 1, "", "cross"], [146, 2, 1, "", "det"], [146, 2, 1, "", "diag"], [146, 2, 1, "", "diagonal"], [146, 2, 1, "", "eigh"], [146, 2, 1, "", "eigvalsh"], [146, 2, 1, "", "inner"], [146, 2, 1, "", "inv"], [146, 2, 1, "", "matmul"], [146, 2, 1, "", "matrix_norm"], [146, 2, 1, "", "matrix_rank"], [146, 2, 1, "", "matrix_transpose"], [146, 2, 1, "", "outer"], [146, 2, 1, "", "pinv"], [146, 2, 1, "", "qr"], [146, 2, 1, "", "slogdet"], [146, 2, 1, "", "solve"], [146, 2, 1, "", "svd"], [146, 2, 1, "", "svdvals"], [146, 2, 1, "", "tensordot"], [146, 2, 1, "", "trace"], [146, 2, 1, "", "vander"], [146, 2, 1, "", "vecdot"], [146, 2, 1, "", "vector_norm"], [146, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[148, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[148, 2, 1, "", "binary_cross_entropy"], [148, 2, 1, "", "cross_entropy"], [148, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[150, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[150, 2, 1, "", "clip"], [150, 2, 1, "", "concat"], [150, 2, 1, "", "constant_pad"], [150, 2, 1, "", "expand_dims"], [150, 2, 1, "", "flip"], [150, 2, 1, "", "permute_dims"], [150, 2, 1, "", "repeat"], [150, 2, 1, "", "reshape"], [150, 2, 1, "", "roll"], [150, 2, 1, "", "split"], [150, 2, 1, "", "squeeze"], [150, 2, 1, "", "stack"], [150, 2, 1, "", "swapaxes"], [150, 2, 1, "", "tile"], [150, 2, 1, "", "unstack"], [150, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[152, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[152, 2, 1, "", "layer_norm"]], "ivy.array.random": [[154, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[154, 2, 1, "", "beta"], [154, 2, 1, "", "gamma"], [154, 2, 1, "", "multinomial"], [154, 2, 1, "", "randint"], [154, 2, 1, "", "random_normal"], [154, 2, 1, "", "random_uniform"], [154, 2, 1, "", "shuffle"]], "ivy.array.searching": [[156, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[156, 2, 1, "", "argmax"], [156, 2, 1, "", "argmin"], [156, 2, 1, "", "argwhere"], [156, 2, 1, "", "nonzero"], [156, 2, 1, "", "where"]], "ivy.array.set": [[158, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[158, 2, 1, "", "unique_all"], [158, 2, 1, "", "unique_counts"], [158, 2, 1, "", "unique_inverse"], [158, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[160, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[160, 2, 1, "", "argsort"], [160, 2, 1, "", "searchsorted"], [160, 2, 1, "", "sort"]], "ivy.array.statistical": [[162, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[162, 2, 1, "", "cumprod"], [162, 2, 1, "", "cumsum"], [162, 2, 1, "", "einsum"], [162, 2, 1, "", "max"], [162, 2, 1, "", "mean"], [162, 2, 1, "", "min"], [162, 2, 1, "", "prod"], [162, 2, 1, "", "std"], [162, 2, 1, "", "sum"], [162, 2, 1, "", "var"]], "ivy.array.utility": [[164, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[164, 2, 1, "", "all"], [164, 2, 1, "", "any"]], "ivy.array.wrapping": [[166, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [19, 0, 0, "-", "backend_handler"], [372, 0, 0, "-", "func_wrapper"], [1802, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_inplace_sizes_valid"], [14, 4, 1, "", "check_isinstance"], [15, 4, 1, "", "check_less"], [16, 4, 1, "", "check_one_way_broadcastable"], [17, 4, 1, "", "check_shape"], [18, 4, 1, "", "check_true"]], "ivy.backend_handler": [[19, 1, 1, "", "ContextManager"], [20, 4, 1, "", "choose_random_backend"], [21, 4, 1, "", "clear_backend_stack"], [22, 4, 1, "", "current_backend"], [23, 4, 1, "", "fn_name_from_version_specific_fn_name"], [24, 4, 1, "", "get_backend"], [25, 4, 1, "", "set_backend"], [26, 4, 1, "", "set_backend_to_specific_version"], [27, 4, 1, "", "set_jax_backend"], [28, 4, 1, "", "set_numpy_backend"], [29, 4, 1, "", "set_tensorflow_backend"], [30, 4, 1, "", "set_torch_backend"], [31, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[19, 2, 1, "", "__init__"]], "ivy.container": [[168, 0, 0, "-", "activations"], [170, 0, 0, "-", "base"], [172, 0, 0, "-", "container"], [174, 0, 0, "-", "conversions"], [176, 0, 0, "-", "creation"], [178, 0, 0, "-", "data_type"], [180, 0, 0, "-", "device"], [182, 0, 0, "-", "elementwise"], [184, 0, 0, "-", "extensions"], [302, 0, 0, "-", "general"], [304, 0, 0, "-", "gradients"], [306, 0, 0, "-", "image"], [308, 0, 0, "-", "layers"], [310, 0, 0, "-", "linalg"], [312, 0, 0, "-", "losses"], [314, 0, 0, "-", "manipulation"], [316, 0, 0, "-", "norms"], [318, 0, 0, "-", "random"], [320, 0, 0, "-", "searching"], [322, 0, 0, "-", "set"], [324, 0, 0, "-", "sorting"], [326, 0, 0, "-", "statistical"], [328, 0, 0, "-", "utility"], [330, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[169, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[169, 2, 1, "", "gelu"], [169, 2, 1, "", "leaky_relu"], [169, 2, 1, "", "log_softmax"], [169, 2, 1, "", "relu"], [169, 2, 1, "", "sigmoid"], [169, 2, 1, "", "softmax"], [169, 2, 1, "", "softplus"], [169, 2, 1, "", "static_gelu"], [169, 2, 1, "", "static_leaky_relu"], [169, 2, 1, "", "static_log_softmax"], [169, 2, 1, "", "static_relu"], [169, 2, 1, "", "static_sigmoid"], [169, 2, 1, "", "static_softmax"], [169, 2, 1, "", "static_softplus"]], "ivy.container.base": [[171, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__init__"], [171, 2, 1, "", "__setitem__"], [171, 2, 1, "", "all_false"], [171, 2, 1, "", "all_key_chains"], [171, 2, 1, "", "all_true"], [171, 2, 1, "", "as_bools"], [171, 2, 1, "", "assert_contains_sub_container"], [171, 2, 1, "", "assert_contains_sub_structure"], [171, 2, 1, "", "assert_identical"], [171, 2, 1, "", "assert_identical_structure"], [171, 2, 1, "", "at_key_chain"], [171, 2, 1, "", "at_key_chains"], [171, 2, 1, "", "at_keys"], [171, 2, 1, "", "combine"], [171, 2, 1, "", "common_key_chains"], [171, 3, 1, "", "config"], [171, 2, 1, "", "cont_inplace_update"], [171, 2, 1, "", "contains_sub_container"], [171, 2, 1, "", "contains_sub_structure"], [171, 2, 1, "", "copy"], [171, 2, 1, "", "create_if_absent"], [171, 2, 1, "", "cutoff_at_depth"], [171, 2, 1, "", "cutoff_at_height"], [171, 2, 1, "", "deep_copy"], [171, 3, 1, "", "dev"], [171, 3, 1, "", "dev_str"], [171, 2, 1, "", "diff"], [171, 2, 1, "", "duplicate_array_keychains"], [171, 2, 1, "", "find_sub_container"], [171, 2, 1, "", "find_sub_structure"], [171, 2, 1, "", "flatten_key_chain"], [171, 2, 1, "", "flatten_key_chains"], [171, 2, 1, "", "format_key_chains"], [171, 2, 1, "", "from_disk_as_hdf5"], [171, 2, 1, "", "from_disk_as_json"], [171, 2, 1, "", "from_disk_as_pickled"], [171, 2, 1, "", "from_flat_list"], [171, 2, 1, "", "h5_file_size"], [171, 2, 1, "", "handle_inplace"], [171, 2, 1, "", "has_key"], [171, 2, 1, "", "has_key_chain"], [171, 2, 1, "", "identical"], [171, 2, 1, "", "identical_array_shapes"], [171, 2, 1, "", "identical_configs"], [171, 2, 1, "", "identical_structure"], [171, 2, 1, "", "if_exists"], [171, 3, 1, "", "ivy"], [171, 2, 1, "", "key_chains_containing"], [171, 2, 1, "", "list_join"], [171, 2, 1, "", "list_stack"], [171, 2, 1, "", "map"], [171, 2, 1, "", "map_conts"], [171, 3, 1, "", "max_depth"], [171, 2, 1, "", "multi_map"], [171, 2, 1, "", "multi_map_in_static_method"], [171, 2, 1, "", "num_arrays"], [171, 2, 1, "", "overwrite_at_key_chain"], [171, 2, 1, "", "overwrite_at_key_chains"], [171, 2, 1, "", "prune_empty"], [171, 2, 1, "", "prune_key_chain"], [171, 2, 1, "", "prune_key_chains"], [171, 2, 1, "", "prune_key_from_key_chains"], [171, 2, 1, "", "prune_keys"], [171, 2, 1, "", "prune_keys_from_key_chains"], [171, 2, 1, "", "reduce"], [171, 2, 1, "", "remove_key_length_limit"], [171, 2, 1, "", "remove_print_limit"], [171, 2, 1, "", "reshape_like"], [171, 2, 1, "", "restructure"], [171, 2, 1, "", "restructure_key_chains"], [171, 2, 1, "", "set_at_key_chain"], [171, 2, 1, "", "set_at_key_chains"], [171, 2, 1, "", "set_at_keys"], [171, 3, 1, "", "shapes"], [171, 3, 1, "", "shared_shape"], [171, 2, 1, "", "show"], [171, 2, 1, "", "show_sub_container"], [171, 2, 1, "", "shuffle_h5_file"], [171, 2, 1, "", "size_ordered_arrays"], [171, 2, 1, "", "slice_keys"], [171, 2, 1, "", "slice_via_key"], [171, 2, 1, "", "sort_by_key"], [171, 2, 1, "", "split_conts"], [171, 2, 1, "", "structural_diff"], [171, 2, 1, "", "to_dict"], [171, 2, 1, "", "to_disk_as_hdf5"], [171, 2, 1, "", "to_disk_as_json"], [171, 2, 1, "", "to_disk_as_pickled"], [171, 2, 1, "", "to_flat_list"], [171, 2, 1, "", "to_iterator"], [171, 2, 1, "", "to_iterator_keys"], [171, 2, 1, "", "to_iterator_values"], [171, 2, 1, "", "to_jsonable"], [171, 2, 1, "", "to_nested_list"], [171, 2, 1, "", "to_raw"], [171, 2, 1, "", "trim_key"], [171, 2, 1, "", "try_kc"], [171, 2, 1, "", "unify"], [171, 2, 1, "", "unstack_conts"], [171, 2, 1, "", "update_config"], [171, 2, 1, "", "with_default_key_color"], [171, 2, 1, "", "with_entries_as_lists"], [171, 2, 1, "", "with_ivy_backend"], [171, 2, 1, "", "with_key_length_limit"], [171, 2, 1, "", "with_print_indent"], [171, 2, 1, "", "with_print_limit"], [171, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[173, 1, 1, "", "Container"]], "ivy.container.container.Container": [[173, 2, 1, "", "__add__"], [173, 2, 1, "", "__init__"], [173, 2, 1, "", "__radd__"], [173, 2, 1, "", "__rrshift__"], [173, 2, 1, "", "__rshift__"], [173, 2, 1, "", "__rsub__"], [173, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[175, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[175, 2, 1, "", "static_to_ivy"], [175, 2, 1, "", "static_to_native"], [175, 2, 1, "", "to_ivy"], [175, 2, 1, "", "to_native"]], "ivy.container.creation": [[177, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[177, 2, 1, "", "empty_like"], [177, 2, 1, "", "from_dlpack"], [177, 2, 1, "", "full_like"], [177, 2, 1, "", "meshgrid"], [177, 2, 1, "", "native_array"], [177, 2, 1, "", "one_hot"], [177, 2, 1, "", "ones_like"], [177, 2, 1, "", "static_arange"], [177, 2, 1, "", "static_asarray"], [177, 2, 1, "", "static_empty_like"], [177, 2, 1, "", "static_eye"], [177, 2, 1, "", "static_from_dlpack"], [177, 2, 1, "", "static_full_like"], [177, 2, 1, "", "static_linspace"], [177, 2, 1, "", "static_logspace"], [177, 2, 1, "", "static_meshgrid"], [177, 2, 1, "", "static_native_array"], [177, 2, 1, "", "static_one_hot"], [177, 2, 1, "", "static_ones"], [177, 2, 1, "", "static_ones_like"], [177, 2, 1, "", "static_tril"], [177, 2, 1, "", "static_triu"], [177, 2, 1, "", "static_zeros"], [177, 2, 1, "", "static_zeros_like"], [177, 2, 1, "", "tril"], [177, 2, 1, "", "triu"], [177, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[179, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[179, 2, 1, "", "astype"], [179, 2, 1, "", "broadcast_arrays"], [179, 2, 1, "", "broadcast_to"], [179, 2, 1, "", "can_cast"], [179, 2, 1, "", "dtype"], [179, 2, 1, "", "finfo"], [179, 2, 1, "", "iinfo"], [179, 2, 1, "", "is_bool_dtype"], [179, 2, 1, "", "is_float_dtype"], [179, 2, 1, "", "is_int_dtype"], [179, 2, 1, "", "is_uint_dtype"], [179, 2, 1, "", "result_type"], [179, 2, 1, "", "static_astype"], [179, 2, 1, "", "static_broadcast_arrays"], [179, 2, 1, "", "static_broadcast_to"], [179, 2, 1, "", "static_can_cast"], [179, 2, 1, "", "static_default_float_dtype"], [179, 2, 1, "", "static_dtype"], [179, 2, 1, "", "static_finfo"], [179, 2, 1, "", "static_function_supported_dtypes"], [179, 2, 1, "", "static_function_unsupported_dtypes"], [179, 2, 1, "", "static_iinfo"], [179, 2, 1, "", "static_is_bool_dtype"], [179, 2, 1, "", "static_is_float_dtype"], [179, 2, 1, "", "static_is_int_dtype"], [179, 2, 1, "", "static_is_uint_dtype"], [179, 2, 1, "", "static_result_type"]], "ivy.container.device": [[181, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[181, 2, 1, "", "dev"], [181, 2, 1, "", "static_dev"], [181, 2, 1, "", "static_to_device"], [181, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[183, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[183, 2, 1, "", "abs"], [183, 2, 1, "", "acos"], [183, 2, 1, "", "acosh"], [183, 2, 1, "", "add"], [183, 2, 1, "", "asin"], [183, 2, 1, "", "asinh"], [183, 2, 1, "", "atan"], [183, 2, 1, "", "atan2"], [183, 2, 1, "", "atanh"], [183, 2, 1, "", "bitwise_and"], [183, 2, 1, "", "bitwise_invert"], [183, 2, 1, "", "bitwise_left_shift"], [183, 2, 1, "", "bitwise_or"], [183, 2, 1, "", "bitwise_right_shift"], [183, 2, 1, "", "bitwise_xor"], [183, 2, 1, "", "ceil"], [183, 2, 1, "", "cos"], [183, 2, 1, "", "cosh"], [183, 2, 1, "", "deg2rad"], [183, 2, 1, "", "divide"], [183, 2, 1, "", "equal"], [183, 2, 1, "", "erf"], [183, 2, 1, "", "exp"], [183, 2, 1, "", "expm1"], [183, 2, 1, "", "floor"], [183, 2, 1, "", "floor_divide"], [183, 2, 1, "", "greater"], [183, 2, 1, "", "greater_equal"], [183, 2, 1, "", "isfinite"], [183, 2, 1, "", "isinf"], [183, 2, 1, "", "isnan"], [183, 2, 1, "", "isreal"], [183, 2, 1, "", "less"], [183, 2, 1, "", "less_equal"], [183, 2, 1, "", "log"], [183, 2, 1, "", "log10"], [183, 2, 1, "", "log1p"], [183, 2, 1, "", "log2"], [183, 2, 1, "", "logaddexp"], [183, 2, 1, "", "logical_and"], [183, 2, 1, "", "logical_not"], [183, 2, 1, "", "logical_or"], [183, 2, 1, "", "logical_xor"], [183, 2, 1, "", "maximum"], [183, 2, 1, "", "minimum"], [183, 2, 1, "", "multiply"], [183, 2, 1, "", "negative"], [183, 2, 1, "", "not_equal"], [183, 2, 1, "", "positive"], [183, 2, 1, "", "pow"], [183, 2, 1, "", "rad2deg"], [183, 2, 1, "", "reciprocal"], [183, 2, 1, "", "remainder"], [183, 2, 1, "", "round"], [183, 2, 1, "", "sign"], [183, 2, 1, "", "sin"], [183, 2, 1, "", "sinh"], [183, 2, 1, "", "sqrt"], [183, 2, 1, "", "square"], [183, 2, 1, "", "static_abs"], [183, 2, 1, "", "static_acos"], [183, 2, 1, "", "static_acosh"], [183, 2, 1, "", "static_add"], [183, 2, 1, "", "static_asin"], [183, 2, 1, "", "static_asinh"], [183, 2, 1, "", "static_atan"], [183, 2, 1, "", "static_atan2"], [183, 2, 1, "", "static_atanh"], [183, 2, 1, "", "static_bitwise_and"], [183, 2, 1, "", "static_bitwise_invert"], [183, 2, 1, "", "static_bitwise_left_shift"], [183, 2, 1, "", "static_bitwise_or"], [183, 2, 1, "", "static_bitwise_right_shift"], [183, 2, 1, "", "static_bitwise_xor"], [183, 2, 1, "", "static_ceil"], [183, 2, 1, "", "static_cos"], [183, 2, 1, "", "static_cosh"], [183, 2, 1, "", "static_deg2rad"], [183, 2, 1, "", "static_divide"], [183, 2, 1, "", "static_equal"], [183, 2, 1, "", "static_erf"], [183, 2, 1, "", "static_exp"], [183, 2, 1, "", "static_expm1"], [183, 2, 1, "", "static_floor"], [183, 2, 1, "", "static_floor_divide"], [183, 2, 1, "", "static_greater"], [183, 2, 1, "", "static_greater_equal"], [183, 2, 1, "", "static_isfinite"], [183, 2, 1, "", "static_isinf"], [183, 2, 1, "", "static_isnan"], [183, 2, 1, "", "static_isreal"], [183, 2, 1, "", "static_less"], [183, 2, 1, "", "static_less_equal"], [183, 2, 1, "", "static_log"], [183, 2, 1, "", "static_log10"], [183, 2, 1, "", "static_log1p"], [183, 2, 1, "", "static_log2"], [183, 2, 1, "", "static_logaddexp"], [183, 2, 1, "", "static_logical_and"], [183, 2, 1, "", "static_logical_not"], [183, 2, 1, "", "static_logical_or"], [183, 2, 1, "", "static_logical_xor"], [183, 2, 1, "", "static_maximum"], [183, 2, 1, "", "static_minimum"], [183, 2, 1, "", "static_multiply"], [183, 2, 1, "", "static_negative"], [183, 2, 1, "", "static_not_equal"], [183, 2, 1, "", "static_positive"], [183, 2, 1, "", "static_pow"], [183, 2, 1, "", "static_rad2deg"], [183, 2, 1, "", "static_reciprocal"], [183, 2, 1, "", "static_remainder"], [183, 2, 1, "", "static_round"], [183, 2, 1, "", "static_sign"], [183, 2, 1, "", "static_sin"], [183, 2, 1, "", "static_sinh"], [183, 2, 1, "", "static_sqrt"], [183, 2, 1, "", "static_square"], [183, 2, 1, "", "static_subtract"], [183, 2, 1, "", "static_tan"], [183, 2, 1, "", "static_tanh"], [183, 2, 1, "", "static_trapz"], [183, 2, 1, "", "static_trunc"], [183, 2, 1, "", "static_trunc_divide"], [183, 2, 1, "", "subtract"], [183, 2, 1, "", "tan"], [183, 2, 1, "", "tanh"], [183, 2, 1, "", "trapz"], [183, 2, 1, "", "trunc"], [183, 2, 1, "", "trunc_divide"]], "ivy.container.extensions": [[185, 0, 0, "-", "activations"], [264, 0, 0, "-", "conversions"], [266, 0, 0, "-", "creation"], [268, 0, 0, "-", "data_type"], [270, 0, 0, "-", "device"], [272, 0, 0, "-", "elementwise"], [274, 0, 0, "-", "general"], [276, 0, 0, "-", "gradients"], [278, 0, 0, "-", "image"], [280, 0, 0, "-", "layers"], [282, 0, 0, "-", "linalg"], [284, 0, 0, "-", "losses"], [286, 0, 0, "-", "manipulation"], [288, 0, 0, "-", "norms"], [290, 0, 0, "-", "random"], [292, 0, 0, "-", "searching"], [294, 0, 0, "-", "set"], [296, 0, 0, "-", "sorting"], [298, 0, 0, "-", "statistical"], [300, 0, 0, "-", "utility"]], "ivy.container.extensions.activations": [[186, 1, 1, "", "ContainerWithActivationExtensions"]], "ivy.container.extensions.conversions": [[265, 1, 1, "", "ContainerWithConversionExtensions"]], "ivy.container.extensions.creation": [[267, 1, 1, "", "ContainerWithCreationExtensions"]], "ivy.container.extensions.creation.ContainerWithCreationExtensions": [[267, 2, 1, "", "static_triu_indices"], [267, 2, 1, "", "triu_indices"]], "ivy.container.extensions.data_type": [[269, 1, 1, "", "ContainerWithData_typeExtensions"]], "ivy.container.extensions.device": [[271, 1, 1, "", "ContainerWithDeviceExtensions"]], "ivy.container.extensions.elementwise": [[273, 1, 1, "", "ContainerWithElementWiseExtensions"]], "ivy.container.extensions.elementwise.ContainerWithElementWiseExtensions": [[273, 2, 1, "", "exp2"], [273, 2, 1, "", "float_power"], [273, 2, 1, "", "fmax"], [273, 2, 1, "", "fmod"], [273, 2, 1, "", "gcd"], [273, 2, 1, "", "isneginf"], [273, 2, 1, "", "isposinf"], [273, 2, 1, "", "lcm"], [273, 2, 1, "", "logaddexp2"], [273, 2, 1, "", "nan_to_num"], [273, 2, 1, "", "nansum"], [273, 2, 1, "", "sinc"], [273, 2, 1, "", "static_exp2"], [273, 2, 1, "", "static_float_power"], [273, 2, 1, "", "static_fmax"], [273, 2, 1, "", "static_fmod"], [273, 2, 1, "", "static_gcd"], [273, 2, 1, "", "static_isneginf"], [273, 2, 1, "", "static_isposinf"], [273, 2, 1, "", "static_lcm"], [273, 2, 1, "", "static_logaddexp2"], [273, 2, 1, "", "static_nan_to_num"], [273, 2, 1, "", "static_nansum"], [273, 2, 1, "", "static_sinc"]], "ivy.container.extensions.general": [[275, 1, 1, "", "ContainerWithGeneralExtensions"]], "ivy.container.extensions.gradients": [[277, 1, 1, "", "ContainerWithGradientsExtensions"]], "ivy.container.extensions.image": [[279, 1, 1, "", "ContainerWithImageExtensions"]], "ivy.container.extensions.layers": [[281, 1, 1, "", "ContainerWithLayersExtensions"]], "ivy.container.extensions.layers.ContainerWithLayersExtensions": [[281, 2, 1, "", "avg_pool2d"], [281, 2, 1, "", "avg_pool3d"], [281, 2, 1, "", "flatten"], [281, 2, 1, "", "hamming_window"], [281, 2, 1, "", "hann_window"], [281, 2, 1, "", "kaiser_bessel_derived_window"], [281, 2, 1, "", "kaiser_window"], [281, 2, 1, "", "max_pool1d"], [281, 2, 1, "", "max_pool2d"], [281, 2, 1, "", "max_pool3d"], [281, 2, 1, "", "pad"], [281, 2, 1, "", "static_avg_pool2d"], [281, 2, 1, "", "static_avg_pool3d"], [281, 2, 1, "", "static_flatten"], [281, 2, 1, "", "static_hamming_window"], [281, 2, 1, "", "static_hann_window"], [281, 2, 1, "", "static_kaiser_bessel_derived_window"], [281, 2, 1, "", "static_kaiser_window"], [281, 2, 1, "", "static_max_pool1d"], [281, 2, 1, "", "static_max_pool2d"], [281, 2, 1, "", "static_max_pool3d"], [281, 2, 1, "", "static_pad"]], "ivy.container.extensions.linalg": [[283, 1, 1, "", "ContainerWithLinalgExtensions"]], "ivy.container.extensions.linalg.ContainerWithLinalgExtensions": [[283, 2, 1, "", "diagflat"], [283, 2, 1, "", "kron"], [283, 2, 1, "", "static_diagflat"], [283, 2, 1, "", "static_kron"]], "ivy.container.extensions.losses": [[285, 1, 1, "", "ContainerWithLossesExtensions"]], "ivy.container.extensions.manipulation": [[287, 1, 1, "", "ContainerWithManipulationExtensions"]], "ivy.container.extensions.manipulation.ContainerWithManipulationExtensions": [[287, 2, 1, "", "fliplr"], [287, 2, 1, "", "flipud"], [287, 2, 1, "", "heaviside"], [287, 2, 1, "", "hstack"], [287, 2, 1, "", "i0"], [287, 2, 1, "", "moveaxis"], [287, 2, 1, "", "rot90"], [287, 2, 1, "", "static_fliplr"], [287, 2, 1, "", "static_flipud"], [287, 2, 1, "", "static_heaviside"], [287, 2, 1, "", "static_hstack"], [287, 2, 1, "", "static_i0"], [287, 2, 1, "", "static_moveaxis"], [287, 2, 1, "", "static_rot90"], [287, 2, 1, "", "static_top_k"], [287, 2, 1, "", "static_vstack"], [287, 2, 1, "", "top_k"], [287, 2, 1, "", "vstack"]], "ivy.container.extensions.norms": [[289, 1, 1, "", "ContainerWithNormsExtensions"]], "ivy.container.extensions.random": [[291, 1, 1, "", "ContainerWithRandomExtensions"]], "ivy.container.extensions.random.ContainerWithRandomExtensions": [[291, 2, 1, "", "dirichlet"], [291, 2, 1, "", "static_dirichlet"]], "ivy.container.extensions.searching": [[293, 1, 1, "", "ContainerWithSearchingExtensions"]], "ivy.container.extensions.set": [[295, 1, 1, "", "ContainerWithSetExtensions"]], "ivy.container.extensions.sorting": [[297, 1, 1, "", "ContainerWithSortingExtensions"]], "ivy.container.extensions.sorting.ContainerWithSortingExtensions": [[297, 2, 1, "", "msort"], [297, 2, 1, "", "static_msort"]], "ivy.container.extensions.statistical": [[299, 1, 1, "", "ContainerWithStatisticalExtensions"]], "ivy.container.extensions.statistical.ContainerWithStatisticalExtensions": [[299, 2, 1, "", "median"], [299, 2, 1, "", "static_median"]], "ivy.container.extensions.utility": [[301, 1, 1, "", "ContainerWithUtilityExtensions"]], "ivy.container.general": [[303, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[303, 2, 1, "", "all_equal"], [303, 2, 1, "", "assert_supports_inplace"], [303, 2, 1, "", "clip_matrix_norm"], [303, 2, 1, "", "clip_vector_norm"], [303, 2, 1, "", "einops_rearrange"], [303, 2, 1, "", "einops_reduce"], [303, 2, 1, "", "einops_repeat"], [303, 2, 1, "", "fourier_encode"], [303, 2, 1, "", "gather"], [303, 2, 1, "", "gather_nd"], [303, 2, 1, "", "get_num_dims"], [303, 2, 1, "", "has_nans"], [303, 2, 1, "", "inplace_decrement"], [303, 2, 1, "", "inplace_increment"], [303, 2, 1, "", "inplace_update"], [303, 2, 1, "", "is_array"], [303, 2, 1, "", "is_ivy_array"], [303, 2, 1, "", "is_ivy_container"], [303, 2, 1, "", "is_native_array"], [303, 2, 1, "", "scatter_flat"], [303, 2, 1, "", "scatter_nd"], [303, 2, 1, "", "stable_divide"], [303, 2, 1, "", "stable_pow"], [303, 2, 1, "", "static_all_equal"], [303, 2, 1, "", "static_assert_supports_inplace"], [303, 2, 1, "", "static_clip_matrix_norm"], [303, 2, 1, "", "static_clip_vector_norm"], [303, 2, 1, "", "static_einops_rearrange"], [303, 2, 1, "", "static_einops_reduce"], [303, 2, 1, "", "static_einops_repeat"], [303, 2, 1, "", "static_fourier_encode"], [303, 2, 1, "", "static_gather"], [303, 2, 1, "", "static_gather_nd"], [303, 2, 1, "", "static_get_num_dims"], [303, 2, 1, "", "static_has_nans"], [303, 2, 1, "", "static_inplace_decrement"], [303, 2, 1, "", "static_inplace_increment"], [303, 2, 1, "", "static_inplace_update"], [303, 2, 1, "", "static_is_array"], [303, 2, 1, "", "static_is_ivy_array"], [303, 2, 1, "", "static_is_ivy_container"], [303, 2, 1, "", "static_is_native_array"], [303, 2, 1, "", "static_scatter_flat"], [303, 2, 1, "", "static_scatter_nd"], [303, 2, 1, "", "static_stable_divide"], [303, 2, 1, "", "static_stable_pow"], [303, 2, 1, "", "static_supports_inplace_updates"], [303, 2, 1, "", "static_to_list"], [303, 2, 1, "", "static_to_numpy"], [303, 2, 1, "", "static_to_scalar"], [303, 2, 1, "", "static_value_is_nan"], [303, 2, 1, "", "supports_inplace_updates"], [303, 2, 1, "", "to_list"], [303, 2, 1, "", "to_numpy"], [303, 2, 1, "", "to_scalar"], [303, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[305, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[305, 2, 1, "", "adam_step"], [305, 2, 1, "", "adam_update"], [305, 2, 1, "", "gradient_descent_update"], [305, 2, 1, "", "is_variable"], [305, 2, 1, "", "lamb_update"], [305, 2, 1, "", "lars_update"], [305, 2, 1, "", "optimizer_update"], [305, 2, 1, "", "static_is_variable"], [305, 2, 1, "", "static_stop_gradient"], [305, 2, 1, "", "static_variable"], [305, 2, 1, "", "static_variable_data"], [305, 2, 1, "", "stop_gradient"], [305, 2, 1, "", "variable"], [305, 2, 1, "", "variable_data"]], "ivy.container.image": [[307, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[309, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[309, 2, 1, "", "conv1d"], [309, 2, 1, "", "conv1d_transpose"], [309, 2, 1, "", "conv2d"], [309, 2, 1, "", "conv2d_transpose"], [309, 2, 1, "", "conv3d"], [309, 2, 1, "", "conv3d_transpose"], [309, 2, 1, "", "depthwise_conv2d"], [309, 2, 1, "", "dropout"], [309, 2, 1, "", "linear"], [309, 2, 1, "", "lstm_update"], [309, 2, 1, "", "multi_head_attention"], [309, 2, 1, "", "scaled_dot_product_attention"], [309, 2, 1, "", "static_conv1d"], [309, 2, 1, "", "static_conv1d_transpose"], [309, 2, 1, "", "static_conv2d"], [309, 2, 1, "", "static_conv2d_transpose"], [309, 2, 1, "", "static_conv3d"], [309, 2, 1, "", "static_conv3d_transpose"], [309, 2, 1, "", "static_depthwise_conv2d"], [309, 2, 1, "", "static_dropout"], [309, 2, 1, "", "static_linear"], [309, 2, 1, "", "static_lstm_update"], [309, 2, 1, "", "static_multi_head_attention"], [309, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linalg": [[311, 1, 1, "", "ContainerWithLinalg"]], "ivy.container.linalg.ContainerWithLinalg": [[311, 2, 1, "", "cholesky"], [311, 2, 1, "", "cross"], [311, 2, 1, "", "det"], [311, 2, 1, "", "diag"], [311, 2, 1, "", "diagonal"], [311, 2, 1, "", "eigh"], [311, 2, 1, "", "inner"], [311, 2, 1, "", "inv"], [311, 2, 1, "", "matmul"], [311, 2, 1, "", "matrix_norm"], [311, 2, 1, "", "matrix_power"], [311, 2, 1, "", "matrix_rank"], [311, 2, 1, "", "matrix_transpose"], [311, 2, 1, "", "outer"], [311, 2, 1, "", "pinv"], [311, 2, 1, "", "qr"], [311, 2, 1, "", "slogdet"], [311, 2, 1, "", "solve"], [311, 2, 1, "", "static_cholesky"], [311, 2, 1, "", "static_cross"], [311, 2, 1, "", "static_det"], [311, 2, 1, "", "static_diag"], [311, 2, 1, "", "static_diagonal"], [311, 2, 1, "", "static_inner"], [311, 2, 1, "", "static_inv"], [311, 2, 1, "", "static_matmul"], [311, 2, 1, "", "static_matrix_norm"], [311, 2, 1, "", "static_matrix_power"], [311, 2, 1, "", "static_matrix_rank"], [311, 2, 1, "", "static_matrix_transpose"], [311, 2, 1, "", "static_outer"], [311, 2, 1, "", "static_pinv"], [311, 2, 1, "", "static_qr"], [311, 2, 1, "", "static_slogdet"], [311, 2, 1, "", "static_solve"], [311, 2, 1, "", "static_svd"], [311, 2, 1, "", "static_svdvals"], [311, 2, 1, "", "static_tensordot"], [311, 2, 1, "", "static_trace"], [311, 2, 1, "", "static_vander"], [311, 2, 1, "", "static_vecdot"], [311, 2, 1, "", "static_vector_norm"], [311, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [311, 2, 1, "", "svd"], [311, 2, 1, "", "svdvals"], [311, 2, 1, "", "tensordot"], [311, 2, 1, "", "trace"], [311, 2, 1, "", "vander"], [311, 2, 1, "", "vecdot"], [311, 2, 1, "", "vector_norm"], [311, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[313, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[313, 2, 1, "", "binary_cross_entropy"], [313, 2, 1, "", "cross_entropy"], [313, 2, 1, "", "sparse_cross_entropy"], [313, 2, 1, "", "static_binary_cross_entropy"], [313, 2, 1, "", "static_cross_entropy"], [313, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[315, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[315, 2, 1, "", "clip"], [315, 2, 1, "", "concat"], [315, 2, 1, "", "constant_pad"], [315, 2, 1, "", "expand_dims"], [315, 2, 1, "", "flip"], [315, 2, 1, "", "permute_dims"], [315, 2, 1, "", "repeat"], [315, 2, 1, "", "reshape"], [315, 2, 1, "", "roll"], [315, 2, 1, "", "split"], [315, 2, 1, "", "squeeze"], [315, 2, 1, "", "stack"], [315, 2, 1, "", "static_clip"], [315, 2, 1, "", "static_concat"], [315, 2, 1, "", "static_constant_pad"], [315, 2, 1, "", "static_expand_dims"], [315, 2, 1, "", "static_flip"], [315, 2, 1, "", "static_permute_dims"], [315, 2, 1, "", "static_repeat"], [315, 2, 1, "", "static_reshape"], [315, 2, 1, "", "static_roll"], [315, 2, 1, "", "static_split"], [315, 2, 1, "", "static_squeeze"], [315, 2, 1, "", "static_stack"], [315, 2, 1, "", "static_swapaxes"], [315, 2, 1, "", "static_tile"], [315, 2, 1, "", "static_unstack"], [315, 2, 1, "", "static_zero_pad"], [315, 2, 1, "", "swapaxes"], [315, 2, 1, "", "tile"], [315, 2, 1, "", "unstack"], [315, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[317, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[317, 2, 1, "", "layer_norm"]], "ivy.container.random": [[319, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[319, 2, 1, "", "beta"], [319, 2, 1, "", "multinomial"], [319, 2, 1, "", "randint"], [319, 2, 1, "", "random_normal"], [319, 2, 1, "", "random_uniform"], [319, 2, 1, "", "shuffle"], [319, 2, 1, "", "static_beta"], [319, 2, 1, "", "static_multinomial"], [319, 2, 1, "", "static_randint"], [319, 2, 1, "", "static_random_normal"], [319, 2, 1, "", "static_random_uniform"], [319, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[321, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[321, 2, 1, "", "argmax"], [321, 2, 1, "", "argmin"], [321, 2, 1, "", "argwhere"], [321, 2, 1, "", "nonzero"], [321, 2, 1, "", "static_argmax"], [321, 2, 1, "", "static_argmin"], [321, 2, 1, "", "static_argwhere"], [321, 2, 1, "", "static_nonzero"], [321, 2, 1, "", "static_where"], [321, 2, 1, "", "where"]], "ivy.container.set": [[323, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[323, 2, 1, "", "static_unique_all"], [323, 2, 1, "", "static_unique_counts"], [323, 2, 1, "", "static_unique_inverse"], [323, 2, 1, "", "static_unique_values"], [323, 2, 1, "", "unique_all"], [323, 2, 1, "", "unique_counts"], [323, 2, 1, "", "unique_inverse"], [323, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[325, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[325, 2, 1, "", "argsort"], [325, 2, 1, "", "searchsorted"], [325, 2, 1, "", "sort"], [325, 2, 1, "", "static_argsort"], [325, 2, 1, "", "static_searchsorted"], [325, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[327, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[327, 2, 1, "", "cumprod"], [327, 2, 1, "", "cumsum"], [327, 2, 1, "", "einsum"], [327, 2, 1, "", "max"], [327, 2, 1, "", "mean"], [327, 2, 1, "", "min"], [327, 2, 1, "", "prod"], [327, 2, 1, "", "static_cumprod"], [327, 2, 1, "", "static_cumsum"], [327, 2, 1, "", "static_sum"], [327, 2, 1, "", "static_var"], [327, 2, 1, "", "std"], [327, 2, 1, "", "sum"], [327, 2, 1, "", "var"]], "ivy.container.utility": [[329, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[329, 2, 1, "", "all"], [329, 2, 1, "", "any"], [329, 2, 1, "", "static_all"], [329, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[331, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[373, 4, 1, "", "from_zero_dim_arrays_to_float"], [374, 4, 1, "", "handle_nestable"], [375, 4, 1, "", "handle_out_argument"], [376, 4, 1, "", "infer_device"], [377, 4, 1, "", "infer_dtype"], [378, 4, 1, "", "inputs_to_ivy_arrays"], [379, 4, 1, "", "inputs_to_native_arrays"], [380, 4, 1, "", "integer_arrays_to_float"], [381, 4, 1, "", "outputs_to_ivy_arrays"], [382, 4, 1, "", "to_native_arrays_and_back"], [372, 4, 1, "", "with_supported_device_and_dtypes"], [372, 4, 1, "", "with_supported_devices"], [372, 4, 1, "", "with_supported_dtypes"], [372, 4, 1, "", "with_unsupported_device_and_dtypes"], [372, 4, 1, "", "with_unsupported_devices"], [372, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional": [[383, 0, 0, "-", "extensions"]], "ivy.functional.extensions": [[384, 0, 0, "-", "activations"], [385, 0, 0, "-", "compilation"], [386, 0, 0, "-", "constants"], [387, 0, 0, "-", "creation"], [389, 0, 0, "-", "data_type"], [390, 0, 0, "-", "device"], [391, 0, 0, "-", "elementwise"], [405, 0, 0, "-", "general"], [406, 0, 0, "-", "gradients"], [407, 0, 0, "-", "layers"], [419, 0, 0, "-", "linalg"], [422, 0, 0, "-", "losses"], [423, 0, 0, "-", "manipulation"], [436, 0, 0, "-", "meta"], [437, 0, 0, "-", "nest"], [438, 0, 0, "-", "norms"], [439, 0, 0, "-", "random"], [443, 0, 0, "-", "searching"], [444, 0, 0, "-", "set"], [445, 0, 0, "-", "sorting"], [447, 0, 0, "-", "sparse_array"], [452, 0, 0, "-", "statistical"], [454, 0, 0, "-", "utility"]], "ivy.functional.extensions.creation": [[388, 4, 1, "", "triu_indices"]], "ivy.functional.extensions.elementwise": [[392, 4, 1, "", "exp2"], [393, 4, 1, "", "float_power"], [394, 4, 1, "", "fmax"], [395, 4, 1, "", "fmod"], [396, 4, 1, "", "gcd"], [397, 4, 1, "", "isneginf"], [398, 4, 1, "", "isposinf"], [399, 4, 1, "", "lcm"], [400, 4, 1, "", "logaddexp2"], [401, 4, 1, "", "nan_to_num"], [402, 4, 1, "", "nansum"], [403, 4, 1, "", "sinc"], [404, 4, 1, "", "trapz"]], "ivy.functional.extensions.layers": [[408, 4, 1, "", "avg_pool2d"], [409, 4, 1, "", "avg_pool3d"], [410, 4, 1, "", "hamming_window"], [411, 4, 1, "", "hann_window"], [412, 4, 1, "", "kaiser_bessel_derived_window"], [413, 4, 1, "", "kaiser_window"], [414, 4, 1, "", "max_pool1d"], [415, 4, 1, "", "max_pool2d"], [416, 4, 1, "", "max_pool3d"], [417, 4, 1, "", "pad"], [418, 4, 1, "", "vorbis_window"]], "ivy.functional.extensions.linalg": [[420, 4, 1, "", "diagflat"], [421, 4, 1, "", "kron"]], "ivy.functional.extensions.manipulation": [[424, 4, 1, "", "flatten"], [425, 4, 1, "", "fliplr"], [426, 4, 1, "", "flipud"], [427, 4, 1, "", "heaviside"], [428, 4, 1, "", "hstack"], [429, 4, 1, "", "i0"], [430, 4, 1, "", "moveaxis"], [431, 4, 1, "", "ndenumerate"], [432, 4, 1, "", "ndindex"], [433, 4, 1, "", "rot90"], [434, 4, 1, "", "top_k"], [435, 4, 1, "", "vstack"]], "ivy.functional.extensions.random": [[440, 4, 1, "", "beta"], [441, 4, 1, "", "dirichlet"], [442, 4, 1, "", "gamma"]], "ivy.functional.extensions.sorting": [[446, 4, 1, "", "msort"]], "ivy.functional.extensions.sparse_array": [[447, 1, 1, "", "NativeSparseArray"], [447, 1, 1, "", "SparseArray"], [448, 4, 1, "", "is_ivy_sparse_array"], [449, 4, 1, "", "is_native_sparse_array"], [450, 4, 1, "", "native_sparse_array"], [451, 4, 1, "", "native_sparse_array_to_indices_values_and_shape"]], "ivy.functional.extensions.sparse_array.SparseArray": [[447, 2, 1, "", "__init__"], [447, 3, 1, "", "coo_indices"], [447, 3, 1, "", "csr_col_indices"], [447, 3, 1, "", "csr_crow_indices"], [447, 3, 1, "", "data"], [447, 3, 1, "", "dense_shape"], [447, 2, 1, "", "to_dense_array"], [447, 3, 1, "", "values"]], "ivy.functional.extensions.statistical": [[453, 4, 1, "", "median"]], "ivy.functional.ivy": [[456, 0, 0, "-", "activations"], [494, 0, 0, "-", "compilation"], [496, 0, 0, "-", "constants"], [497, 0, 0, "-", "creation"], [579, 0, 0, "-", "data_type"], [670, 0, 0, "-", "device"], [704, 0, 0, "-", "elementwise"], [1026, 0, 0, "-", "general"], [1220, 0, 0, "-", "gradients"], [1272, 0, 0, "-", "layers"], [1338, 0, 0, "-", "linalg"], [1471, 0, 0, "-", "losses"], [1487, 0, 0, "-", "manipulation"], [1568, 0, 0, "-", "meta"], [1572, 0, 0, "-", "nest"], [1590, 0, 0, "-", "norms"], [1595, 0, 0, "-", "random"], [1622, 0, 0, "-", "searching"], [1648, 0, 0, "-", "set"], [1669, 0, 0, "-", "sorting"], [1685, 0, 0, "-", "statistical"], [1730, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[457, 4, 1, "", "deserialize"], [461, 4, 1, "", "gelu"], [463, 4, 1, "", "get"], [467, 4, 1, "", "leaky_relu"], [472, 4, 1, "", "log_softmax"], [477, 4, 1, "", "relu"], [482, 4, 1, "", "sigmoid"], [487, 4, 1, "", "softmax"], [492, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[495, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[496, 5, 1, "", "e"], [496, 5, 1, "", "inf"], [496, 5, 1, "", "nan"], [496, 5, 1, "", "newaxis"], [496, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[498, 1, 1, "", "NestedSequence"], [500, 4, 1, "", "arange"], [497, 4, 1, "", "array"], [504, 4, 1, "", "asarray"], [506, 4, 1, "", "asarray_handle_nestable"], [507, 4, 1, "", "asarray_infer_device"], [508, 4, 1, "", "asarray_to_native_arrays_and_back"], [511, 4, 1, "", "copy_array"], [512, 4, 1, "", "empty"], [516, 4, 1, "", "empty_like"], [519, 4, 1, "", "eye"], [524, 4, 1, "", "from_dlpack"], [526, 4, 1, "", "full"], [530, 4, 1, "", "full_like"], [533, 4, 1, "", "linspace"], [536, 4, 1, "", "logspace"], [541, 4, 1, "", "meshgrid"], [546, 4, 1, "", "native_array"], [551, 4, 1, "", "one_hot"], [554, 4, 1, "", "ones"], [559, 4, 1, "", "ones_like"], [565, 4, 1, "", "tril"], [570, 4, 1, "", "triu"], [573, 4, 1, "", "zeros"], [578, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[498, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[579, 1, 1, "", "DefaultDtype"], [579, 1, 1, "", "DefaultFloatDtype"], [579, 1, 1, "", "DefaultIntDtype"], [579, 1, 1, "", "DefaultUintDtype"], [580, 4, 1, "", "as_ivy_dtype"], [581, 4, 1, "", "as_native_dtype"], [585, 4, 1, "", "astype"], [590, 4, 1, "", "broadcast_arrays"], [595, 4, 1, "", "broadcast_to"], [600, 4, 1, "", "can_cast"], [602, 4, 1, "", "check_float"], [603, 4, 1, "", "closest_valid_dtype"], [604, 4, 1, "", "default_dtype"], [606, 4, 1, "", "default_float_dtype"], [608, 4, 1, "", "default_int_dtype"], [609, 4, 1, "", "default_uint_dtype"], [612, 4, 1, "", "dtype"], [614, 4, 1, "", "dtype_bits"], [618, 4, 1, "", "finfo"], [621, 4, 1, "", "function_supported_dtypes"], [624, 4, 1, "", "function_unsupported_dtypes"], [629, 4, 1, "", "iinfo"], [631, 4, 1, "", "infer_default_dtype"], [632, 4, 1, "", "invalid_dtype"], [636, 4, 1, "", "is_bool_dtype"], [641, 4, 1, "", "is_float_dtype"], [646, 4, 1, "", "is_int_dtype"], [651, 4, 1, "", "is_uint_dtype"], [653, 4, 1, "", "promote_types"], [654, 4, 1, "", "promote_types_of_inputs"], [658, 4, 1, "", "result_type"], [660, 4, 1, "", "set_default_dtype"], [661, 4, 1, "", "set_default_float_dtype"], [662, 4, 1, "", "set_default_int_dtype"], [663, 4, 1, "", "set_default_uint_dtype"], [664, 4, 1, "", "type_promote_arrays"], [665, 4, 1, "", "unset_default_dtype"], [666, 4, 1, "", "unset_default_float_dtype"], [667, 4, 1, "", "unset_default_int_dtype"], [668, 4, 1, "", "unset_default_uint_dtype"], [669, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[579, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[579, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[579, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[579, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[670, 1, 1, "", "DefaultDevice"], [671, 1, 1, "", "Profiler"], [672, 4, 1, "", "as_ivy_dev"], [673, 4, 1, "", "as_native_dev"], [674, 4, 1, "", "clear_mem_on_dev"], [675, 4, 1, "", "default_device"], [679, 4, 1, "", "dev"], [681, 4, 1, "", "dev_util"], [682, 4, 1, "", "function_supported_devices"], [683, 4, 1, "", "function_unsupported_devices"], [684, 4, 1, "", "get_all_ivy_arrays_on_dev"], [685, 4, 1, "", "gpu_is_available"], [686, 4, 1, "", "num_cpu_cores"], [687, 4, 1, "", "num_gpus"], [688, 4, 1, "", "num_ivy_arrays_on_dev"], [689, 4, 1, "", "percent_used_mem_on_dev"], [690, 4, 1, "", "print_all_ivy_arrays_on_dev"], [691, 4, 1, "", "set_default_device"], [692, 4, 1, "", "set_split_factor"], [693, 4, 1, "", "split_factor"], [694, 4, 1, "", "split_func_call"], [699, 4, 1, "", "to_device"], [700, 4, 1, "", "total_mem_on_dev"], [701, 4, 1, "", "tpu_is_available"], [702, 4, 1, "", "unset_default_device"], [703, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[670, 2, 1, "", "__enter__"], [670, 2, 1, "", "__exit__"], [670, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[671, 2, 1, "", "__init__"], [671, 2, 1, "", "start"], [671, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[708, 4, 1, "", "abs"], [713, 4, 1, "", "acos"], [718, 4, 1, "", "acosh"], [723, 4, 1, "", "add"], [728, 4, 1, "", "asin"], [733, 4, 1, "", "asinh"], [738, 4, 1, "", "atan"], [743, 4, 1, "", "atan2"], [748, 4, 1, "", "atanh"], [753, 4, 1, "", "bitwise_and"], [758, 4, 1, "", "bitwise_invert"], [763, 4, 1, "", "bitwise_left_shift"], [768, 4, 1, "", "bitwise_or"], [773, 4, 1, "", "bitwise_right_shift"], [778, 4, 1, "", "bitwise_xor"], [783, 4, 1, "", "ceil"], [788, 4, 1, "", "cos"], [793, 4, 1, "", "cosh"], [798, 4, 1, "", "deg2rad"], [803, 4, 1, "", "divide"], [808, 4, 1, "", "equal"], [813, 4, 1, "", "erf"], [818, 4, 1, "", "exp"], [823, 4, 1, "", "expm1"], [828, 4, 1, "", "floor"], [833, 4, 1, "", "floor_divide"], [838, 4, 1, "", "greater"], [843, 4, 1, "", "greater_equal"], [848, 4, 1, "", "isfinite"], [853, 4, 1, "", "isinf"], [858, 4, 1, "", "isnan"], [863, 4, 1, "", "isreal"], [868, 4, 1, "", "less"], [873, 4, 1, "", "less_equal"], [878, 4, 1, "", "log"], [883, 4, 1, "", "log10"], [888, 4, 1, "", "log1p"], [893, 4, 1, "", "log2"], [898, 4, 1, "", "logaddexp"], [903, 4, 1, "", "logical_and"], [908, 4, 1, "", "logical_not"], [913, 4, 1, "", "logical_or"], [918, 4, 1, "", "logical_xor"], [923, 4, 1, "", "maximum"], [928, 4, 1, "", "minimum"], [933, 4, 1, "", "multiply"], [938, 4, 1, "", "negative"], [943, 4, 1, "", "not_equal"], [948, 4, 1, "", "positive"], [953, 4, 1, "", "pow"], [958, 4, 1, "", "rad2deg"], [963, 4, 1, "", "reciprocal"], [968, 4, 1, "", "remainder"], [973, 4, 1, "", "round"], [978, 4, 1, "", "sign"], [983, 4, 1, "", "sin"], [988, 4, 1, "", "sinh"], [993, 4, 1, "", "sqrt"], [998, 4, 1, "", "square"], [1004, 4, 1, "", "subtract"], [1009, 4, 1, "", "tan"], [1014, 4, 1, "", "tanh"], [1019, 4, 1, "", "trunc"], [1024, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.general": [[1030, 4, 1, "", "all_equal"], [1032, 4, 1, "", "arg_info"], [1033, 4, 1, "", "arg_names"], [1036, 4, 1, "", "array_equal"], [1040, 4, 1, "", "assert_supports_inplace"], [1042, 4, 1, "", "cache_fn"], [1046, 4, 1, "", "clip_matrix_norm"], [1051, 4, 1, "", "clip_vector_norm"], [1053, 4, 1, "", "container_types"], [1054, 4, 1, "", "current_backend_str"], [1057, 4, 1, "", "default"], [1061, 4, 1, "", "einops_rearrange"], [1066, 4, 1, "", "einops_reduce"], [1071, 4, 1, "", "einops_repeat"], [1075, 4, 1, "", "exists"], [1079, 4, 1, "", "fourier_encode"], [1081, 4, 1, "", "function_supported_devices_and_dtypes"], [1082, 4, 1, "", "function_unsupported_devices_and_dtypes"], [1086, 4, 1, "", "gather"], [1091, 4, 1, "", "gather_nd"], [1093, 4, 1, "", "get_all_arrays_in_memory"], [1094, 4, 1, "", "get_array_mode"], [1095, 4, 1, "", "get_exception_trace_mode"], [1096, 4, 1, "", "get_item"], [1097, 4, 1, "", "get_min_base"], [1098, 4, 1, "", "get_min_denominator"], [1099, 4, 1, "", "get_nestable_mode"], [1103, 4, 1, "", "get_num_dims"], [1105, 4, 1, "", "get_queue_timeout"], [1106, 4, 1, "", "get_referrers_recursive"], [1107, 4, 1, "", "get_tmp_dir"], [1111, 4, 1, "", "has_nans"], [1113, 4, 1, "", "inplace_arrays_supported"], [1117, 4, 1, "", "inplace_decrement"], [1122, 4, 1, "", "inplace_increment"], [1127, 4, 1, "", "inplace_update"], [1129, 4, 1, "", "inplace_variables_supported"], [1133, 4, 1, "", "is_array"], [1135, 4, 1, "", "is_frontend_array"], [1139, 4, 1, "", "is_ivy_array"], [1144, 4, 1, "", "is_ivy_container"], [1149, 4, 1, "", "is_native_array"], [1151, 4, 1, "", "isscalar"], [1152, 4, 1, "", "match_kwargs"], [1153, 4, 1, "", "multiprocessing"], [1154, 4, 1, "", "num_arrays_in_memory"], [1155, 4, 1, "", "print_all_arrays_in_memory"], [1159, 4, 1, "", "scatter_flat"], [1164, 4, 1, "", "scatter_nd"], [1166, 4, 1, "", "set_array_mode"], [1167, 4, 1, "", "set_exception_trace_mode"], [1168, 4, 1, "", "set_min_base"], [1169, 4, 1, "", "set_min_denominator"], [1170, 4, 1, "", "set_nestable_mode"], [1171, 4, 1, "", "set_queue_timeout"], [1172, 4, 1, "", "set_shape_array_mode"], [1173, 4, 1, "", "set_tmp_dir"], [1174, 4, 1, "", "shape"], [1175, 4, 1, "", "shape_array_mode"], [1179, 4, 1, "", "stable_divide"], [1184, 4, 1, "", "stable_pow"], [1190, 4, 1, "", "supports_inplace_updates"], [1191, 4, 1, "", "to_ivy_shape"], [1196, 4, 1, "", "to_list"], [1197, 4, 1, "", "to_native_shape"], [1202, 4, 1, "", "to_numpy"], [1207, 4, 1, "", "to_scalar"], [1208, 4, 1, "", "try_else_none"], [1209, 4, 1, "", "unset_array_mode"], [1210, 4, 1, "", "unset_exception_trace_mode"], [1211, 4, 1, "", "unset_nestable_mode"], [1212, 4, 1, "", "unset_queue_timeout"], [1213, 4, 1, "", "unset_shape_array_mode"], [1218, 4, 1, "", "value_is_nan"], [1219, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1220, 1, 1, "", "GradientTracking"], [1224, 4, 1, "", "adam_step"], [1228, 4, 1, "", "adam_update"], [1229, 4, 1, "", "execute_with_gradients"], [1230, 4, 1, "", "grad"], [1234, 4, 1, "", "gradient_descent_update"], [1238, 4, 1, "", "is_variable"], [1240, 4, 1, "", "jac"], [1244, 4, 1, "", "lamb_update"], [1248, 4, 1, "", "lars_update"], [1252, 4, 1, "", "optimizer_update"], [1253, 4, 1, "", "set_with_grads"], [1258, 4, 1, "", "stop_gradient"], [1259, 4, 1, "", "unset_with_grads"], [1260, 4, 1, "", "value_and_grad"], [1265, 4, 1, "", "variable"], [1270, 4, 1, "", "variable_data"], [1271, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1220, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1273, 4, 1, "", "conv"], [1277, 4, 1, "", "conv1d"], [1282, 4, 1, "", "conv1d_transpose"], [1287, 4, 1, "", "conv2d"], [1291, 4, 1, "", "conv2d_transpose"], [1296, 4, 1, "", "conv3d"], [1301, 4, 1, "", "conv3d_transpose"], [1303, 4, 1, "", "conv_general_dilated"], [1304, 4, 1, "", "conv_general_transpose"], [1305, 4, 1, "", "deconv_length"], [1309, 4, 1, "", "depthwise_conv2d"], [1314, 4, 1, "", "dropout"], [1316, 4, 1, "", "get_x_data_format"], [1317, 4, 1, "", "handle_padding"], [1321, 4, 1, "", "linear"], [1326, 4, 1, "", "lstm_update"], [1331, 4, 1, "", "multi_head_attention"], [1336, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linalg": [[1342, 4, 1, "", "cholesky"], [1347, 4, 1, "", "cross"], [1352, 4, 1, "", "det"], [1357, 4, 1, "", "diag"], [1362, 4, 1, "", "diagonal"], [1367, 4, 1, "", "eigh"], [1370, 4, 1, "", "eigvalsh"], [1374, 4, 1, "", "inner"], [1379, 4, 1, "", "inv"], [1384, 4, 1, "", "matmul"], [1389, 4, 1, "", "matrix_norm"], [1393, 4, 1, "", "matrix_power"], [1398, 4, 1, "", "matrix_rank"], [1403, 4, 1, "", "matrix_transpose"], [1408, 4, 1, "", "outer"], [1413, 4, 1, "", "pinv"], [1418, 4, 1, "", "qr"], [1423, 4, 1, "", "slogdet"], [1428, 4, 1, "", "solve"], [1434, 4, 1, "", "svd"], [1439, 4, 1, "", "svdvals"], [1444, 4, 1, "", "tensordot"], [1449, 4, 1, "", "trace"], [1454, 4, 1, "", "vander"], [1459, 4, 1, "", "vecdot"], [1464, 4, 1, "", "vector_norm"], [1469, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1475, 4, 1, "", "binary_cross_entropy"], [1480, 4, 1, "", "cross_entropy"], [1485, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1491, 4, 1, "", "clip"], [1496, 4, 1, "", "concat"], [1501, 4, 1, "", "constant_pad"], [1506, 4, 1, "", "expand_dims"], [1511, 4, 1, "", "flip"], [1516, 4, 1, "", "permute_dims"], [1521, 4, 1, "", "repeat"], [1526, 4, 1, "", "reshape"], [1531, 4, 1, "", "roll"], [1536, 4, 1, "", "split"], [1541, 4, 1, "", "squeeze"], [1546, 4, 1, "", "stack"], [1552, 4, 1, "", "swapaxes"], [1557, 4, 1, "", "tile"], [1562, 4, 1, "", "unstack"], [1567, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1569, 4, 1, "", "fomaml_step"], [1570, 4, 1, "", "maml_step"], [1571, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1573, 4, 1, "", "all_nested_indices"], [1574, 4, 1, "", "copy_nest"], [1575, 4, 1, "", "index_nest"], [1576, 4, 1, "", "insert_into_nest_at_index"], [1577, 4, 1, "", "insert_into_nest_at_indices"], [1578, 4, 1, "", "map"], [1579, 4, 1, "", "map_nest_at_index"], [1580, 4, 1, "", "map_nest_at_indices"], [1581, 4, 1, "", "multi_index_nest"], [1582, 4, 1, "", "nested_any"], [1583, 4, 1, "", "nested_argwhere"], [1584, 4, 1, "", "nested_map"], [1585, 4, 1, "", "nested_multi_map"], [1586, 4, 1, "", "prune_nest_at_index"], [1587, 4, 1, "", "prune_nest_at_indices"], [1588, 4, 1, "", "set_nest_at_index"], [1589, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1594, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1599, 4, 1, "", "multinomial"], [1604, 4, 1, "", "randint"], [1609, 4, 1, "", "random_normal"], [1614, 4, 1, "", "random_uniform"], [1616, 4, 1, "", "seed"], [1620, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1626, 4, 1, "", "argmax"], [1631, 4, 1, "", "argmin"], [1636, 4, 1, "", "argwhere"], [1641, 4, 1, "", "nonzero"], [1647, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1653, 4, 1, "", "unique_all"], [1658, 4, 1, "", "unique_counts"], [1663, 4, 1, "", "unique_inverse"], [1668, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1673, 4, 1, "", "argsort"], [1678, 4, 1, "", "searchsorted"], [1683, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1689, 4, 1, "", "cumprod"], [1694, 4, 1, "", "cumsum"], [1699, 4, 1, "", "einsum"], [1703, 4, 1, "", "max"], [1707, 4, 1, "", "mean"], [1711, 4, 1, "", "min"], [1715, 4, 1, "", "prod"], [1719, 4, 1, "", "std"], [1724, 4, 1, "", "sum"], [1729, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1734, 4, 1, "", "all"], [1739, 4, 1, "", "any"]], "ivy.verbosity": [[1803, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 342], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_inplace_sizes_valid": 13, "check_isinst": 14, "check_less": 15, "check_one_way_broadcast": 16, "check_shap": 17, "check_tru": 18, "backend": [19, 335, 338, 351, 354, 371], "handler": [19, 354], "choose_random_backend": 20, "clear_backend_stack": 21, "current_backend": 22, "fn_name_from_version_specific_fn_nam": 23, "get_backend": 24, "set_backend": 25, "set_backend_to_specific_vers": 26, "set_jax_backend": 27, "set_numpy_backend": 28, "set_tensorflow_backend": 29, "set_torch_backend": 30, "unset_backend": 31, "background": [32, 1742], "ml": [33, 1754, 1758], "explos": 33, "standard": [34, 352, 1749, 1758], "skeptic": 34, "complimentari": 34, "v": [34, 371], "competit": 34, "do": [34, 350], "work": [34, 38, 1748], "The": [34, 42, 348, 356, 371], "arrai": [34, 44, 47, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 333, 334, 337, 344, 356, 447, 459, 465, 470, 475, 480, 485, 490, 503, 510, 514, 522, 528, 539, 544, 549, 557, 563, 568, 576, 583, 588, 593, 598, 616, 627, 634, 639, 644, 649, 656, 677, 697, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 756, 761, 766, 771, 776, 781, 786, 791, 796, 801, 806, 811, 816, 821, 826, 831, 836, 841, 846, 851, 856, 861, 866, 871, 876, 881, 886, 891, 896, 901, 906, 911, 916, 921, 926, 931, 936, 941, 946, 951, 956, 961, 966, 971, 976, 981, 986, 991, 996, 1002, 1007, 1012, 1017, 1022, 1028, 1035, 1038, 1044, 1049, 1056, 1059, 1064, 1069, 1074, 1077, 1084, 1089, 1101, 1109, 1115, 1120, 1125, 1131, 1137, 1142, 1147, 1157, 1162, 1177, 1182, 1188, 1194, 1200, 1205, 1216, 1222, 1226, 1232, 1236, 1242, 1246, 1250, 1256, 1263, 1268, 1275, 1280, 1285, 1294, 1299, 1307, 1312, 1319, 1324, 1329, 1334, 1340, 1345, 1350, 1355, 1360, 1365, 1369, 1372, 1377, 1382, 1387, 1396, 1401, 1406, 1411, 1416, 1421, 1426, 1432, 1437, 1442, 1447, 1452, 1457, 1462, 1467, 1473, 1478, 1483, 1489, 1494, 1499, 1504, 1509, 1514, 1519, 1524, 1529, 1534, 1539, 1544, 1550, 1555, 1560, 1565, 1592, 1597, 1602, 1607, 1612, 1618, 1624, 1629, 1634, 1639, 1645, 1651, 1656, 1661, 1666, 1671, 1676, 1681, 1687, 1692, 1697, 1701, 1705, 1709, 1713, 1717, 1722, 1727, 1732, 1737, 1749], "api": [34, 40, 333, 336, 337, 351, 354, 356, 358, 359, 1749, 1756, 1758], "why": [35, 350], "unifi": [35, 356, 1754, 1758], "No": [35, 41], "more": [35, 41, 352], "re": [35, 350], "implement": 35, "infinit": 35, "shelf": 35, "life": 35, "contribut": [36, 1742], "appli": [37, 370], "librari": [37, 370], "introduct": [37, 348, 349], "exampl": [37, 340, 344, 349, 352], "ivi": [37, 40, 41, 42, 334, 337, 340, 342, 348, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 459, 460, 461, 462, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 478, 480, 481, 482, 483, 485, 486, 487, 488, 490, 491, 492, 493, 500, 501, 503, 504, 505, 510, 511, 514, 515, 516, 517, 519, 520, 522, 523, 524, 525, 528, 529, 530, 531, 533, 534, 536, 537, 539, 540, 541, 542, 544, 545, 546, 547, 549, 550, 551, 552, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 575, 576, 577, 578, 583, 584, 585, 586, 588, 589, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 606, 607, 611, 612, 613, 616, 617, 618, 619, 621, 622, 624, 625, 627, 628, 629, 630, 634, 635, 636, 637, 639, 640, 641, 642, 644, 645, 646, 647, 649, 650, 651, 652, 656, 657, 658, 659, 677, 678, 679, 680, 696, 697, 698, 699, 706, 707, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 777, 778, 779, 781, 782, 783, 784, 786, 787, 788, 789, 791, 792, 793, 794, 796, 797, 798, 799, 801, 802, 803, 804, 806, 807, 808, 809, 811, 812, 813, 814, 816, 817, 818, 819, 821, 822, 823, 824, 826, 827, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 841, 842, 843, 844, 846, 847, 848, 849, 851, 852, 853, 854, 856, 857, 858, 859, 861, 862, 863, 864, 866, 867, 868, 869, 871, 872, 873, 874, 876, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 924, 926, 927, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 949, 951, 952, 953, 954, 956, 957, 958, 959, 961, 962, 963, 964, 966, 967, 968, 969, 971, 972, 973, 974, 976, 977, 978, 979, 981, 982, 983, 984, 986, 987, 988, 989, 991, 992, 993, 994, 996, 997, 998, 999, 1001, 1002, 1003, 1004, 1006, 1007, 1008, 1009, 1011, 1012, 1013, 1014, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1028, 1029, 1030, 1031, 1035, 1036, 1038, 1039, 1040, 1041, 1044, 1045, 1046, 1047, 1049, 1050, 1051, 1052, 1056, 1057, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1074, 1075, 1077, 1078, 1079, 1080, 1084, 1085, 1086, 1087, 1089, 1090, 1091, 1092, 1101, 1102, 1103, 1104, 1109, 1110, 1111, 1112, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1150, 1157, 1158, 1159, 1160, 1162, 1163, 1164, 1165, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1193, 1194, 1195, 1196, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1215, 1216, 1217, 1218, 1222, 1223, 1224, 1226, 1227, 1228, 1232, 1233, 1234, 1236, 1237, 1238, 1239, 1242, 1243, 1244, 1246, 1247, 1248, 1250, 1251, 1252, 1255, 1256, 1257, 1258, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1270, 1275, 1276, 1277, 1278, 1280, 1281, 1282, 1283, 1285, 1286, 1287, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1319, 1320, 1321, 1322, 1324, 1325, 1326, 1327, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1369, 1370, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1392, 1393, 1394, 1396, 1397, 1398, 1399, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1411, 1412, 1413, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1441, 1442, 1443, 1444, 1446, 1447, 1448, 1449, 1451, 1452, 1453, 1454, 1456, 1457, 1458, 1459, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1473, 1474, 1475, 1476, 1478, 1479, 1480, 1481, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1519, 1520, 1521, 1522, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1534, 1535, 1536, 1537, 1539, 1540, 1541, 1542, 1544, 1545, 1546, 1547, 1549, 1550, 1551, 1552, 1554, 1555, 1556, 1557, 1559, 1560, 1561, 1562, 1564, 1565, 1566, 1567, 1592, 1593, 1594, 1597, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1618, 1619, 1620, 1621, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1634, 1635, 1636, 1637, 1639, 1640, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1655, 1656, 1657, 1658, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1668, 1671, 1672, 1673, 1674, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1690, 1692, 1693, 1694, 1695, 1697, 1698, 1699, 1701, 1702, 1703, 1705, 1706, 1707, 1709, 1710, 1711, 1713, 1714, 1715, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1740, 1758], "robot": [37, 367, 370], "build": [38, 354], "doc": 38, "docker": [38, 41, 42], "dockerless": 38, "us": [38, 41, 333, 357], "miniconda": [38, 41], "venv": [38, 41], "document": 38, "pipelin": [38, 337, 350, 371], "make_doc": 38, "sh": 38, "entrypoint": 38, "_make_doc": 38, "generate_src_rst_fil": 38, "py": 38, "sphinx": 38, "correct_built_html_fil": 38, "remove_fil": 38, "help": [39, 42], "resourc": 39, "open": 40, "task": 40, "function": [40, 336, 338, 339, 342, 344, 345, 346, 348, 349, 350, 351, 354, 359, 371], "format": [40, 343, 1751, 1758], "checklist": 40, "frontend": [40, 335, 337, 348, 349, 359], "where": [40, 1643, 1645, 1646, 1647], "place": 40, "extens": [40, 42, 62, 184, 369, 383, 1742], "set": [41, 129, 157, 294, 322, 335, 444, 1648], "up": 41, "clone": 41, "pycharm": [41, 42], "virtual": 41, "environ": 41, "interpret": 41, "window": 41, "maco": 41, "ubuntu": 41, "test": [41, 42, 333, 337, 349, 350], "detail": 41, "hypothesi": [41, 349, 350], "log": [41, 875, 876, 877, 878], "free": 41, "github": [41, 337], "codespac": 41, "pre": [41, 343], "commit": [41, 42, 343], "basic": [42, 348], "get": [42, 463], "todo": 42, "list": 42, "issu": 42, "manag": 42, "your": 42, "fork": 42, "who": 42, "To": 42, "ask": 42, "With": 42, "command": 42, "line": 42, "browser": 42, "pull": [42, 337], "request": [42, 337], "small": 42, "often": 42, "interact": 42, "contain": [42, 167, 172, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 336, 357, 460, 462, 466, 468, 471, 473, 476, 478, 481, 483, 486, 488, 491, 493, 501, 505, 515, 517, 520, 523, 525, 529, 531, 534, 537, 540, 542, 545, 547, 550, 552, 555, 558, 560, 562, 564, 567, 569, 572, 575, 577, 584, 586, 589, 591, 594, 596, 599, 601, 607, 611, 613, 617, 619, 622, 625, 628, 630, 635, 637, 640, 642, 645, 647, 650, 652, 657, 659, 678, 680, 696, 698, 707, 709, 712, 714, 717, 719, 722, 724, 727, 729, 732, 734, 737, 739, 742, 744, 747, 749, 752, 754, 757, 759, 762, 764, 767, 769, 772, 774, 777, 779, 782, 784, 787, 789, 792, 794, 797, 799, 802, 804, 807, 809, 812, 814, 817, 819, 822, 824, 827, 829, 832, 834, 837, 839, 842, 844, 847, 849, 852, 854, 857, 859, 862, 864, 867, 869, 872, 874, 877, 879, 882, 884, 887, 889, 892, 894, 897, 899, 902, 904, 907, 909, 912, 914, 917, 919, 922, 924, 927, 929, 932, 934, 937, 939, 942, 944, 947, 949, 952, 954, 957, 959, 962, 964, 967, 969, 972, 974, 977, 979, 982, 984, 987, 989, 992, 994, 997, 999, 1001, 1003, 1006, 1008, 1011, 1013, 1016, 1018, 1021, 1023, 1029, 1031, 1039, 1041, 1045, 1047, 1050, 1052, 1060, 1062, 1065, 1067, 1070, 1072, 1078, 1080, 1085, 1087, 1090, 1092, 1102, 1104, 1110, 1112, 1116, 1118, 1121, 1123, 1126, 1128, 1132, 1134, 1138, 1140, 1143, 1145, 1148, 1150, 1158, 1160, 1163, 1165, 1178, 1180, 1183, 1185, 1187, 1189, 1193, 1195, 1199, 1201, 1204, 1206, 1215, 1217, 1223, 1227, 1233, 1237, 1239, 1243, 1247, 1251, 1255, 1257, 1262, 1264, 1267, 1269, 1276, 1278, 1281, 1283, 1286, 1288, 1290, 1292, 1295, 1297, 1300, 1302, 1308, 1310, 1313, 1315, 1320, 1322, 1325, 1327, 1330, 1332, 1335, 1337, 1341, 1343, 1346, 1348, 1351, 1353, 1356, 1358, 1361, 1363, 1366, 1373, 1375, 1378, 1380, 1383, 1385, 1388, 1390, 1392, 1394, 1397, 1399, 1402, 1404, 1407, 1409, 1412, 1414, 1417, 1419, 1422, 1424, 1427, 1429, 1431, 1433, 1436, 1438, 1441, 1443, 1446, 1448, 1451, 1453, 1456, 1458, 1461, 1463, 1466, 1468, 1474, 1476, 1479, 1481, 1484, 1486, 1490, 1492, 1495, 1497, 1500, 1502, 1505, 1507, 1510, 1512, 1515, 1517, 1520, 1522, 1525, 1527, 1530, 1532, 1535, 1537, 1540, 1542, 1545, 1547, 1549, 1551, 1554, 1556, 1559, 1561, 1564, 1566, 1593, 1598, 1600, 1603, 1605, 1608, 1610, 1613, 1615, 1619, 1621, 1625, 1627, 1630, 1632, 1635, 1637, 1640, 1642, 1644, 1646, 1650, 1652, 1655, 1657, 1660, 1662, 1665, 1667, 1672, 1674, 1677, 1679, 1682, 1684, 1688, 1690, 1693, 1695, 1698, 1702, 1706, 1710, 1714, 1718, 1721, 1723, 1726, 1728, 1733, 1735, 1738, 1740], "run": [42, 333, 350], "local": 42, "most": 42, "out": [42, 344, 347], "id": [42, 333], "data": [43, 56, 103, 178, 268, 338, 348, 350, 357, 371, 389, 579, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "class": [43, 342, 348, 356, 1760], "activ": [45, 63, 168, 185, 384, 456, 1761], "arraywithactiv": 46, "convers": [49, 99, 174, 264], "args_to_ivi": 50, "args_to_n": 51, "to_ivi": 52, "to_n": 53, "creation": [54, 101, 176, 266, 387, 497], "arraywithcr": 55, "type": [56, 103, 178, 268, 338, 345, 348, 371, 389, 579], "arraywithdatatyp": 57, "devic": [58, 105, 180, 270, 339, 344, 348, 390, 670], "arraywithdevic": 59, "elementwis": [60, 107, 182, 272, 391, 704], "arraywithelementwis": 61, "arraywithactivationsextens": 64, "method": [65, 187, 336, 348, 349, 356, 357], "avg_pool3d": [66, 189, 409], "diagflat": [67, 190, 420], "dirichlet": [68, 191, 441], "exp2": [69, 192, 392], "flatten": [70, 193, 424], "fliplr": [71, 194, 425], "flipud": [72, 195, 426], "float_pow": [73, 196, 393], "fmax": [74, 197, 394], "fmod": [75, 198, 395], "gcd": [76, 199, 396], "heavisid": [77, 202, 427], "hstack": [78, 203, 428], "i0": [79, 204, 429], "isneginf": [80, 205, 397], "isposinf": [81, 206, 398], "kron": [82, 209, 421], "lcm": [83, 210, 399], "logaddexp2": [84, 211, 400], "max_pool1d": [85, 212, 414], "max_pool2d": [86, 213, 415], "max_pool3d": [87, 214, 416], "median": [88, 215, 453], "moveaxi": [89, 216, 430], "msort": [90, 217, 446], "nan_to_num": [91, 218, 401], "nansum": [92, 219, 402], "pad": [93, 220, 417], "rot90": [94, 221, 433], "sinc": [95, 222, 403], "top_k": [96, 261, 434], "trapz": [97, 404], "vstack": [98, 263, 435], "arraywithconversionsextens": 100, "arraywithcreationextens": 102, "arraywithdata_typeextens": 104, "arraywithdeviceextens": 106, "arraywithelementwiseextens": 108, "gener": [109, 137, 274, 302, 350, 352, 405, 1026], "arraywithgeneralextens": 110, "gradient": [111, 139, 276, 304, 406, 1220], "arraywithgradientsextens": 112, "imag": [113, 141, 278, 306], "arraywithimageextens": 114, "layer": [115, 143, 280, 308, 407, 1272, 1776], "arraywithlayersextens": 116, "linalg": [117, 145, 282, 310, 419, 1338], "arraywithlinalgextens": 118, "loss": [119, 147, 284, 312, 422, 1471], "arraywithlossesextens": 120, "manipul": [121, 149, 286, 314, 423, 1487], "arraywithmanipulationextens": 122, "norm": [123, 151, 288, 316, 438, 1590, 1791], "arraywithnormsextens": 124, "random": [125, 153, 290, 318, 439, 1595], "arraywithrandomextens": 126, "search": [127, 155, 292, 320, 443, 1622], "arraywithsearchingextens": 128, "arraywithsetextens": 130, "sort": [131, 159, 296, 324, 445, 1669, 1680, 1681, 1682, 1683], "arraywithsortingextens": 132, "statist": [133, 161, 298, 326, 452, 1685], "arraywithstatisticalextens": 134, "util": [135, 163, 300, 328, 454, 1730], "arraywithutilityextens": 136, "arraywithgener": 138, "arraywithgradi": 140, "arraywithimag": 142, "arraywithlay": 144, "arraywithlinalg": 146, "arraywithloss": 148, "arraywithmanipul": 150, "arraywithnorm": 152, "arraywithrandom": 154, "arraywithsearch": 156, "arraywithset": 158, "arraywithsort": 160, "arraywithstatist": 162, "arraywithutil": 164, "wrap": [165, 330, 346], "add_ivy_array_instance_method": 166, "containerwithactiv": 169, "base": 170, "containerbas": 171, "containerwithconvers": 175, "containerwithcr": 177, "containerwithdatatyp": 179, "containerwithdevic": 181, "containerwithelementwis": 183, "containerwithactivationextens": 186, "avg_pool2d": [188, 408], "hamming_window": [200, 410], "hann_window": [201, 411], "kaiser_bessel_derived_window": [207, 412], "kaiser_window": [208, 413], "static_avg_pool2d": 223, "static_avg_pool3d": 224, "static_diagflat": 225, "static_dirichlet": 226, "static_exp2": 227, "static_flatten": 228, "static_fliplr": 229, "static_flipud": 230, "static_float_pow": 231, "static_fmax": 232, "static_fmod": 233, "static_gcd": 234, "static_hamming_window": 235, "static_hann_window": 236, "static_heavisid": 237, "static_hstack": 238, "static_i0": 239, "static_isneginf": 240, "static_isposinf": 241, "static_kaiser_bessel_derived_window": 242, "static_kaiser_window": 243, "static_kron": 244, "static_lcm": 245, "static_logaddexp2": 246, "static_max_pool1d": 247, "static_max_pool2d": 248, "static_max_pool3d": 249, "static_median": 250, "static_moveaxi": 251, "static_msort": 252, "static_nan_to_num": 253, "static_nansum": 254, "static_pad": 255, "static_rot90": 256, "static_sinc": 257, "static_top_k": 258, "static_triu_indic": 259, "static_vstack": 260, "triu_indic": [262, 388], "containerwithconversionextens": 265, "containerwithcreationextens": 267, "containerwithdata_typeextens": 269, "containerwithdeviceextens": 271, "containerwithelementwiseextens": 273, "containerwithgeneralextens": 275, "containerwithgradientsextens": 277, "containerwithimageextens": 279, "containerwithlayersextens": 281, "containerwithlinalgextens": 283, "containerwithlossesextens": 285, "containerwithmanipulationextens": 287, "containerwithnormsextens": 289, "containerwithrandomextens": 291, "containerwithsearchingextens": 293, "containerwithsetextens": 295, "containerwithsortingextens": 297, "containerwithstatisticalextens": 299, "containerwithutilityextens": 301, "containerwithgener": 303, "containerwithgradi": 305, "containerwithimag": 307, "containerwithlay": 309, "containerwithlinalg": 311, "containerwithloss": 313, "containerwithmanipul": 315, "containerwithnorm": 317, "containerwithrandom": 319, "containerwithsearch": 321, "containerwithset": 323, "containerwithsort": 325, "containerwithstatist": 327, "containerwithutil": 329, "add_ivy_container_instance_method": 331, "deep": 332, "dive": 332, "termin": 333, "skip": 333, "nativ": 334, "handl": [334, 342, 371], "version": [335, 351, 371], "support": [335, 338, 348, 371], "instanc": [336, 348, 349, 356], "static": 336, "special": [336, 348, 349], "nestabl": [336, 344, 345], "continu": 337, "integr": [337, 350], "action": 337, "core": 337, "nn": 337, "state": [337, 358, 371], "ci": 337, "push": 337, "schedul": 337, "cron": 337, "job": 337, "dashboard": 337, "modul": [338, 339, 358, 1788, 1789], "promot": [338, 348], "argument": [338, 339, 344, 347, 348], "other": [338, 339], "unsupport": 338, "bug": 338, "superset": [338, 352], "docstr": [340, 341], "tan": [340, 349, 1005, 1007, 1008, 1009], "roll": [340, 1528, 1529, 1530, 1531], "add": [340, 349, 720, 721, 722, 723, 1758], "except": 342, "handle_except": 342, "decor": 342, "lint": 343, "check": [343, 371], "hook": 343, "posit": [344, 945, 946, 947, 948], "keyword": 344, "input": 344, "dtype": [344, 610, 611, 612], "number": 344, "oper": [344, 356, 371], "integ": 344, "sequenc": 344, "primari": 345, "composit": [345, 348], "mix": 345, "standalon": 345, "conveni": 345, "inplac": 347, "updat": 347, "copi": 347, "unus": 348, "miss": 348, "temporari": 348, "rule": 348, "numpi": [348, 1752], "cast": 348, "full": [349, 526], "alia": 349, "helper": [349, 350, 351], "import": 350, "strategi": 350, "we": 350, "need": 350, "how": 350, "write": 350, "effect": 350, "bonu": 350, "extend": [350, 352], "featur": 350, "self": 350, "consist": 350, "explicit": 350, "test_array_funct": 350, "fail": 350, "navig": 351, "code": 351, "categor": 351, "submodul": 351, "design": [351, 353, 1742], "pin": 351, "behaviour": 352, "what": [352, 1758], "i": 352, "A": 352, "non": 352, "duplic": 352, "when": 352, "too": 352, "much": 352, "balanc": 352, "effici": 352, "block": 354, "graph": [354, 359, 1753, 1758], "compil": [354, 359, 385, 494, 495, 1750, 1755, 1757, 1758], "framework": [355, 1752, 1755, 1758, 1759, 1760], "monkei": 356, "patch": 356, "construct": 357, "represent": 357, "recurs": 357, "built": 357, "ins": 357, "access": 357, "save": 357, "load": 357, "comparison": 357, "custom": [357, 371], "case": 357, "compartment": 357, "configur": 357, "network": [357, 359], "weight": 357, "initi": [358, 1766, 1770], "optim": [358, 1793, 1797], "transpil": 359, "role": 359, "convert": [359, 1764], "model": [359, 366, 371], "builder": 361, "ecosystem": 362, "gym": [363, 370], "mech": 364, "memori": [365, 370], "vision": [368, 370], "mechan": 370, "faq": 371, "maintain": 371, "dynam": 371, "size": 371, "shape": [371, 1174, 1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "gpu": 371, "deploy": 371, "control": 371, "flow": 371, "auto": 371, "differenti": 371, "replica": 371, "parallel": 371, "altern": 371, "structur": 371, "func": 372, "wrapper": [372, 1758, 1759], "from_zero_dim_arrays_to_float": 373, "handle_nest": 374, "handle_out_argu": 375, "infer_devic": 376, "infer_dtyp": 377, "inputs_to_ivy_arrai": 378, "inputs_to_native_arrai": 379, "integer_arrays_to_float": 380, "outputs_to_ivy_arrai": 381, "to_native_arrays_and_back": 382, "constant": [386, 496, 1767], "vorbis_window": 418, "ndenumer": 431, "ndindex": 432, "meta": [436, 1568], "nest": [437, 1572], "beta": 440, "gamma": 442, "spars": 447, "is_ivy_sparse_arrai": 448, "is_native_sparse_arrai": 449, "native_sparse_arrai": 450, "native_sparse_array_to_indices_values_and_shap": 451, "deseri": 457, "gelu": [458, 459, 460, 461, 1763], "static_gelu": 462, "leaky_relu": [464, 465, 466, 467], "static_leaky_relu": 468, "log_softmax": [469, 470, 471, 472], "static_log_softmax": 473, "relu": [474, 475, 476, 477], "static_relu": 478, "sigmoid": [479, 480, 481, 482], "static_sigmoid": 483, "softmax": [484, 485, 486, 487], "static_softmax": 488, "softplu": [489, 490, 491, 492], "static_softplu": 493, "note": [497, 521, 524], "nestedsequ": 498, "arang": [499, 500], "static_arang": 501, "asarrai": [502, 503, 504], "static_asarrai": 505, "asarray_handle_nest": 506, "asarray_infer_devic": 507, "asarray_to_native_arrays_and_back": 508, "copy_arrai": [509, 510, 511], "empti": 512, "empty_lik": [513, 514, 515, 516], "static_empty_lik": 517, "ey": [518, 519], "static_ey": 520, "from_dlpack": [521, 522, 523, 524], "static_from_dlpack": 525, "full_lik": [527, 528, 529, 530], "static_full_lik": 531, "linspac": [532, 533], "static_linspac": 534, "logspac": [535, 536], "static_logspac": 537, "meshgrid": [538, 539, 540, 541], "static_meshgrid": 542, "native_arrai": [543, 544, 545, 546], "static_native_arrai": 547, "one_hot": [548, 549, 550, 551], "static_one_hot": 552, "ones": [553, 554], "static_on": 555, "ones_lik": [556, 557, 558, 559], "static_ones_lik": 560, "tril": [561, 563, 564, 565], "static_tril": 562, "triu": [566, 568, 569, 570], "static_triu": 567, "zero": [571, 573, 1775], "static_zero": 572, "zeros_lik": [574, 576, 577, 578], "static_zeros_lik": 575, "as_ivy_dtyp": 580, "as_native_dtyp": 581, "astyp": [582, 583, 584, 585], "static_astyp": 586, "broadcast_arrai": [587, 588, 589, 590], "static_broadcast_arrai": 591, "broadcast_to": [592, 593, 594, 595], "static_broadcast_to": 596, "can_cast": [597, 598, 599, 600], "static_can_cast": 601, "check_float": 602, "closest_valid_dtyp": 603, "default_dtyp": 604, "default_float_dtyp": [605, 606], "static_default_float_dtyp": 607, "default_int_dtyp": 608, "default_uint_dtyp": 609, "static_dtyp": 613, "dtype_bit": 614, "finfo": [615, 616, 617, 618], "static_finfo": 619, "function_supported_dtyp": [620, 621], "static_function_supported_dtyp": 622, "function_unsupported_dtyp": [623, 624], "static_function_unsupported_dtyp": 625, "iinfo": [626, 627, 628, 629], "static_iinfo": 630, "infer_default_dtyp": 631, "invalid_dtyp": 632, "is_bool_dtyp": [633, 634, 635, 636], "static_is_bool_dtyp": 637, "is_float_dtyp": [638, 639, 640, 641], "static_is_float_dtyp": 642, "is_int_dtyp": [643, 644, 645, 646], "static_is_int_dtyp": 647, "is_uint_dtyp": [648, 649, 650, 651], "static_is_uint_dtyp": 652, "promote_typ": 653, "promote_types_of_input": 654, "result_typ": [655, 656, 657, 658], "static_result_typ": 659, "set_default_dtyp": 660, "set_default_float_dtyp": 661, "set_default_int_dtyp": 662, "set_default_uint_dtyp": 663, "type_promote_arrai": 664, "unset_default_dtyp": 665, "unset_default_float_dtyp": 666, "unset_default_int_dtyp": 667, "unset_default_uint_dtyp": 668, "valid_dtyp": 669, "profil": 671, "as_ivy_dev": 672, "as_native_dev": 673, "clear_mem_on_dev": 674, "default_devic": 675, "dev": [676, 677, 678, 679], "static_dev": 680, "dev_util": 681, "function_supported_devic": 682, "function_unsupported_devic": 683, "get_all_ivy_arrays_on_dev": 684, "gpu_is_avail": 685, "num_cpu_cor": 686, "num_gpu": 687, "num_ivy_arrays_on_dev": 688, "percent_used_mem_on_dev": 689, "print_all_ivy_arrays_on_dev": 690, "set_default_devic": 691, "set_split_factor": 692, "split_factor": 693, "split_func_cal": 694, "to_devic": [695, 697, 698, 699], "static_to_devic": 696, "total_mem_on_dev": 700, "tpu_is_avail": 701, "unset_default_devic": 702, "used_mem_on_dev": 703, "ab": [705, 706, 707, 708], "static_ab": 709, "aco": [710, 711, 712, 713], "static_aco": 714, "acosh": [715, 716, 717, 718], "static_acosh": 719, "static_add": 724, "asin": [725, 726, 727, 728], "static_asin": 729, "asinh": [730, 731, 732, 733], "static_asinh": 734, "atan": [735, 736, 737, 738], "static_atan": 739, "atan2": [740, 741, 742, 743], "static_atan2": 744, "atanh": [745, 746, 747, 748], "static_atanh": 749, "bitwise_and": [750, 751, 752, 753], "static_bitwise_and": 754, "bitwise_invert": [755, 756, 757, 758], "static_bitwise_invert": 759, "bitwise_left_shift": [760, 761, 762, 763], "static_bitwise_left_shift": 764, "bitwise_or": [765, 766, 767, 768], "static_bitwise_or": 769, "bitwise_right_shift": [770, 771, 772, 773], "static_bitwise_right_shift": 774, "bitwise_xor": [775, 776, 777, 778], "static_bitwise_xor": 779, "ceil": [780, 781, 782, 783], "static_ceil": 784, "co": [785, 786, 787, 788], "static_co": 789, "cosh": [790, 791, 792, 793], "static_cosh": 794, "deg2rad": [795, 796, 797, 798], "static_deg2rad": 799, "divid": [800, 801, 802, 803], "static_divid": 804, "equal": [805, 806, 807, 808], "static_equ": 809, "erf": [810, 811, 812, 813], "static_erf": 814, "exp": [815, 816, 817, 818], "static_exp": 819, "expm1": [820, 821, 822, 823], "static_expm1": 824, "floor": [825, 826, 827, 828], "static_floor": 829, "floor_divid": [830, 831, 832, 833], "static_floor_divid": 834, "greater": [835, 836, 837, 838], "static_great": 839, "greater_equ": [840, 841, 842, 843], "static_greater_equ": 844, "isfinit": [845, 846, 847, 848], "static_isfinit": 849, "isinf": [850, 851, 852, 853], "static_isinf": 854, "isnan": [855, 856, 857, 858], "static_isnan": 859, "isreal": [860, 861, 862, 863], "static_isr": 864, "less": [865, 866, 867, 868], "static_less": 869, "less_equ": [870, 871, 872, 873], "static_less_equ": 874, "static_log": 879, "log10": [880, 881, 882, 883], "static_log10": 884, "log1p": [885, 886, 887, 888], "static_log1p": 889, "log2": [890, 891, 892, 893], "static_log2": 894, "logaddexp": [895, 896, 897, 898], "static_logaddexp": 899, "logical_and": [900, 901, 902, 903], "static_logical_and": 904, "logical_not": [905, 906, 907, 908], "static_logical_not": 909, "logical_or": [910, 911, 912, 913], "static_logical_or": 914, "logical_xor": [915, 916, 917, 918], "static_logical_xor": 919, "maximum": [920, 921, 922, 923], "static_maximum": 924, "minimum": [925, 926, 927, 928], "static_minimum": 929, "multipli": [930, 931, 932, 933], "static_multipli": 934, "neg": [935, 936, 937, 938], "static_neg": 939, "not_equ": [940, 941, 942, 943], "static_not_equ": 944, "static_posit": 949, "pow": [950, 951, 952, 953], "static_pow": 954, "rad2deg": [955, 956, 957, 958], "static_rad2deg": 959, "reciproc": [960, 961, 962, 963], "static_reciproc": 964, "remaind": [965, 966, 967, 968], "static_remaind": 969, "round": [970, 971, 972, 973], "static_round": 974, "sign": [975, 976, 977, 978], "static_sign": 979, "sin": [980, 981, 982, 983], "static_sin": 984, "sinh": [985, 986, 987, 988], "static_sinh": 989, "sqrt": [990, 991, 992, 993], "static_sqrt": 994, "squar": [995, 996, 997, 998], "static_squar": 999, "subtract": [1000, 1002, 1003, 1004], "static_subtract": 1001, "static_tan": 1006, "tanh": [1010, 1012, 1013, 1014], "static_tanh": 1011, "trunc": [1015, 1017, 1018, 1019], "static_trunc": 1016, "trunc_divid": [1020, 1022, 1023, 1024], "static_trunc_divid": 1021, "all_equ": [1027, 1028, 1029, 1030], "static_all_equ": 1031, "arg_info": 1032, "arg_nam": 1033, "array_equ": [1034, 1035, 1036], "assert_supports_inplac": [1037, 1038, 1039, 1040], "static_assert_supports_inplac": 1041, "cache_fn": 1042, "clip_matrix_norm": [1043, 1044, 1045, 1046], "static_clip_matrix_norm": 1047, "clip_vector_norm": [1048, 1049, 1050, 1051], "static_clip_vector_norm": 1052, "container_typ": 1053, "current_backend_str": 1054, "default": [1055, 1056, 1057], "einops_rearrang": [1058, 1059, 1060, 1061], "static_einops_rearrang": 1062, "einops_reduc": [1063, 1064, 1065, 1066], "static_einops_reduc": 1067, "einops_repeat": [1068, 1069, 1070, 1071], "static_einops_repeat": 1072, "exist": [1073, 1074, 1075], "fourier_encod": [1076, 1077, 1078, 1079], "static_fourier_encod": 1080, "function_supported_devices_and_dtyp": 1081, "function_unsupported_devices_and_dtyp": 1082, "gather": [1083, 1084, 1085, 1086], "static_gath": 1087, "gather_nd": [1088, 1089, 1090, 1091], "static_gather_nd": 1092, "get_all_arrays_in_memori": 1093, "get_array_mod": 1094, "get_exception_trace_mod": 1095, "get_item": 1096, "get_min_bas": 1097, "get_min_denomin": 1098, "get_nestable_mod": 1099, "get_num_dim": [1100, 1101, 1102, 1103], "static_get_num_dim": 1104, "get_queue_timeout": 1105, "get_referrers_recurs": 1106, "get_tmp_dir": 1107, "has_nan": [1108, 1109, 1110, 1111], "static_has_nan": 1112, "inplace_arrays_support": 1113, "inplace_decr": [1114, 1115, 1116, 1117], "static_inplace_decr": 1118, "inplace_incr": [1119, 1120, 1121, 1122], "static_inplace_incr": 1123, "inplace_upd": [1124, 1125, 1126, 1127], "static_inplace_upd": 1128, "inplace_variables_support": 1129, "is_arrai": [1130, 1131, 1132, 1133], "static_is_arrai": 1134, "is_frontend_arrai": 1135, "is_ivy_arrai": [1136, 1137, 1138, 1139], "static_is_ivy_arrai": 1140, "is_ivy_contain": [1141, 1142, 1143, 1144], "static_is_ivy_contain": 1145, "is_native_arrai": [1146, 1147, 1148, 1149], "static_is_native_arrai": 1150, "isscalar": 1151, "match_kwarg": 1152, "multiprocess": 1153, "num_arrays_in_memori": 1154, "print_all_arrays_in_memori": 1155, "scatter_flat": [1156, 1157, 1158, 1159], "static_scatter_flat": 1160, "scatter_nd": [1161, 1162, 1163, 1164], "static_scatter_nd": 1165, "set_array_mod": 1166, "set_exception_trace_mod": 1167, "set_min_bas": 1168, "set_min_denomin": 1169, "set_nestable_mod": 1170, "set_queue_timeout": 1171, "set_shape_array_mod": 1172, "set_tmp_dir": 1173, "shape_array_mod": 1175, "stable_divid": [1176, 1177, 1178, 1179], "static_stable_divid": 1180, "stable_pow": [1181, 1182, 1183, 1184], "static_stable_pow": 1185, "supports_inplace_upd": [1186, 1188, 1189, 1190], "static_supports_inplace_upd": 1187, "to_ivy_shap": 1191, "to_list": [1192, 1194, 1195, 1196], "static_to_list": 1193, "to_native_shap": 1197, "to_numpi": [1198, 1200, 1201, 1202], "static_to_numpi": 1199, "to_scalar": [1203, 1205, 1206, 1207], "static_to_scalar": 1204, "try_else_non": 1208, "unset_array_mod": 1209, "unset_exception_trace_mod": 1210, "unset_nestable_mod": 1211, "unset_queue_timeout": 1212, "unset_shape_array_mod": 1213, "value_is_nan": [1214, 1216, 1217, 1218], "static_value_is_nan": 1215, "vmap": 1219, "adam_step": [1221, 1222, 1223, 1224], "adam_upd": [1225, 1226, 1227, 1228], "execute_with_gradi": 1229, "grad": 1230, "gradient_descent_upd": [1231, 1232, 1233, 1234], "is_vari": [1235, 1236, 1237, 1238], "static_is_vari": 1239, "jac": 1240, "lamb_upd": [1241, 1242, 1243, 1244], "lars_upd": [1245, 1246, 1247, 1248], "optimizer_upd": [1249, 1250, 1251, 1252], "set_with_grad": 1253, "stop_gradi": [1254, 1256, 1257, 1258], "static_stop_gradi": 1255, "unset_with_grad": 1259, "value_and_grad": 1260, "variabl": [1261, 1263, 1264, 1265], "static_vari": 1262, "variable_data": [1266, 1268, 1269, 1270], "static_variable_data": 1267, "with_grad": 1271, "conv": 1273, "conv1d": [1274, 1275, 1276, 1277, 1777], "static_conv1d": 1278, "conv1d_transpos": [1279, 1280, 1281, 1282], "static_conv1d_transpos": 1283, "conv2d": [1284, 1285, 1286, 1287, 1779], "static_conv2d": 1288, "conv2d_transpos": [1289, 1290, 1291], "static_conv2d_transpos": 1292, "conv3d": [1293, 1294, 1295, 1296, 1781], "static_conv3d": 1297, "conv3d_transpos": [1298, 1299, 1300, 1301], "static_conv3d_transpos": 1302, "conv_general_dil": 1303, "conv_general_transpos": 1304, "deconv_length": 1305, "depthwise_conv2d": [1306, 1307, 1308, 1309], "static_depthwise_conv2d": 1310, "dropout": [1311, 1312, 1313, 1314, 1784], "static_dropout": 1315, "get_x_data_format": 1316, "handle_pad": 1317, "linear": [1318, 1319, 1320, 1321, 1786], "static_linear": 1322, "lstm_updat": [1323, 1324, 1325, 1326], "static_lstm_upd": 1327, "multi_head_attent": [1328, 1329, 1330, 1331], "static_multi_head_attent": 1332, "scaled_dot_product_attent": [1333, 1334, 1335, 1336], "static_scaled_dot_product_attent": 1337, "choleski": [1339, 1340, 1341, 1342], "static_choleski": 1343, "cross": [1344, 1345, 1346, 1347], "static_cross": 1348, "det": [1349, 1350, 1351, 1352], "static_det": 1353, "diag": [1354, 1355, 1356, 1357], "static_diag": 1358, "diagon": [1359, 1360, 1361, 1362], "static_diagon": 1363, "eigh": [1364, 1365, 1366, 1367], "eigvalsh": [1368, 1369, 1370], "inner": [1371, 1372, 1373, 1374], "static_inn": 1375, "inv": [1376, 1377, 1378, 1379], "static_inv": 1380, "matmul": [1381, 1382, 1383, 1384], "static_matmul": 1385, "matrix_norm": [1386, 1387, 1388, 1389], "static_matrix_norm": 1390, "matrix_pow": [1391, 1392, 1393], "static_matrix_pow": 1394, "matrix_rank": [1395, 1396, 1397, 1398], "static_matrix_rank": 1399, "matrix_transpos": [1400, 1401, 1402, 1403], "static_matrix_transpos": 1404, "outer": [1405, 1406, 1407, 1408], "static_out": 1409, "pinv": [1410, 1411, 1412, 1413], "static_pinv": 1414, "qr": [1415, 1416, 1417, 1418], "static_qr": 1419, "slogdet": [1420, 1421, 1422, 1423], "static_slogdet": 1424, "solv": [1425, 1426, 1427, 1428], "static_solv": 1429, "svd": [1430, 1432, 1433, 1434], "static_svd": 1431, "svdval": [1435, 1437, 1438, 1439], "static_svdv": 1436, "tensordot": [1440, 1442, 1443, 1444], "static_tensordot": 1441, "trace": [1445, 1447, 1448, 1449], "static_trac": 1446, "vander": [1450, 1452, 1453, 1454], "static_vand": 1451, "vecdot": [1455, 1457, 1458, 1459], "static_vecdot": 1456, "vector_norm": [1460, 1462, 1463, 1464], "static_vector_norm": 1461, "vector_to_skew_symmetric_matrix": [1465, 1467, 1468, 1469], "static_vector_to_skew_symmetric_matrix": 1466, "binary_cross_entropi": [1472, 1473, 1474, 1475], "static_binary_cross_entropi": 1476, "cross_entropi": [1477, 1478, 1479, 1480], "static_cross_entropi": 1481, "sparse_cross_entropi": [1482, 1483, 1484, 1485], "static_sparse_cross_entropi": 1486, "clip": [1488, 1489, 1490, 1491], "static_clip": 1492, "concat": [1493, 1494, 1495, 1496], "static_concat": 1497, "constant_pad": [1498, 1499, 1500, 1501], "static_constant_pad": 1502, "expand_dim": [1503, 1504, 1505, 1506], "static_expand_dim": 1507, "flip": [1508, 1509, 1510, 1511], "static_flip": 1512, "permute_dim": [1513, 1514, 1515, 1516], "static_permute_dim": 1517, "repeat": [1518, 1519, 1520, 1521], "static_repeat": 1522, "reshap": [1523, 1524, 1525, 1526], "static_reshap": 1527, "static_rol": 1532, "split": [1533, 1534, 1535, 1536], "static_split": 1537, "squeez": [1538, 1539, 1540, 1541], "static_squeez": 1542, "stack": [1543, 1544, 1545, 1546], "static_stack": 1547, "swapax": [1548, 1550, 1551, 1552], "static_swapax": 1549, "tile": [1553, 1555, 1556, 1557], "static_til": 1554, "unstack": [1558, 1560, 1561, 1562], "static_unstack": 1559, "zero_pad": [1563, 1565, 1566, 1567], "static_zero_pad": 1564, "fomaml_step": 1569, "maml_step": 1570, "reptile_step": 1571, "all_nested_indic": 1573, "copy_nest": 1574, "index_nest": 1575, "insert_into_nest_at_index": 1576, "insert_into_nest_at_indic": 1577, "map": 1578, "map_nest_at_index": 1579, "map_nest_at_indic": 1580, "multi_index_nest": 1581, "nested_ani": 1582, "nested_argwher": 1583, "nested_map": 1584, "nested_multi_map": 1585, "prune_nest_at_index": 1586, "prune_nest_at_indic": 1587, "set_nest_at_index": 1588, "set_nest_at_indic": 1589, "layer_norm": [1591, 1592, 1593, 1594], "multinomi": [1596, 1597, 1598, 1599], "static_multinomi": 1600, "randint": [1601, 1602, 1603, 1604], "static_randint": 1605, "random_norm": [1606, 1607, 1608, 1609], "static_random_norm": 1610, "random_uniform": [1611, 1612, 1613, 1614], "static_random_uniform": 1615, "seed": 1616, "shuffl": [1617, 1618, 1619, 1620], "static_shuffl": 1621, "argmax": [1623, 1624, 1625, 1626], "static_argmax": 1627, "argmin": [1628, 1629, 1630, 1631], "static_argmin": 1632, "argwher": [1633, 1634, 1635, 1636], "static_argwher": 1637, "nonzero": [1638, 1639, 1640, 1641], "static_nonzero": 1642, "static_wher": 1644, "depend": [1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "output": [1648, 1649, 1653, 1654, 1658, 1659, 1663, 1664, 1668], "unique_al": [1649, 1651, 1652, 1653], "static_unique_al": 1650, "unique_count": [1654, 1656, 1657, 1658], "static_unique_count": 1655, "unique_invers": [1659, 1661, 1662, 1663], "static_unique_invers": 1660, "unique_valu": [1664, 1666, 1667, 1668], "static_unique_valu": 1665, "argsort": [1670, 1671, 1672, 1673], "static_argsort": 1674, "searchsort": [1675, 1676, 1677, 1678], "static_searchsort": 1679, "static_sort": 1684, "cumprod": [1686, 1687, 1688, 1689], "static_cumprod": 1690, "cumsum": [1691, 1692, 1693, 1694], "static_cumsum": 1695, "einsum": [1696, 1697, 1698, 1699], "max": [1700, 1701, 1702, 1703], "mean": [1704, 1705, 1706, 1707], "min": [1708, 1709, 1710, 1711], "prod": [1712, 1713, 1714, 1715], "std": [1716, 1717, 1718, 1719], "sum": [1720, 1722, 1723, 1724], "static_sum": 1721, "var": [1725, 1727, 1728, 1729], "static_var": 1726, "all": [1731, 1732, 1733, 1734], "static_al": 1735, "ani": [1736, 1737, 1738, 1739], "static_ani": 1740, "glossari": 1741, "content": 1742, "overview": 1742, "quick": 1742, "start": 1742, "citat": 1742, "inspect": 1745, "add_array_spec": 1746, "fn_array_spec": 1747, "relat": 1748, "infrastructur": [1750, 1758], "llvm": 1750, "mlir": 1750, "oneapi": 1750, "exchang": [1751, 1758], "onnx": 1751, "nnef": 1751, "coreml": 1751, "matlab": 1752, "scipi": 1752, "torch": [1752, 1753], "scikit": 1752, "learn": 1752, "theano": 1752, "panda": 1752, "julia": 1752, "apach": [1752, 1755], "spark": 1752, "mllib": 1752, "caff": 1752, "chainer": 1752, "tensorflow": 1752, "1": 1752, "mxnet": 1752, "cntk": 1752, "pytorch": 1752, "flux": 1752, "jax": 1752, "2": 1752, "dex": 1752, "languag": 1752, "tracer": [1753, 1758], "tf": 1753, "jaxpr": 1753, "jit": 1753, "fx": 1753, "compani": [1754, 1758], "quansight": 1754, "modular": 1754, "octoml": 1754, "multi": [1755, 1758], "vendor": [1755, 1756, 1757, 1758], "tvm": 1755, "xla": 1755, "gcc": 1755, "specif": [1756, 1757, 1758], "tensorrt": 1756, "cuda": 1756, "icc": 1757, "icx": 1757, "nvcc": 1757, "doe": 1758, "eagerpi": 1759, "kera": 1759, "thinc": 1759, "tensorli": 1759, "neuropod": 1759, "geglu": 1762, "to_ivy_modul": 1765, "firstlayersiren": 1768, "glorotuniform": 1769, "kaimingnorm": 1771, "Ones": 1772, "siren": 1773, "uniform": 1774, "conv1dtranspos": 1778, "conv2dtranspos": 1780, "conv3dtranspos": 1782, "depthwiseconv2d": 1783, "lstm": 1785, "multiheadattent": 1787, "newtorchmodul": 1790, "layernorm": 1792, "adam": 1794, "lamb": 1795, "lar": 1796, "sgd": 1798, "sequenti": [1799, 1800], "verbos": 1802, "cprint": 1803}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})